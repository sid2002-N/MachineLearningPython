{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMCwpWNk3GpD76lnoDKh3p/"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":5,"metadata":{"id":"k2m977d3FENS","executionInfo":{"status":"ok","timestamp":1725860466773,"user_tz":-330,"elapsed":462,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as mp\n","from matplotlib import pyplot as plt\n","import seaborn as sns\n","import nltk\n"]},{"cell_type":"code","source":["from google.colab import files\n","files.upload()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000,"output_embedded_package_id":"1xXQuzJUWawouU9mLQ5nxYa3O10I2NtDQ"},"id":"Kb5Y08RuGnaY","executionInfo":{"status":"ok","timestamp":1725860036136,"user_tz":-330,"elapsed":105493,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"0a1d3995-9b50-402f-9039-21c8fd885053"},"execution_count":3,"outputs":[{"output_type":"display_data","data":{"text/plain":"Output hidden; open in https://colab.research.google.com to view."},"metadata":{}}]},{"cell_type":"code","source":["xbox = pd.read_csv('xbox.csv')\n","xbox"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"YmVYoeEiHCG3","executionInfo":{"status":"ok","timestamp":1725860469483,"user_tz":-330,"elapsed":499,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"2a0c5799-5114-4e52-94f3-f9d3448c7fb5"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                           user      sku      category  \\\n","0      0001cd0d10bbc585c9ba287c963e00873d4c0bfd  2032076  abcat0701002   \n","1      00033dbced6acd3626c4b56ff5c55b8d69911681  9854804  abcat0701002   \n","2      00033dbced6acd3626c4b56ff5c55b8d69911681  2670133  abcat0701002   \n","3      00033dbced6acd3626c4b56ff5c55b8d69911681  9984142  abcat0701002   \n","4      0007756f015345450f7be1df33695421466b7ce4  2541184  abcat0701002   \n","...                                         ...      ...           ...   \n","42360  fff95d849a4d9c9946e081459471adf4a7192d79  2670133  abcat0701002   \n","42361  fffa393d127dec90b7eae4718535bd16be3b394d  2173065  abcat0701002   \n","42362  fffa393d127dec90b7eae4718535bd16be3b394d  3046603  abcat0701002   \n","42363  fffd288ec29a96dbac7356bcda0a1e9f88255a5b  2340293  abcat0701002   \n","42364  ffff8ecfaaf3f1fab67c8f6739c131ec818dd4a6  2953607  abcat0701002   \n","\n","                         query               click_time  \\\n","0                 gears of war  2011-10-09 17:22:56.101   \n","1                 Gears of war  2011-09-25 13:35:42.198   \n","2                 Gears of war  2011-09-25 13:36:08.668   \n","3               Assassin creed  2011-09-25 13:37:23.709   \n","4                  dead island  2011-09-11 15:15:34.336   \n","...                        ...                      ...   \n","42360         Modern warfare 3  2011-09-27 22:53:29.344   \n","42361                   Batman  2011-10-14 12:44:14.669   \n","42362                   Batman  2011-10-14 12:44:31.228   \n","42363                360 games  2011-10-10 08:46:10.368   \n","42364  Limited edition forza 4  2011-10-04 23:55:33.776   \n","\n","                    query_time  \n","0      2011-10-09 17:21:42.917  \n","1      2011-09-25 13:35:33.234  \n","2      2011-09-25 13:35:33.234  \n","3      2011-09-25 13:37:00.049  \n","4      2011-09-11 15:15:26.206  \n","...                        ...  \n","42360  2011-09-27 22:53:04.644  \n","42361  2011-10-14 12:44:07.004  \n","42362  2011-10-14 12:44:07.004  \n","42363  2011-10-10 08:43:56.768  \n","42364  2011-10-04 23:55:15.853  \n","\n","[42365 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-8beb7bcd-725c-4f5e-a23f-56bc3ab0d46f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user</th>\n","      <th>sku</th>\n","      <th>category</th>\n","      <th>query</th>\n","      <th>click_time</th>\n","      <th>query_time</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0001cd0d10bbc585c9ba287c963e00873d4c0bfd</td>\n","      <td>2032076</td>\n","      <td>abcat0701002</td>\n","      <td>gears of war</td>\n","      <td>2011-10-09 17:22:56.101</td>\n","      <td>2011-10-09 17:21:42.917</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>00033dbced6acd3626c4b56ff5c55b8d69911681</td>\n","      <td>9854804</td>\n","      <td>abcat0701002</td>\n","      <td>Gears of war</td>\n","      <td>2011-09-25 13:35:42.198</td>\n","      <td>2011-09-25 13:35:33.234</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>00033dbced6acd3626c4b56ff5c55b8d69911681</td>\n","      <td>2670133</td>\n","      <td>abcat0701002</td>\n","      <td>Gears of war</td>\n","      <td>2011-09-25 13:36:08.668</td>\n","      <td>2011-09-25 13:35:33.234</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>00033dbced6acd3626c4b56ff5c55b8d69911681</td>\n","      <td>9984142</td>\n","      <td>abcat0701002</td>\n","      <td>Assassin creed</td>\n","      <td>2011-09-25 13:37:23.709</td>\n","      <td>2011-09-25 13:37:00.049</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0007756f015345450f7be1df33695421466b7ce4</td>\n","      <td>2541184</td>\n","      <td>abcat0701002</td>\n","      <td>dead island</td>\n","      <td>2011-09-11 15:15:34.336</td>\n","      <td>2011-09-11 15:15:26.206</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>42360</th>\n","      <td>fff95d849a4d9c9946e081459471adf4a7192d79</td>\n","      <td>2670133</td>\n","      <td>abcat0701002</td>\n","      <td>Modern warfare 3</td>\n","      <td>2011-09-27 22:53:29.344</td>\n","      <td>2011-09-27 22:53:04.644</td>\n","    </tr>\n","    <tr>\n","      <th>42361</th>\n","      <td>fffa393d127dec90b7eae4718535bd16be3b394d</td>\n","      <td>2173065</td>\n","      <td>abcat0701002</td>\n","      <td>Batman</td>\n","      <td>2011-10-14 12:44:14.669</td>\n","      <td>2011-10-14 12:44:07.004</td>\n","    </tr>\n","    <tr>\n","      <th>42362</th>\n","      <td>fffa393d127dec90b7eae4718535bd16be3b394d</td>\n","      <td>3046603</td>\n","      <td>abcat0701002</td>\n","      <td>Batman</td>\n","      <td>2011-10-14 12:44:31.228</td>\n","      <td>2011-10-14 12:44:07.004</td>\n","    </tr>\n","    <tr>\n","      <th>42363</th>\n","      <td>fffd288ec29a96dbac7356bcda0a1e9f88255a5b</td>\n","      <td>2340293</td>\n","      <td>abcat0701002</td>\n","      <td>360 games</td>\n","      <td>2011-10-10 08:46:10.368</td>\n","      <td>2011-10-10 08:43:56.768</td>\n","    </tr>\n","    <tr>\n","      <th>42364</th>\n","      <td>ffff8ecfaaf3f1fab67c8f6739c131ec818dd4a6</td>\n","      <td>2953607</td>\n","      <td>abcat0701002</td>\n","      <td>Limited edition forza 4</td>\n","      <td>2011-10-04 23:55:33.776</td>\n","      <td>2011-10-04 23:55:15.853</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>42365 rows Ã— 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8beb7bcd-725c-4f5e-a23f-56bc3ab0d46f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8beb7bcd-725c-4f5e-a23f-56bc3ab0d46f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8beb7bcd-725c-4f5e-a23f-56bc3ab0d46f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6b518c90-16ed-4cb9-8d42-91d40db80624\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6b518c90-16ed-4cb9-8d42-91d40db80624')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6b518c90-16ed-4cb9-8d42-91d40db80624 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_7859e98d-a4aa-49ed-9382-31db71978edd\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('xbox')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_7859e98d-a4aa-49ed-9382-31db71978edd button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('xbox');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"xbox","summary":"{\n  \"name\": \"xbox\",\n  \"rows\": 42365,\n  \"fields\": [\n    {\n      \"column\": \"user\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 38024,\n        \"samples\": [\n          \"4b80aae0e8a513155c5f6872f1e226c2b7d02a90\",\n          \"58f0c627f55badcbc846362bd7d88bf1b461c12f\",\n          \"d395e25a54678e37558e9be1aa31f7eccc58ce7b\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sku\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 48580312868525,\n        \"min\": 1004622,\n        \"max\": 9999169100050027,\n        \"num_unique_values\": 413,\n        \"samples\": [\n          7294616,\n          3847419,\n          2011559\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"abcat0701002\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"query\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5960,\n        \"samples\": [\n          \"Laptop with xbox\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"click_time\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 42364,\n        \"samples\": [\n          \"2011-09-14 08:30:21.331\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"query_time\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 40385,\n        \"samples\": [\n          \"2011-08-18 21:51:29.429\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["xbox.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":272},"id":"a9WqutRqHaRR","executionInfo":{"status":"ok","timestamp":1725860472257,"user_tz":-330,"elapsed":423,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"c9a48b25-d488-4ca0-a013-59372b53ca47"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["user          0\n","sku           0\n","category      0\n","query         0\n","click_time    0\n","query_time    0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>user</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>sku</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>category</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>query</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>click_time</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>query_time</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["xbox.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"XO1N2NICIMG4","executionInfo":{"status":"ok","timestamp":1725860473945,"user_tz":-330,"elapsed":12,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"ef8aa868-9486-482b-a254-ba7eede90496"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                sku\n","count  4.236500e+04\n","mean   2.360281e+11\n","std    4.858031e+13\n","min    1.004622e+06\n","25%    2.173065e+06\n","50%    2.670133e+06\n","75%    3.046603e+06\n","max    9.999169e+15"],"text/html":["\n","  <div id=\"df-26fb5a6a-60bb-4b3c-af88-0ad62e02137a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sku</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>4.236500e+04</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>2.360281e+11</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>4.858031e+13</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.004622e+06</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2.173065e+06</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>2.670133e+06</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>3.046603e+06</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>9.999169e+15</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-26fb5a6a-60bb-4b3c-af88-0ad62e02137a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-26fb5a6a-60bb-4b3c-af88-0ad62e02137a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-26fb5a6a-60bb-4b3c-af88-0ad62e02137a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ca841009-8b19-4d7b-bf54-b1a11d4dd95e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ca841009-8b19-4d7b-bf54-b1a11d4dd95e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ca841009-8b19-4d7b-bf54-b1a11d4dd95e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"xbox\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"sku\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3532815375538368.0,\n        \"min\": 42365.0,\n        \"max\": 9999169100050028.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          236028142429.06842,\n          2670133.0,\n          42365.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["xbox.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sICtmDsrISl2","executionInfo":{"status":"ok","timestamp":1725860474990,"user_tz":-330,"elapsed":426,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"049bfd5e-9828-4405-e952-d5112e087368"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 42365 entries, 0 to 42364\n","Data columns (total 6 columns):\n"," #   Column      Non-Null Count  Dtype \n","---  ------      --------------  ----- \n"," 0   user        42365 non-null  object\n"," 1   sku         42365 non-null  int64 \n"," 2   category    42365 non-null  object\n"," 3   query       42365 non-null  object\n"," 4   click_time  42365 non-null  object\n"," 5   query_time  42365 non-null  object\n","dtypes: int64(1), object(5)\n","memory usage: 1.9+ MB\n"]}]},{"cell_type":"code","source":["xbox['query'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":489},"id":"4DXUFd0DIioN","executionInfo":{"status":"ok","timestamp":1725860476109,"user_tz":-330,"elapsed":11,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"f6b9c0d4-8fa0-43c3-e69c-38f1af3aaa16"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["query\n","Gears of war 3                             1471\n","Dead island                                1350\n","Battlefield 3                              1012\n","dead island                                 911\n","gears of war 3                              877\n","                                           ... \n","ccall of duty modern warfare 3 hardened       1\n","Batman the brave and the bold                 1\n","dc xbox                                       1\n","chuck dvd                                     1\n","Limited edition forza 4                       1\n","Name: count, Length: 5960, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>query</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Gears of war 3</th>\n","      <td>1471</td>\n","    </tr>\n","    <tr>\n","      <th>Dead island</th>\n","      <td>1350</td>\n","    </tr>\n","    <tr>\n","      <th>Battlefield 3</th>\n","      <td>1012</td>\n","    </tr>\n","    <tr>\n","      <th>dead island</th>\n","      <td>911</td>\n","    </tr>\n","    <tr>\n","      <th>gears of war 3</th>\n","      <td>877</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>ccall of duty modern warfare 3 hardened</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Batman the brave and the bold</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>dc xbox</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>chuck dvd</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Limited edition forza 4</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5960 rows Ã— 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["type(xbox)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":203},"id":"XXW2tCaLKZBK","executionInfo":{"status":"ok","timestamp":1725860477733,"user_tz":-330,"elapsed":486,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"e7df42e2-268b-491d-b844-c773968c105a"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["pandas.core.frame.DataFrame"],"text/html":["<div style=\"max-width:800px; border: 1px solid var(--colab-border-color);\"><style>\n","      pre.function-repr-contents {\n","        overflow-x: auto;\n","        padding: 8px 12px;\n","        max-height: 500px;\n","      }\n","\n","      pre.function-repr-contents.function-repr-contents-collapsed {\n","        cursor: pointer;\n","        max-height: 100px;\n","      }\n","    </style>\n","    <pre style=\"white-space: initial; background:\n","         var(--colab-secondary-surface-color); padding: 8px 12px;\n","         border-bottom: 1px solid var(--colab-border-color);\"><b>pandas.core.frame.DataFrame</b><br/>def __init__(data=None, index: Axes | None=None, columns: Axes | None=None, dtype: Dtype | None=None, copy: bool | None=None) -&gt; None</pre><pre class=\"function-repr-contents function-repr-contents-collapsed\" style=\"\"><a class=\"filepath\" style=\"display:none\" href=\"#\">/usr/local/lib/python3.10/dist-packages/pandas/core/frame.py</a>Two-dimensional, size-mutable, potentially heterogeneous tabular data.\n","\n","Data structure also contains labeled axes (rows and columns).\n","Arithmetic operations align on both row and column labels. Can be\n","thought of as a dict-like container for Series objects. The primary\n","pandas data structure.\n","\n","Parameters\n","----------\n","data : ndarray (structured or homogeneous), Iterable, dict, or DataFrame\n","    Dict can contain Series, arrays, constants, dataclass or list-like objects. If\n","    data is a dict, column order follows insertion-order. If a dict contains Series\n","    which have an index defined, it is aligned by its index. This alignment also\n","    occurs if data is a Series or a DataFrame itself. Alignment is done on\n","    Series/DataFrame inputs.\n","\n","    If data is a list of dicts, column order follows insertion-order.\n","\n","index : Index or array-like\n","    Index to use for resulting frame. Will default to RangeIndex if\n","    no indexing information part of input data and no index provided.\n","columns : Index or array-like\n","    Column labels to use for resulting frame when data does not have them,\n","    defaulting to RangeIndex(0, 1, 2, ..., n). If data contains column labels,\n","    will perform column selection instead.\n","dtype : dtype, default None\n","    Data type to force. Only a single dtype is allowed. If None, infer.\n","copy : bool or None, default None\n","    Copy data from inputs.\n","    For dict data, the default of None behaves like ``copy=True``.  For DataFrame\n","    or 2d ndarray input, the default of None behaves like ``copy=False``.\n","    If data is a dict containing one or more Series (possibly of different dtypes),\n","    ``copy=False`` will ensure that these inputs are not copied.\n","\n","    .. versionchanged:: 1.3.0\n","\n","See Also\n","--------\n","DataFrame.from_records : Constructor from tuples, also record arrays.\n","DataFrame.from_dict : From dicts of Series, arrays, or dicts.\n","read_csv : Read a comma-separated values (csv) file into DataFrame.\n","read_table : Read general delimited file into DataFrame.\n","read_clipboard : Read text from clipboard into DataFrame.\n","\n","Notes\n","-----\n","Please reference the :ref:`User Guide &lt;basics.dataframe&gt;` for more information.\n","\n","Examples\n","--------\n","Constructing DataFrame from a dictionary.\n","\n","&gt;&gt;&gt; d = {&#x27;col1&#x27;: [1, 2], &#x27;col2&#x27;: [3, 4]}\n","&gt;&gt;&gt; df = pd.DataFrame(data=d)\n","&gt;&gt;&gt; df\n","   col1  col2\n","0     1     3\n","1     2     4\n","\n","Notice that the inferred dtype is int64.\n","\n","&gt;&gt;&gt; df.dtypes\n","col1    int64\n","col2    int64\n","dtype: object\n","\n","To enforce a single dtype:\n","\n","&gt;&gt;&gt; df = pd.DataFrame(data=d, dtype=np.int8)\n","&gt;&gt;&gt; df.dtypes\n","col1    int8\n","col2    int8\n","dtype: object\n","\n","Constructing DataFrame from a dictionary including Series:\n","\n","&gt;&gt;&gt; d = {&#x27;col1&#x27;: [0, 1, 2, 3], &#x27;col2&#x27;: pd.Series([2, 3], index=[2, 3])}\n","&gt;&gt;&gt; pd.DataFrame(data=d, index=[0, 1, 2, 3])\n","   col1  col2\n","0     0   NaN\n","1     1   NaN\n","2     2   2.0\n","3     3   3.0\n","\n","Constructing DataFrame from numpy ndarray:\n","\n","&gt;&gt;&gt; df2 = pd.DataFrame(np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]]),\n","...                    columns=[&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;])\n","&gt;&gt;&gt; df2\n","   a  b  c\n","0  1  2  3\n","1  4  5  6\n","2  7  8  9\n","\n","Constructing DataFrame from a numpy ndarray that has labeled columns:\n","\n","&gt;&gt;&gt; data = np.array([(1, 2, 3), (4, 5, 6), (7, 8, 9)],\n","...                 dtype=[(&quot;a&quot;, &quot;i4&quot;), (&quot;b&quot;, &quot;i4&quot;), (&quot;c&quot;, &quot;i4&quot;)])\n","&gt;&gt;&gt; df3 = pd.DataFrame(data, columns=[&#x27;c&#x27;, &#x27;a&#x27;])\n","...\n","&gt;&gt;&gt; df3\n","   c  a\n","0  3  1\n","1  6  4\n","2  9  7\n","\n","Constructing DataFrame from dataclass:\n","\n","&gt;&gt;&gt; from dataclasses import make_dataclass\n","&gt;&gt;&gt; Point = make_dataclass(&quot;Point&quot;, [(&quot;x&quot;, int), (&quot;y&quot;, int)])\n","&gt;&gt;&gt; pd.DataFrame([Point(0, 0), Point(0, 3), Point(2, 3)])\n","   x  y\n","0  0  0\n","1  0  3\n","2  2  3\n","\n","Constructing DataFrame from Series/DataFrame:\n","\n","&gt;&gt;&gt; ser = pd.Series([1, 2, 3], index=[&quot;a&quot;, &quot;b&quot;, &quot;c&quot;])\n","&gt;&gt;&gt; df = pd.DataFrame(data=ser, index=[&quot;a&quot;, &quot;c&quot;])\n","&gt;&gt;&gt; df\n","   0\n","a  1\n","c  3\n","\n","&gt;&gt;&gt; df1 = pd.DataFrame([1, 2, 3], index=[&quot;a&quot;, &quot;b&quot;, &quot;c&quot;], columns=[&quot;x&quot;])\n","&gt;&gt;&gt; df2 = pd.DataFrame(data=df1, index=[&quot;a&quot;, &quot;c&quot;])\n","&gt;&gt;&gt; df2\n","   x\n","a  1\n","c  3</pre>\n","      <script>\n","      if (google.colab.kernel.accessAllowed && google.colab.files && google.colab.files.view) {\n","        for (const element of document.querySelectorAll('.filepath')) {\n","          element.style.display = 'block'\n","          element.onclick = (event) => {\n","            event.preventDefault();\n","            event.stopPropagation();\n","            google.colab.files.view(element.textContent, 491);\n","          };\n","        }\n","      }\n","      for (const element of document.querySelectorAll('.function-repr-contents')) {\n","        element.onclick = (event) => {\n","          event.preventDefault();\n","          event.stopPropagation();\n","          element.classList.toggle('function-repr-contents-collapsed');\n","        };\n","      }\n","      </script>\n","      </div>"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["xbox.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aAdhHuJVKpEX","executionInfo":{"status":"ok","timestamp":1725860479448,"user_tz":-330,"elapsed":14,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"0654263c-a2f1-4ac1-b293-c3ef252df2fc"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 42365 entries, 0 to 42364\n","Data columns (total 6 columns):\n"," #   Column      Non-Null Count  Dtype \n","---  ------      --------------  ----- \n"," 0   user        42365 non-null  object\n"," 1   sku         42365 non-null  int64 \n"," 2   category    42365 non-null  object\n"," 3   query       42365 non-null  object\n"," 4   click_time  42365 non-null  object\n"," 5   query_time  42365 non-null  object\n","dtypes: int64(1), object(5)\n","memory usage: 1.9+ MB\n"]}]},{"cell_type":"code","source":["xbox.replace({'category':{'abcat0701002':1}}, inplace = True)"],"metadata":{"id":"ttU9NwcBKuDs","executionInfo":{"status":"ok","timestamp":1725860479872,"user_tz":-330,"elapsed":5,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["xbox.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8PNsjZzoOPO_","executionInfo":{"status":"ok","timestamp":1725860481267,"user_tz":-330,"elapsed":5,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"ed337d18-f0c9-4aad-d99b-9d425d30c7ab"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 42365 entries, 0 to 42364\n","Data columns (total 6 columns):\n"," #   Column      Non-Null Count  Dtype \n","---  ------      --------------  ----- \n"," 0   user        42365 non-null  object\n"," 1   sku         42365 non-null  int64 \n"," 2   category    42365 non-null  int64 \n"," 3   query       42365 non-null  object\n"," 4   click_time  42365 non-null  object\n"," 5   query_time  42365 non-null  object\n","dtypes: int64(2), object(4)\n","memory usage: 1.9+ MB\n"]}]},{"cell_type":"code","source":["nltk.download('punkt')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jisc23dvOeFo","executionInfo":{"status":"ok","timestamp":1725860483322,"user_tz":-330,"elapsed":476,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"8609d42a-39a2-47e5-f164-e160bf43baa8"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Package punkt is already up-to-date!\n"]},{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["from nltk.tokenize import word_tokenize\n","xbox['querys'] = xbox['query'].apply(word_tokenize)"],"metadata":{"id":"_wFM0CWVTRb8","executionInfo":{"status":"ok","timestamp":1725860537868,"user_tz":-330,"elapsed":3642,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["xbox.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cYWnM_yWTfaW","executionInfo":{"status":"ok","timestamp":1725860551985,"user_tz":-330,"elapsed":371,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"8b0c05da-7cbf-4e40-cc02-24dd72e028b7"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 42365 entries, 0 to 42364\n","Data columns (total 7 columns):\n"," #   Column      Non-Null Count  Dtype \n","---  ------      --------------  ----- \n"," 0   user        42365 non-null  object\n"," 1   sku         42365 non-null  int64 \n"," 2   category    42365 non-null  int64 \n"," 3   query       42365 non-null  object\n"," 4   click_time  42365 non-null  object\n"," 5   query_time  42365 non-null  object\n"," 6   querys      42365 non-null  object\n","dtypes: int64(2), object(5)\n","memory usage: 2.3+ MB\n"]}]},{"cell_type":"code","source":["xbox"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":597},"id":"gLk-1I3yTk6z","executionInfo":{"status":"ok","timestamp":1725860581381,"user_tz":-330,"elapsed":430,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"ef06e0ff-71ae-4cb5-defb-27c96b1cef3a"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                           user      sku  category  \\\n","0      0001cd0d10bbc585c9ba287c963e00873d4c0bfd  2032076         1   \n","1      00033dbced6acd3626c4b56ff5c55b8d69911681  9854804         1   \n","2      00033dbced6acd3626c4b56ff5c55b8d69911681  2670133         1   \n","3      00033dbced6acd3626c4b56ff5c55b8d69911681  9984142         1   \n","4      0007756f015345450f7be1df33695421466b7ce4  2541184         1   \n","...                                         ...      ...       ...   \n","42360  fff95d849a4d9c9946e081459471adf4a7192d79  2670133         1   \n","42361  fffa393d127dec90b7eae4718535bd16be3b394d  2173065         1   \n","42362  fffa393d127dec90b7eae4718535bd16be3b394d  3046603         1   \n","42363  fffd288ec29a96dbac7356bcda0a1e9f88255a5b  2340293         1   \n","42364  ffff8ecfaaf3f1fab67c8f6739c131ec818dd4a6  2953607         1   \n","\n","                         query               click_time  \\\n","0                 gears of war  2011-10-09 17:22:56.101   \n","1                 Gears of war  2011-09-25 13:35:42.198   \n","2                 Gears of war  2011-09-25 13:36:08.668   \n","3               Assassin creed  2011-09-25 13:37:23.709   \n","4                  dead island  2011-09-11 15:15:34.336   \n","...                        ...                      ...   \n","42360         Modern warfare 3  2011-09-27 22:53:29.344   \n","42361                   Batman  2011-10-14 12:44:14.669   \n","42362                   Batman  2011-10-14 12:44:31.228   \n","42363                360 games  2011-10-10 08:46:10.368   \n","42364  Limited edition forza 4  2011-10-04 23:55:33.776   \n","\n","                    query_time                        querys  \n","0      2011-10-09 17:21:42.917              [gears, of, war]  \n","1      2011-09-25 13:35:33.234              [Gears, of, war]  \n","2      2011-09-25 13:35:33.234              [Gears, of, war]  \n","3      2011-09-25 13:37:00.049             [Assassin, creed]  \n","4      2011-09-11 15:15:26.206                [dead, island]  \n","...                        ...                           ...  \n","42360  2011-09-27 22:53:04.644          [Modern, warfare, 3]  \n","42361  2011-10-14 12:44:07.004                      [Batman]  \n","42362  2011-10-14 12:44:07.004                      [Batman]  \n","42363  2011-10-10 08:43:56.768                  [360, games]  \n","42364  2011-10-04 23:55:15.853  [Limited, edition, forza, 4]  \n","\n","[42365 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-368b318c-c3ae-46da-a3cb-e0732283d438\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user</th>\n","      <th>sku</th>\n","      <th>category</th>\n","      <th>query</th>\n","      <th>click_time</th>\n","      <th>query_time</th>\n","      <th>querys</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0001cd0d10bbc585c9ba287c963e00873d4c0bfd</td>\n","      <td>2032076</td>\n","      <td>1</td>\n","      <td>gears of war</td>\n","      <td>2011-10-09 17:22:56.101</td>\n","      <td>2011-10-09 17:21:42.917</td>\n","      <td>[gears, of, war]</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>00033dbced6acd3626c4b56ff5c55b8d69911681</td>\n","      <td>9854804</td>\n","      <td>1</td>\n","      <td>Gears of war</td>\n","      <td>2011-09-25 13:35:42.198</td>\n","      <td>2011-09-25 13:35:33.234</td>\n","      <td>[Gears, of, war]</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>00033dbced6acd3626c4b56ff5c55b8d69911681</td>\n","      <td>2670133</td>\n","      <td>1</td>\n","      <td>Gears of war</td>\n","      <td>2011-09-25 13:36:08.668</td>\n","      <td>2011-09-25 13:35:33.234</td>\n","      <td>[Gears, of, war]</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>00033dbced6acd3626c4b56ff5c55b8d69911681</td>\n","      <td>9984142</td>\n","      <td>1</td>\n","      <td>Assassin creed</td>\n","      <td>2011-09-25 13:37:23.709</td>\n","      <td>2011-09-25 13:37:00.049</td>\n","      <td>[Assassin, creed]</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0007756f015345450f7be1df33695421466b7ce4</td>\n","      <td>2541184</td>\n","      <td>1</td>\n","      <td>dead island</td>\n","      <td>2011-09-11 15:15:34.336</td>\n","      <td>2011-09-11 15:15:26.206</td>\n","      <td>[dead, island]</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>42360</th>\n","      <td>fff95d849a4d9c9946e081459471adf4a7192d79</td>\n","      <td>2670133</td>\n","      <td>1</td>\n","      <td>Modern warfare 3</td>\n","      <td>2011-09-27 22:53:29.344</td>\n","      <td>2011-09-27 22:53:04.644</td>\n","      <td>[Modern, warfare, 3]</td>\n","    </tr>\n","    <tr>\n","      <th>42361</th>\n","      <td>fffa393d127dec90b7eae4718535bd16be3b394d</td>\n","      <td>2173065</td>\n","      <td>1</td>\n","      <td>Batman</td>\n","      <td>2011-10-14 12:44:14.669</td>\n","      <td>2011-10-14 12:44:07.004</td>\n","      <td>[Batman]</td>\n","    </tr>\n","    <tr>\n","      <th>42362</th>\n","      <td>fffa393d127dec90b7eae4718535bd16be3b394d</td>\n","      <td>3046603</td>\n","      <td>1</td>\n","      <td>Batman</td>\n","      <td>2011-10-14 12:44:31.228</td>\n","      <td>2011-10-14 12:44:07.004</td>\n","      <td>[Batman]</td>\n","    </tr>\n","    <tr>\n","      <th>42363</th>\n","      <td>fffd288ec29a96dbac7356bcda0a1e9f88255a5b</td>\n","      <td>2340293</td>\n","      <td>1</td>\n","      <td>360 games</td>\n","      <td>2011-10-10 08:46:10.368</td>\n","      <td>2011-10-10 08:43:56.768</td>\n","      <td>[360, games]</td>\n","    </tr>\n","    <tr>\n","      <th>42364</th>\n","      <td>ffff8ecfaaf3f1fab67c8f6739c131ec818dd4a6</td>\n","      <td>2953607</td>\n","      <td>1</td>\n","      <td>Limited edition forza 4</td>\n","      <td>2011-10-04 23:55:33.776</td>\n","      <td>2011-10-04 23:55:15.853</td>\n","      <td>[Limited, edition, forza, 4]</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>42365 rows Ã— 7 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-368b318c-c3ae-46da-a3cb-e0732283d438')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-368b318c-c3ae-46da-a3cb-e0732283d438 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-368b318c-c3ae-46da-a3cb-e0732283d438');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d8c5b014-2885-41c5-80ef-8427fd9592f1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d8c5b014-2885-41c5-80ef-8427fd9592f1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d8c5b014-2885-41c5-80ef-8427fd9592f1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_b93c6e7a-603f-46ee-8a56-c989e0a009b7\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('xbox')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_b93c6e7a-603f-46ee-8a56-c989e0a009b7 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('xbox');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"xbox","summary":"{\n  \"name\": \"xbox\",\n  \"rows\": 42365,\n  \"fields\": [\n    {\n      \"column\": \"user\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 38024,\n        \"samples\": [\n          \"4b80aae0e8a513155c5f6872f1e226c2b7d02a90\",\n          \"58f0c627f55badcbc846362bd7d88bf1b461c12f\",\n          \"d395e25a54678e37558e9be1aa31f7eccc58ce7b\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sku\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 48580312868525,\n        \"min\": 1004622,\n        \"max\": 9999169100050027,\n        \"num_unique_values\": 413,\n        \"samples\": [\n          7294616,\n          3847419,\n          2011559\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"category\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 1,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"query\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5960,\n        \"samples\": [\n          \"Laptop with xbox\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"click_time\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 42364,\n        \"samples\": [\n          \"2011-09-14 08:30:21.331\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"query_time\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 40385,\n        \"samples\": [\n          \"2011-08-18 21:51:29.429\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"querys\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["X ="],"metadata":{"id":"aszRuGTkT2fq"},"execution_count":null,"outputs":[]}]}