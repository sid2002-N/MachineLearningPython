{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"gpuType":"T4","authorship_tag":"ABX9TyPoRh63WgElpsTpvrxPDadA"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"pxIgeA49kkqS","executionInfo":{"status":"ok","timestamp":1726037751265,"user_tz":-330,"elapsed":439,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}}},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","\n","\n",""]},{"cell_type":"code","source":["from google. colab import files\n","files.upload ()\n",""],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"ENCAYdNfkutu","executionInfo":{"status":"ok","timestamp":1726037771833,"user_tz":-330,"elapsed":20159,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"17c27c2a-9492-41b6-fd57-2f3ac10c7cb3"},"execution_count":2,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-7cbe6956-e301-46aa-a7bc-3bfa943ba556\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-7cbe6956-e301-46aa-a7bc-3bfa943ba556\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script>// Copyright 2017 Google LLC\n","//\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n","// you may not use this file except in compliance with the License.\n","// You may obtain a copy of the License at\n","//\n","//      http://www.apache.org/licenses/LICENSE-2.0\n","//\n","// Unless required by applicable law or agreed to in writing, software\n","// distributed under the License is distributed on an \"AS IS\" BASIS,\n","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","// See the License for the specific language governing permissions and\n","// limitations under the License.\n","\n","/**\n"," * @fileoverview Helpers for google.colab Python module.\n"," */\n","(function(scope) {\n","function span(text, styleAttributes = {}) {\n","  const element = document.createElement('span');\n","  element.textContent = text;\n","  for (const key of Object.keys(styleAttributes)) {\n","    element.style[key] = styleAttributes[key];\n","  }\n","  return element;\n","}\n","\n","// Max number of bytes which will be uploaded at a time.\n","const MAX_PAYLOAD_SIZE = 100 * 1024;\n","\n","function _uploadFiles(inputId, outputId) {\n","  const steps = uploadFilesStep(inputId, outputId);\n","  const outputElement = document.getElementById(outputId);\n","  // Cache steps on the outputElement to make it available for the next call\n","  // to uploadFilesContinue from Python.\n","  outputElement.steps = steps;\n","\n","  return _uploadFilesContinue(outputId);\n","}\n","\n","// This is roughly an async generator (not supported in the browser yet),\n","// where there are multiple asynchronous steps and the Python side is going\n","// to poll for completion of each step.\n","// This uses a Promise to block the python side on completion of each step,\n","// then passes the result of the previous step as the input to the next step.\n","function _uploadFilesContinue(outputId) {\n","  const outputElement = document.getElementById(outputId);\n","  const steps = outputElement.steps;\n","\n","  const next = steps.next(outputElement.lastPromiseValue);\n","  return Promise.resolve(next.value.promise).then((value) => {\n","    // Cache the last promise value to make it available to the next\n","    // step of the generator.\n","    outputElement.lastPromiseValue = value;\n","    return next.value.response;\n","  });\n","}\n","\n","/**\n"," * Generator function which is called between each async step of the upload\n"," * process.\n"," * @param {string} inputId Element ID of the input file picker element.\n"," * @param {string} outputId Element ID of the output display.\n"," * @return {!Iterable<!Object>} Iterable of next steps.\n"," */\n","function* uploadFilesStep(inputId, outputId) {\n","  const inputElement = document.getElementById(inputId);\n","  inputElement.disabled = false;\n","\n","  const outputElement = document.getElementById(outputId);\n","  outputElement.innerHTML = '';\n","\n","  const pickedPromise = new Promise((resolve) => {\n","    inputElement.addEventListener('change', (e) => {\n","      resolve(e.target.files);\n","    });\n","  });\n","\n","  const cancel = document.createElement('button');\n","  inputElement.parentElement.appendChild(cancel);\n","  cancel.textContent = 'Cancel upload';\n","  const cancelPromise = new Promise((resolve) => {\n","    cancel.onclick = () => {\n","      resolve(null);\n","    };\n","  });\n","\n","  // Wait for the user to pick the files.\n","  const files = yield {\n","    promise: Promise.race([pickedPromise, cancelPromise]),\n","    response: {\n","      action: 'starting',\n","    }\n","  };\n","\n","  cancel.remove();\n","\n","  // Disable the input element since further picks are not allowed.\n","  inputElement.disabled = true;\n","\n","  if (!files) {\n","    return {\n","      response: {\n","        action: 'complete',\n","      }\n","    };\n","  }\n","\n","  for (const file of files) {\n","    const li = document.createElement('li');\n","    li.append(span(file.name, {fontWeight: 'bold'}));\n","    li.append(span(\n","        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n","        `last modified: ${\n","            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n","                                    'n/a'} - `));\n","    const percent = span('0% done');\n","    li.appendChild(percent);\n","\n","    outputElement.appendChild(li);\n","\n","    const fileDataPromise = new Promise((resolve) => {\n","      const reader = new FileReader();\n","      reader.onload = (e) => {\n","        resolve(e.target.result);\n","      };\n","      reader.readAsArrayBuffer(file);\n","    });\n","    // Wait for the data to be ready.\n","    let fileData = yield {\n","      promise: fileDataPromise,\n","      response: {\n","        action: 'continue',\n","      }\n","    };\n","\n","    // Use a chunked sending to avoid message size limits. See b/62115660.\n","    let position = 0;\n","    do {\n","      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n","      const chunk = new Uint8Array(fileData, position, length);\n","      position += length;\n","\n","      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n","      yield {\n","        response: {\n","          action: 'append',\n","          file: file.name,\n","          data: base64,\n","        },\n","      };\n","\n","      let percentDone = fileData.byteLength === 0 ?\n","          100 :\n","          Math.round((position / fileData.byteLength) * 100);\n","      percent.textContent = `${percentDone}% done`;\n","\n","    } while (position < fileData.byteLength);\n","  }\n","\n","  // All done.\n","  yield {\n","    response: {\n","      action: 'complete',\n","    }\n","  };\n","}\n","\n","scope.google = scope.google || {};\n","scope.google.colab = scope.google.colab || {};\n","scope.google.colab._files = {\n","  _uploadFiles,\n","  _uploadFilesContinue,\n","};\n","})(self);\n","</script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving GoldUP_features_period (1).csv to GoldUP_features_period (1).csv\n"]},{"output_type":"execute_result","data":{"text/plain":["{'GoldUP_features_period (1).csv': b'Date,Gold_Price,Crude_Oil,Interest_Rate,USD_INR,Sensex,CPI,USD_Index\\r\\n01-10-2000,4538,1455.51,8,46.318297,3711.02,37.23,116.65\\r\\n01-11-2000,4483,1512.47,8,46.783613,3997.99,37.31,115.24\\r\\n01-12-2000,4541,1178.11,8,46.745856,3972.12,36.98,109.56\\r\\n01-01-2001,4466,1208.18,8,46.536033,4326.72,36.9,110.52\\r\\n01-02-2001,4370,1267.18,7.5,46.514595,4247.04,36.73,112.01\\r\\n01-03-2001,4269,1166.45,7,46.609354,3604.38,36.9,117.37\\r\\n01-04-2001,4267,1203.33,7,46.75567,3519.16,37.15,115.85\\r\\n01-05-2001,4441,1292.57,7,46.898772,3631.91,37.4,119.07\\r\\n01-06-2001,4400,1267.73,7,46.972248,3456.78,37.89,119.43\\r\\n01-07-2001,4380,1169.12,7,47.121652,3329.28,38.39,117.18\\r\\n01-08-2001,4449,1216.8,7,47.108333,3244.95,38.64,113.42\\r\\n01-09-2001,4631,1201.16,7,47.589111,2811.6,38.56,113.48\\r\\n01-10-2001,4688,995.46,6.5,47.996628,2989.35,38.8,114.86\\r\\n01-11-2001,4604,897.07,6.5,47.9843,3287.5,39.14,116.13\\r\\n01-12-2001,4576,887.42,6.5,47.9048,3262.33,38.89,116.75\\r\\n01-01-2002,4693,925.63,6.5,48.271182,3311.03,38.72,120.24\\r\\n01-02-2002,4901,972.86,6.5,48.664774,3562.31,38.64,119.16\\r\\n01-03-2002,4920,1152.2,6.5,48.7337,3469.35,38.8,118.62\\r\\n01-04-2002,5041,1244.02,6.5,48.908614,3338.16,38.89,115.19\\r\\n01-05-2002,5226,1257.83,6.5,49.00224,3125.73,39.14,111.81\\r\\n01-06-2002,5313,1199.06,6.5,48.963447,3244.7,39.47,106.11\\r\\n01-07-2002,5188,1255.67,6.5,48.787774,2987.65,39.88,107.41\\r\\n01-08-2002,5129,1301.25,6.5,48.603228,3181.23,40.13,106.98\\r\\n01-09-2002,5239,1369.92,6.5,48.44445,2991.36,40.21,106.87\\r\\n01-10-2002,5210,1331.61,6.5,48.362591,2949.32,40.38,106.64\\r\\n01-11-2002,5243,1184.18,6.25,48.251105,3228.82,40.55,106.41\\r\\n01-12-2002,5444,1342.56,6.25,48.176333,3377.28,40.13,101.85\\r\\n01-01-2003,5752,1473.85,6.25,47.937694,3250.38,40.05,99.91\\r\\n01-02-2003,5771,1569.55,6.25,47.740106,3283.66,40.13,99.71\\r\\n01-03-2003,5433,1446.38,6.25,47.6645,3048.72,40.38,99.06\\r\\n01-04-2003,5192,1210.97,6.25,47.403571,2959.79,40.88,97.19\\r\\n01-05-2003,5561,1226.99,6,47.098325,3180.75,40.96,93.27\\r\\n01-06-2003,5509,1304.45,6,46.74645,3607.13,41.21,94.73\\r\\n01-07-2003,5363,1321.85,6,46.245625,3792.61,41.54,96.89\\r\\n01-08-2003,5462,1363.37,6,45.943763,4244.73,41.38,98.1\\r\\n01-09-2003,5718,1232.46,6,45.846923,4453.24,41.38,92.85\\r\\n01-10-2003,5695,1316.78,6,45.385,4906.87,41.71,92.73\\r\\n01-11-2003,5850,1325.54,6,45.486158,5044.82,41.79,90.21\\r\\n01-12-2003,6094,1366.36,6,45.564722,5838.96,41.62,86.92\\r\\n01-01-2004,6179,1425.74,6,45.432223,5695.67,41.79,87.2\\r\\n01-02-2004,6018,1418.36,6,45.235938,5667.51,41.79,87.31\\r\\n01-03-2004,5986,1515.65,6,45.05465,5590.6,41.79,87.61\\r\\n01-04-2004,5916,1480.99,6,43.820866,5655.09,41.79,90.48\\r\\n01-05-2004,5736,1699.29,6,45.123948,4759.62,42.12,88.95\\r\\n01-06-2004,5862,1617.64,6,45.4705,4795.46,42.45,88.8\\r\\n01-07-2004,6059,1744.59,6,45.9965,5170.32,42.87,89.96\\r\\n01-08-2004,6126,1950.09,6,46.304,5192.08,43.28,88.94\\r\\n01-09-2004,6170,1917.68,6,45.860485,5583.61,43.37,87.36\\r\\n01-10-2004,6361,2146.34,6,43.929104,5672.27,43.61,84.91\\r\\n01-11-2004,6551,1900.58,6,45.110681,6234.29,43.53,81.82\\r\\n01-12-2004,6445,1717,6,43.760714,6602.69,43.2,80.85\\r\\n01-01-2005,6149,1880.23,6,43.735192,6555.94,43.61,83.6\\r\\n01-02-2005,6108,1957.6,6,43.6175,6713.86,43.53,82.51\\r\\n01-03-2005,6262,2225.57,6,43.638871,6492.82,43.53,84.06\\r\\n01-04-2005,6151,2215.05,6,43.696167,6154.44,43.86,84.43\\r\\n01-05-2005,6030,2080.2,6,43.452903,6715.11,43.7,87.76\\r\\n01-06-2005,6134,2348.85,6,43.557322,7193.85,43.86,89.11\\r\\n01-07-2005,6058,2454.2,6,43.490185,7635.42,44.61,89.35\\r\\n01-08-2005,6249,2700.01,6,41.960666,7805.43,44.77,87.58\\r\\n01-09-2005,6535,2709.21,6,43.876667,8634.48,44.94,89.52\\r\\n01-10-2005,6874,2608.22,6,44.729667,7892.32,45.44,90.07\\r\\n01-11-2005,7168,2516.77,6,45.629655,8788.81,45.85,91.57\\r\\n01-12-2005,7586,2576.49,6,45.694401,9397.93,45.6,91.17\\r\\n01-01-2006,7925,2773.13,6,44.351481,9919.89,45.52,88.96\\r\\n01-02-2006,8038,2646.56,6,44.254711,10370.24,45.52,90.11\\r\\n01-03-2006,8059,2709.89,6,44.370555,11279.96,45.52,89.73\\r\\n01-04-2006,8985,3055.21,6,44.801205,12042.56,45.9,86.11\\r\\n01-05-2006,9969,3118.7,6,45.253648,10398.61,46.29,84.72\\r\\n01-06-2006,8952,3145.13,6,45.893571,10609.25,47.05,85.22\\r\\n01-07-2006,9559,3365.75,6,46.384958,10743.88,47.43,85.3\\r\\n01-08-2006,9469,3341.97,6,46.491078,11699.05,47.43,85.05\\r\\n01-09-2006,8998,2865.03,6,46.119517,12454.42,47.82,85.97\\r\\n01-10-2006,8695,2633.08,6,45.438276,12961.9,48.58,85.32\\r\\n01-11-2006,9140,2607.99,6,44.811532,13696.31,48.58,82.92\\r\\n01-12-2006,9133,2722.26,6,44.6325,13786.91,48.58,83.72\\r\\n01-01-2007,9069,2373.05,6,44.30621,14090.92,48.58,84.61\\r\\n01-02-2007,9545,2541.99,6,44.123729,12938.09,48.96,83.57\\r\\n01-03-2007,9370,2667.95,6,44.014345,13072.1,48.58,82.93\\r\\n01-04-2007,9321,2742.35,6,42.276562,13872.37,48.96,81.45\\r\\n01-05-2007,8878,2658.01,6,40.870669,14544.46,49.35,82.3\\r\\n01-06-2007,8707,2779.56,6,40.753571,14650.51,49.73,81.92\\r\\n01-07-2007,8741,2974.64,6,40.420952,15550.99,50.49,80.77\\r\\n01-08-2007,8836,2862.54,6,40.843125,15318.6,50.88,80.79\\r\\n01-09-2007,9311,3096.5,6,40.388438,17291.1,50.88,77.72\\r\\n01-10-2007,9691,3238.9,6,39.548261,19837.99,51.26,76.48\\r\\n01-11-2007,10340,3602.45,6,39.439205,19363.19,51.26,76.15\\r\\n01-12-2007,10311,3530.67,6,39.465375,20286.99,51.26,76.69\\r\\n01-01-2008,11291,3570.71,6,39.366685,17648.71,51.26,75.18\\r\\n01-02-2008,11888,3710.34,6,39.720893,17578.72,51.64,73.71\\r\\n01-03-2008,12632,4109.92,6,40.340833,15644.44,52.41,71.8\\r\\n01-04-2008,11810,4353.72,6,40.02689,17287.31,52.79,72.51\\r\\n01-05-2008,12143,5165.85,6,42.047174,16415.57,53.17,72.88\\r\\n01-06-2008,12353,5631.69,6,42.842487,13461.6,53.55,72.46\\r\\n01-07-2008,13028,5689.98,6,43.001054,14355.75,54.7,73.23\\r\\n01-08-2008,11861,4919.52,6,43.108455,14564.53,55.47,77.38\\r\\n01-09-2008,12220,4540.91,6,45.544457,12860.43,55.85,79.45\\r\\n01-10-2008,12691,3535.8,6,50.055371,9788.06,56.61,85.63\\r\\n01-11-2008,12143,2644.71,6,49.84275,9092.72,56.61,86.52\\r\\n01-12-2008,12923,2010.86,6,49.906565,9647.31,56.23,81.15\\r\\n01-01-2009,13473,2142.12,6,49.043306,9424.24,56.61,85.83\\r\\n01-02-2009,14800,2059.46,6,49.179551,8891.61,56.61,88.17\\r\\n01-03-2009,15232,2391.75,6,51.113321,9708.5,56.61,85.51\\r\\n01-04-2009,14475,2517.58,6,50.03327,11403.25,57.38,84.82\\r\\n01-05-2009,14621,2822.25,6,48.605316,14625.25,57.76,79.23\\r\\n01-06-2009,14639,3303.55,6,47.671474,14493.84,58.53,80.16\\r\\n01-07-2009,14720,3137,6,48.398962,15670.31,61.2,78.35\\r\\n01-08-2009,14952,3461.09,6,48.271903,15666.64,61.97,78.17\\r\\n01-09-2009,15723,3310.8,6,48.3977,17126.84,62.35,76.65\\r\\n01-10-2009,15882,3461.1,6,46.705242,15896.28,63.12,76.3\\r\\n01-11-2009,17057,3611.43,6,46.569183,16926.22,64.27,74.78\\r\\n01-12-2009,17159,3491.65,6,46.532468,17464.81,64.65,77.86\\r\\n01-01-2010,16706,3541.88,6,45.981774,16357.96,65.8,79.46\\r\\n01-02-2010,16525,3463.32,6,46.3145,16429.55,65.03,80.36\\r\\n01-03-2010,16614,3607.99,6,45.46429,17527.77,65.03,81.07\\r\\n01-04-2010,16693,3745.92,6,44.4562,17558.71,65.03,81.87\\r\\n01-05-2010,18024,3461.17,6,45.669935,16944.63,65.8,86.59\\r\\n01-06-2010,18745,3479.77,6,46.4813,17700.9,66.56,86.02\\r\\n01-07-2010,18270,3495.72,6,46.719452,17868.29,68.09,81.54\\r\\n01-08-2010,18457,3531.14,6,46.491516,17971.12,68.09,83.2\\r\\n01-09-2010,19056,3504.32,6,46.007067,20069.12,68.47,78.72\\r\\n01-10-2010,19474,3629.8,6,44.359613,20032.34,69.24,77.27\\r\\n01-11-2010,20140,3793.46,6,44.8883,19521.25,69.62,81.19\\r\\n01-12-2010,20506,4065.66,6,45.096839,20509.09,70.77,79.03\\r\\n01-01-2011,20204,4206.66,6,45.326452,18327.76,71.92,77.73\\r\\n01-02-2011,20321,4450.5,6,45.400643,17823.4,70.77,76.89\\r\\n01-03-2011,20835,4888.11,6,44.903345,19445.22,70.77,75.86\\r\\n01-04-2011,21470,5159.4,6,44.295267,19135.96,71.15,72.93\\r\\n01-05-2011,22130,4851.8,6,44.834903,18503.28,71.53,74.64\\r\\n01-06-2011,22214,4747.57,6,44.818533,18845.87,72.3,74.3\\r\\n01-07-2011,22627,4793.3,6,44.394613,18197.2,73.83,73.9\\r\\n01-08-2011,25878,4550.04,6,45.2939,16676.75,74.21,74.12\\r\\n01-09-2011,27487,4811.93,6,47.29188,16453.76,75.36,78.55\\r\\n01-10-2011,26668,4916.61,6,49.178077,17705.01,75.74,76.17\\r\\n01-11-2011,28563,5343.29,6,50.574833,16123.46,76.12,78.38\\r\\n01-12-2011,28063,5486.72,6,52.333333,15454.92,75.36,80.18\\r\\n01-01-2012,27598,5484.92,6,51.234633,17193.55,75.74,79.29\\r\\n01-02-2012,28119,5540.26,9.5,49.151346,17752.68,76.12,78.74\\r\\n01-03-2012,27854,5927.55,9.5,50.207433,17404.2,76.89,79\\r\\n01-04-2012,28563,5888.49,9,51.5655,17318.81,78.42,78.78\\r\\n01-05-2012,28831,5655.94,9,54.350864,16218.53,78.8,83.04\\r\\n01-06-2012,29819,5083.6,9,55.977269,17429.98,79.57,81.63\\r\\n01-07-2012,29468,5372.19,9,55.352806,17236.18,81.1,82.64\\r\\n01-08-2012,30180,5848.75,9,55.513323,17429.56,81.86,81.21\\r\\n01-09-2012,31673,5798.48,9,54.489467,18762.74,82.24,79.94\\r\\n01-10-2012,31056,5476.43,9,53.03271,18505.38,83.01,79.92\\r\\n01-11-2012,31548,5536.01,9,54.7929,19339.9,83.39,80.15\\r\\n01-12-2012,30833,5526.62,9,54.621371,19426.71,83.77,79.77\\r\\n01-01-2013,30520,5708.32,9,54.314581,19894.98,84.54,79.21\\r\\n01-02-2013,29963,5784.94,8.75,53.8065,18861.54,85.3,81.95\\r\\n01-03-2013,29514,5575.84,8.5,54.418984,18835.77,85.69,83.22\\r\\n01-04-2013,27743,5375.04,8.5,54.361967,19504.18,86.45,81.75\\r\\n01-05-2013,26769,5468.66,8.25,54.881226,19760.3,87.22,83.26\\r\\n01-06-2013,27178,5817.69,8.25,58.179167,19395.81,88.36,83.14\\r\\n01-07-2013,26928,6292.38,10.25,59.699774,19345.7,89.89,81.45\\r\\n01-08-2013,30216,6836.67,10.25,62.618742,18619.72,90.66,82.09\\r\\n01-09-2013,30473,6926.83,9.5,63.801724,19379.77,91.04,80.22\\r\\n01-10-2013,30710,6497.77,8.75,61.485081,21164.52,92.19,80.19\\r\\n01-11-2013,30740,6435.78,8.75,62.5894,20791.93,92.96,80.68\\r\\n01-12-2013,29904,6534.28,8.75,61.863581,21170.68,91.42,80.03\\r\\n01-01-2014,29582,6344,9,62.074613,20513.85,90.66,81.31\\r\\n01-02-2014,30211,6529.28,9,62.180696,21120.12,91.04,79.69\\r\\n01-03-2014,29832,6343,9,60.997097,22386.27,91.42,80.1\\r\\n01-04-2014,29329,6329.6,9,60.330117,22417.8,92.57,79.47\\r\\n01-05-2014,28738,6273.13,9,59.308661,24217.34,93.34,80.37\\r\\n01-06-2014,27427,6471.05,9,59.696,25413.78,94.1,79.78\\r\\n01-07-2014,28008,6320.51,9,60.044177,25894.97,96.4,81.46\\r\\n01-08-2014,28080,6092.56,9,60.8698,26638.11,96.78,82.75\\r\\n01-09-2014,26963,5835.69,9,60.84225,26630.51,96.78,85.94\\r\\n01-10-2014,26991,5280.84,9,61.337677,27865.83,96.78,86.92\\r\\n01-11-2014,26115,4748.53,9,61.662467,28693.99,96.78,88.36\\r\\n01-12-2014,26678,3806.55,9,62.797565,27499.42,96.78,90.27\\r\\n01-01-2015,27403,2927.2,8.75,62.081804,29182.95,97.16,94.8\\r\\n01-02-2015,27075,3398.51,8.75,62.017482,29361.5,96.78,95.32\\r\\n01-03-2015,26168,3299.23,8.5,62.48471,27957.49,97.16,98.36\\r\\n01-04-2015,26683,3611.03,8.5,62.614983,27011.31,97.93,94.6\\r\\n01-05-2015,27093,3988.78,8.5,63.656613,27828.44,98.69,96.91\\r\\n01-06-2015,26646,3915.3,8.25,63.780567,27780.83,99.84,95.48\\r\\n01-07-2015,25539,3458.51,8.25,63.600032,28114.56,100.61,97.34\\r\\n01-08-2015,25729,2973.16,8.25,65.025677,26283.09,100.99,95.82\\r\\n01-09-2015,26246,3064.43,8.25,66.237433,26154.83,101.75,96.35\\r\\n01-10-2015,26577,3055.95,7.75,65.019758,26656.83,102.9,96.95\\r\\n01-11-2015,25648,2847.43,7.75,66.127917,26145.67,103.28,100.17\\r\\n01-12-2015,25207,2435.4,7.75,66.505016,26117.54,102.9,98.63\\r\\n01-01-2016,25998,2004,7.75,67.2355,24870.69,102.9,99.61\\r\\n01-02-2016,28252,2117.58,7.75,68.255069,23002,102.14,98.21\\r\\n01-03-2016,28794,2503.95,7.75,66.925113,25341.86,102.52,94.59\\r\\n01-04-2016,28818,2708.63,7,66.463133,25606.62,103.67,93.08\\r\\n01-05-2016,29639,3072.75,7,66.905161,26667.96,105.2,95.89\\r\\n01-06-2016,29745,3208.66,7,67.24605,26999.72,105.96,96.14\\r\\n01-07-2016,30942,2966.28,7,67.161258,28051.86,107.11,95.53\\r\\n01-08-2016,31270,3004.16,7,66.935513,28452.17,106.34,96.02\\r\\n01-09-2016,31178,3006.05,7,66.763683,27865.96,105.96,95.46\\r\\n01-10-2016,30071,3290.46,6.75,66.728455,27930.21,106.34,98.44\\r\\n01-11-2016,29796,3056.29,6.75,67.73135,26652.81,105.96,101.5\\r\\n01-12-2016,27754,3572.84,6.75,67.81351,26626.46,105.2,102.21\\r\\n01-01-2017,28746,3649.89,6.75,68.067231,27655.96,104.81,99.51\\r\\n01-02-2017,29265,3647.03,6.75,66.968905,28743.32,104.81,101.12\\r\\n01-03-2017,28758,3355.09,6.75,65.873348,29620.5,105.2,100.35\\r\\n01-04-2017,29010,3365.04,6.5,64.530959,29918.4,105.96,99.05\\r\\n01-05-2017,28471,3213.83,6.5,64.421517,31145.8,106.34,96.92\\r\\n01-06-2017,28823,2975.01,6.5,64.445503,30921.61,107.11,95.63\\r\\n01-07-2017,28170,3071.23,6.5,64.443087,32514.94,109.02,92.86\\r\\n01-08-2017,28893,3194.46,6.25,63.920337,31730.49,109.02,92.67\\r\\n01-09-2017,29899,3413.19,6.25,64.432127,31283.72,109.02,93.08\\r\\n01-10-2017,29505,3574.53,6.25,65.0881,33213.13,109.79,94.55\\r\\n01-11-2017,29399,3887.81,6.25,64.859612,33149.35,110.17,93.05\\r\\n01-12-2017,28763,3930.99,6.25,64.209727,34056.83,109.4,92.12\\r\\n01-01-2018,29854,4215.16,6.25,63.640531,35965.02,110.17,89.13\\r\\n01-02-2018,30391,4085.16,6.25,64.448045,34184.04,109.79,90.61\\r\\n01-03-2018,30420,4171.72,6.25,65.046425,32968.68,109.79,89.97\\r\\n01-04-2018,30986,4516.93,6.25,65.683203,35160.36,110.17,91.84\\r\\n01-05-2018,31116,4959.75,6.25,67.524939,35322.38,110.55,93.98\\r\\n01-06-2018,30707,4879.75,6.5,67.786997,35423.48,111.32,94.64\\r\\n01-07-2018,30097,4992.51,6.5,68.663945,37606.58,115.14,94.49\\r\\n01-08-2018,29644,4942.53,6.75,69.553235,38645.07,115.14,95.14\\r\\n01-09-2018,30538,5448.55,6.75,72.095337,36227.14,115.14,95.13\\r\\n01-10-2018,31489,5648.69,6.75,73.587258,34442.05,115.52,97.13\\r\\n01-11-2018,31010,4476.09,6.75,71.786417,36194.3,115.52,97.27\\r\\n01-12-2018,31251,3822.07,6.75,70.719639,36068.33,115.14,96.17\\r\\n01-01-2019,32230,4003.08,6.75,70.648365,36256.69,117.44,95.58\\r\\n01-02-2019,33217,4352.94,6.5,71.211285,35867.44,117.44,96.16\\r\\n01-03-2019,32036,4432.04,6.5,69.581703,38672.91,118.2,97.28\\r\\n01-04-2019,31659,4761.33,6.25,69.410852,39031.55,119.35,97.48\\r\\n01-05-2019,31738,4664.02,6.25,69.767265,39714.2,120.11,97.75\\r\\n01-06-2019,33121,4149.67,6,69.419143,39394.64,120.88,96.13\\r\\n01-07-2019,34522,4230.22,6,68.746329,37481.12,122.03,98.52\\r\\n01-08-2019,37356,4102.97,5.65,71.12515,37332.79,122.41,98.92\\r\\n01-09-2019,37927,4282.87,5.65,71.304517,38667.33,123.18,99.38\\r\\n01-10-2019,38214,4069.14,5.4,71.001494,40129.05,124.32,97.35\\r\\n01-11-2019,38122,4314.32,5.4,71.475634,40793.81,125.47,98.27\\r\\n01-12-2019,38092,4509.77,5.4,71.17271,41253.74,126.24,96.39\\r\\n01-01-2020,39984,4395.91,5.4,71.264603,40723.49,126.24,97.39\\r\\n01-02-2020,41195,3811.78,5.4,71.583828,38297.29,125.47,98.13\\r\\n01-03-2020,42285,2392.98,4.65,74.534897,29468.49,124.71,99.05\\r\\n01-04-2020,45504,1603.02,4.65,76.222334,33717.62,125.85,99.57\\r\\n01-05-2020,46343,2298.55,4.25,75.666063,32424.1,126.24,98.34\\r\\n01-06-2020,47315,2987.46,4.25,75.763427,34915.8,127,97.39\\r\\n01-07-2020,49878,3156.01,4.25,74.908993,37606.89,128.53,93.35\\r\\n01-08-2020,52917,3243.75,4.25,74.57382,38628.29,129.3,92.14\\r\\n'}"]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["gd = pd.read_csv(\"GoldUP_features_period (1).csv\")\n","gd"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"_MzacqqKkyD8","executionInfo":{"status":"ok","timestamp":1726037771833,"user_tz":-330,"elapsed":42,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"3d0b7f5a-57bc-41fe-b638-8ac0bf498214"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Date  Gold_Price  Crude_Oil  Interest_Rate    USD_INR    Sensex  \\\n","0    01-10-2000        4538    1455.51           8.00  46.318297   3711.02   \n","1    01-11-2000        4483    1512.47           8.00  46.783613   3997.99   \n","2    01-12-2000        4541    1178.11           8.00  46.745856   3972.12   \n","3    01-01-2001        4466    1208.18           8.00  46.536033   4326.72   \n","4    01-02-2001        4370    1267.18           7.50  46.514595   4247.04   \n","..          ...         ...        ...            ...        ...       ...   \n","234  01-04-2020       45504    1603.02           4.65  76.222334  33717.62   \n","235  01-05-2020       46343    2298.55           4.25  75.666063  32424.10   \n","236  01-06-2020       47315    2987.46           4.25  75.763427  34915.80   \n","237  01-07-2020       49878    3156.01           4.25  74.908993  37606.89   \n","238  01-08-2020       52917    3243.75           4.25  74.573820  38628.29   \n","\n","        CPI  USD_Index  \n","0     37.23     116.65  \n","1     37.31     115.24  \n","2     36.98     109.56  \n","3     36.90     110.52  \n","4     36.73     112.01  \n","..      ...        ...  \n","234  125.85      99.57  \n","235  126.24      98.34  \n","236  127.00      97.39  \n","237  128.53      93.35  \n","238  129.30      92.14  \n","\n","[239 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-f295f69d-1497-4a71-a653-109f03d1b37a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Gold_Price</th>\n","      <th>Crude_Oil</th>\n","      <th>Interest_Rate</th>\n","      <th>USD_INR</th>\n","      <th>Sensex</th>\n","      <th>CPI</th>\n","      <th>USD_Index</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>01-10-2000</td>\n","      <td>4538</td>\n","      <td>1455.51</td>\n","      <td>8.00</td>\n","      <td>46.318297</td>\n","      <td>3711.02</td>\n","      <td>37.23</td>\n","      <td>116.65</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>01-11-2000</td>\n","      <td>4483</td>\n","      <td>1512.47</td>\n","      <td>8.00</td>\n","      <td>46.783613</td>\n","      <td>3997.99</td>\n","      <td>37.31</td>\n","      <td>115.24</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>01-12-2000</td>\n","      <td>4541</td>\n","      <td>1178.11</td>\n","      <td>8.00</td>\n","      <td>46.745856</td>\n","      <td>3972.12</td>\n","      <td>36.98</td>\n","      <td>109.56</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>01-01-2001</td>\n","      <td>4466</td>\n","      <td>1208.18</td>\n","      <td>8.00</td>\n","      <td>46.536033</td>\n","      <td>4326.72</td>\n","      <td>36.90</td>\n","      <td>110.52</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>01-02-2001</td>\n","      <td>4370</td>\n","      <td>1267.18</td>\n","      <td>7.50</td>\n","      <td>46.514595</td>\n","      <td>4247.04</td>\n","      <td>36.73</td>\n","      <td>112.01</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>234</th>\n","      <td>01-04-2020</td>\n","      <td>45504</td>\n","      <td>1603.02</td>\n","      <td>4.65</td>\n","      <td>76.222334</td>\n","      <td>33717.62</td>\n","      <td>125.85</td>\n","      <td>99.57</td>\n","    </tr>\n","    <tr>\n","      <th>235</th>\n","      <td>01-05-2020</td>\n","      <td>46343</td>\n","      <td>2298.55</td>\n","      <td>4.25</td>\n","      <td>75.666063</td>\n","      <td>32424.10</td>\n","      <td>126.24</td>\n","      <td>98.34</td>\n","    </tr>\n","    <tr>\n","      <th>236</th>\n","      <td>01-06-2020</td>\n","      <td>47315</td>\n","      <td>2987.46</td>\n","      <td>4.25</td>\n","      <td>75.763427</td>\n","      <td>34915.80</td>\n","      <td>127.00</td>\n","      <td>97.39</td>\n","    </tr>\n","    <tr>\n","      <th>237</th>\n","      <td>01-07-2020</td>\n","      <td>49878</td>\n","      <td>3156.01</td>\n","      <td>4.25</td>\n","      <td>74.908993</td>\n","      <td>37606.89</td>\n","      <td>128.53</td>\n","      <td>93.35</td>\n","    </tr>\n","    <tr>\n","      <th>238</th>\n","      <td>01-08-2020</td>\n","      <td>52917</td>\n","      <td>3243.75</td>\n","      <td>4.25</td>\n","      <td>74.573820</td>\n","      <td>38628.29</td>\n","      <td>129.30</td>\n","      <td>92.14</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>239 rows × 8 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f295f69d-1497-4a71-a653-109f03d1b37a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f295f69d-1497-4a71-a653-109f03d1b37a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f295f69d-1497-4a71-a653-109f03d1b37a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-08b5f55b-b3fe-40af-8d96-2ecbcc13917b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-08b5f55b-b3fe-40af-8d96-2ecbcc13917b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-08b5f55b-b3fe-40af-8d96-2ecbcc13917b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_1c1b0ad8-fc56-4551-9c4d-27a844760598\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('gd')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_1c1b0ad8-fc56-4551-9c4d-27a844760598 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('gd');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"gd","summary":"{\n  \"name\": \"gd\",\n  \"rows\": 239,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 239,\n        \"samples\": [\n          \"01-10-2002\",\n          \"01-04-2001\",\n          \"01-07-2008\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gold_Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11668,\n        \"min\": 4267,\n        \"max\": 52917,\n        \"num_unique_values\": 237,\n        \"samples\": [\n          18745,\n          4693,\n          30097\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Crude_Oil\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1551.627401491845,\n        \"min\": 887.42,\n        \"max\": 6926.83,\n        \"num_unique_values\": 239,\n        \"samples\": [\n          1331.61,\n          1203.33,\n          5689.98\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Interest_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.1883089135016145,\n        \"min\": 4.25,\n        \"max\": 10.25,\n        \"num_unique_values\": 18,\n        \"samples\": [\n          8.0,\n          7.5,\n          8.75\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"USD_INR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.311143511772425,\n        \"min\": 39.366685,\n        \"max\": 76.222334,\n        \"num_unique_values\": 239,\n        \"samples\": [\n          48.362591,\n          46.75567,\n          43.001054\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sensex\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11032.206600137108,\n        \"min\": 2811.6,\n        \"max\": 41253.74,\n        \"num_unique_values\": 239,\n        \"samples\": [\n          2949.32,\n          3519.16,\n          14355.75\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CPI\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29.106140728923894,\n        \"min\": 36.73,\n        \"max\": 129.3,\n        \"num_unique_values\": 163,\n        \"samples\": [\n          105.96,\n          92.96,\n          102.14\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"USD_Index\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.312606802267338,\n        \"min\": 71.8,\n        \"max\": 120.24,\n        \"num_unique_values\": 234,\n        \"samples\": [\n          85.3,\n          89.97,\n          98.63\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["gd.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xwS40F6uk3fI","executionInfo":{"status":"ok","timestamp":1726037771833,"user_tz":-330,"elapsed":36,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"d149fb13-9619-411f-bed3-aa9c8cf0a3f4"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 239 entries, 0 to 238\n","Data columns (total 8 columns):\n"," #   Column         Non-Null Count  Dtype  \n","---  ------         --------------  -----  \n"," 0   Date           239 non-null    object \n"," 1   Gold_Price     239 non-null    int64  \n"," 2   Crude_Oil      239 non-null    float64\n"," 3   Interest_Rate  239 non-null    float64\n"," 4   USD_INR        239 non-null    float64\n"," 5   Sensex         239 non-null    float64\n"," 6   CPI            239 non-null    float64\n"," 7   USD_Index      239 non-null    float64\n","dtypes: float64(6), int64(1), object(1)\n","memory usage: 15.1+ KB\n"]}]},{"cell_type":"code","source":["gd.head ()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"8OjBphOYk5Fn","executionInfo":{"status":"ok","timestamp":1726037771833,"user_tz":-330,"elapsed":32,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"a0226a0a-b346-4549-8b34-f30b53c95416"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Date  Gold_Price  Crude_Oil  Interest_Rate    USD_INR   Sensex  \\\n","0  01-10-2000        4538    1455.51            8.0  46.318297  3711.02   \n","1  01-11-2000        4483    1512.47            8.0  46.783613  3997.99   \n","2  01-12-2000        4541    1178.11            8.0  46.745856  3972.12   \n","3  01-01-2001        4466    1208.18            8.0  46.536033  4326.72   \n","4  01-02-2001        4370    1267.18            7.5  46.514595  4247.04   \n","\n","     CPI  USD_Index  \n","0  37.23     116.65  \n","1  37.31     115.24  \n","2  36.98     109.56  \n","3  36.90     110.52  \n","4  36.73     112.01  "],"text/html":["\n","  <div id=\"df-4575c135-6ca5-4dab-9bfc-26358a42655d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Gold_Price</th>\n","      <th>Crude_Oil</th>\n","      <th>Interest_Rate</th>\n","      <th>USD_INR</th>\n","      <th>Sensex</th>\n","      <th>CPI</th>\n","      <th>USD_Index</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>01-10-2000</td>\n","      <td>4538</td>\n","      <td>1455.51</td>\n","      <td>8.0</td>\n","      <td>46.318297</td>\n","      <td>3711.02</td>\n","      <td>37.23</td>\n","      <td>116.65</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>01-11-2000</td>\n","      <td>4483</td>\n","      <td>1512.47</td>\n","      <td>8.0</td>\n","      <td>46.783613</td>\n","      <td>3997.99</td>\n","      <td>37.31</td>\n","      <td>115.24</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>01-12-2000</td>\n","      <td>4541</td>\n","      <td>1178.11</td>\n","      <td>8.0</td>\n","      <td>46.745856</td>\n","      <td>3972.12</td>\n","      <td>36.98</td>\n","      <td>109.56</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>01-01-2001</td>\n","      <td>4466</td>\n","      <td>1208.18</td>\n","      <td>8.0</td>\n","      <td>46.536033</td>\n","      <td>4326.72</td>\n","      <td>36.90</td>\n","      <td>110.52</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>01-02-2001</td>\n","      <td>4370</td>\n","      <td>1267.18</td>\n","      <td>7.5</td>\n","      <td>46.514595</td>\n","      <td>4247.04</td>\n","      <td>36.73</td>\n","      <td>112.01</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4575c135-6ca5-4dab-9bfc-26358a42655d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4575c135-6ca5-4dab-9bfc-26358a42655d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4575c135-6ca5-4dab-9bfc-26358a42655d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-03b06714-d343-44ff-bd63-9d9ca51a4f13\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-03b06714-d343-44ff-bd63-9d9ca51a4f13')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-03b06714-d343-44ff-bd63-9d9ca51a4f13 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"gd\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"01-11-2000\",\n          \"01-02-2001\",\n          \"01-12-2000\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gold_Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 69,\n        \"min\": 4370,\n        \"max\": 4541,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          4483,\n          4370,\n          4541\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Crude_Oil\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 150.61712834203155,\n        \"min\": 1178.11,\n        \"max\": 1512.47,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1512.47,\n          1267.18,\n          1178.11\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Interest_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.22360679774997896,\n        \"min\": 7.5,\n        \"max\": 8.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          7.5,\n          8.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"USD_INR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.189516042843872,\n        \"min\": 46.318297,\n        \"max\": 46.783613,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          46.783613,\n          46.514595\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sensex\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 244.47480058280044,\n        \"min\": 3711.02,\n        \"max\": 4326.72,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          3997.99,\n          4247.04\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CPI\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.23864199127563582,\n        \"min\": 36.73,\n        \"max\": 37.31,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          37.31,\n          36.73\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"USD_Index\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.0453292104467136,\n        \"min\": 109.56,\n        \"max\": 116.65,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          115.24,\n          112.01\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["gd.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"--mPHbjkk5Bn","executionInfo":{"status":"ok","timestamp":1726037771834,"user_tz":-330,"elapsed":27,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"24159f16-05d0-4829-a464-45cd062b51d7"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(239, 8)"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["gd.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":335},"id":"nbrRqzJpk42o","executionInfo":{"status":"ok","timestamp":1726037771834,"user_tz":-330,"elapsed":22,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"1278a722-2e85-41d9-f31f-d4e124161318"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Date             0\n","Gold_Price       0\n","Crude_Oil        0\n","Interest_Rate    0\n","USD_INR          0\n","Sensex           0\n","CPI              0\n","USD_Index        0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Date</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Gold_Price</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Crude_Oil</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Interest_Rate</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>USD_INR</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Sensex</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>CPI</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>USD_Index</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.model_selection import train_test_split\n","from sklearn.linear_model import LinearRegression\n","from sklearn.ensemble import RandomForestRegressor\n","from sklearn import metrics\n"],"metadata":{"id":"2uie8NShlnt_","executionInfo":{"status":"ok","timestamp":1726037773359,"user_tz":-330,"elapsed":1545,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["gd[\"Date\"]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":458},"id":"DA4xy3wMmGAm","executionInfo":{"status":"ok","timestamp":1726037773361,"user_tz":-330,"elapsed":38,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"a1491b65-3599-4f2d-bd9c-0a3cc8f64d55"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0      01-10-2000\n","1      01-11-2000\n","2      01-12-2000\n","3      01-01-2001\n","4      01-02-2001\n","          ...    \n","234    01-04-2020\n","235    01-05-2020\n","236    01-06-2020\n","237    01-07-2020\n","238    01-08-2020\n","Name: Date, Length: 239, dtype: object"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>01-10-2000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>01-11-2000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>01-12-2000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>01-01-2001</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>01-02-2001</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>234</th>\n","      <td>01-04-2020</td>\n","    </tr>\n","    <tr>\n","      <th>235</th>\n","      <td>01-05-2020</td>\n","    </tr>\n","    <tr>\n","      <th>236</th>\n","      <td>01-06-2020</td>\n","    </tr>\n","    <tr>\n","      <th>237</th>\n","      <td>01-07-2020</td>\n","    </tr>\n","    <tr>\n","      <th>238</th>\n","      <td>01-08-2020</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>239 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> object</label>"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["gd[\"Date\"]=pd.to_datetime(gd[\"Date\"] )"],"metadata":{"id":"zCfciGeAmhZu","executionInfo":{"status":"ok","timestamp":1726037773361,"user_tz":-330,"elapsed":36,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["gd"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"4uGLNdoH0qbx","executionInfo":{"status":"ok","timestamp":1726037773363,"user_tz":-330,"elapsed":37,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"bf53bcc7-ccea-4e5c-84bf-36cf32e5216a"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          Date  Gold_Price  Crude_Oil  Interest_Rate    USD_INR    Sensex  \\\n","0   2000-01-10        4538    1455.51           8.00  46.318297   3711.02   \n","1   2000-01-11        4483    1512.47           8.00  46.783613   3997.99   \n","2   2000-01-12        4541    1178.11           8.00  46.745856   3972.12   \n","3   2001-01-01        4466    1208.18           8.00  46.536033   4326.72   \n","4   2001-01-02        4370    1267.18           7.50  46.514595   4247.04   \n","..         ...         ...        ...            ...        ...       ...   \n","234 2020-01-04       45504    1603.02           4.65  76.222334  33717.62   \n","235 2020-01-05       46343    2298.55           4.25  75.666063  32424.10   \n","236 2020-01-06       47315    2987.46           4.25  75.763427  34915.80   \n","237 2020-01-07       49878    3156.01           4.25  74.908993  37606.89   \n","238 2020-01-08       52917    3243.75           4.25  74.573820  38628.29   \n","\n","        CPI  USD_Index  \n","0     37.23     116.65  \n","1     37.31     115.24  \n","2     36.98     109.56  \n","3     36.90     110.52  \n","4     36.73     112.01  \n","..      ...        ...  \n","234  125.85      99.57  \n","235  126.24      98.34  \n","236  127.00      97.39  \n","237  128.53      93.35  \n","238  129.30      92.14  \n","\n","[239 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-0903df3a-770d-42c8-af01-a3bc8f5cb38d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Gold_Price</th>\n","      <th>Crude_Oil</th>\n","      <th>Interest_Rate</th>\n","      <th>USD_INR</th>\n","      <th>Sensex</th>\n","      <th>CPI</th>\n","      <th>USD_Index</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2000-01-10</td>\n","      <td>4538</td>\n","      <td>1455.51</td>\n","      <td>8.00</td>\n","      <td>46.318297</td>\n","      <td>3711.02</td>\n","      <td>37.23</td>\n","      <td>116.65</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2000-01-11</td>\n","      <td>4483</td>\n","      <td>1512.47</td>\n","      <td>8.00</td>\n","      <td>46.783613</td>\n","      <td>3997.99</td>\n","      <td>37.31</td>\n","      <td>115.24</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2000-01-12</td>\n","      <td>4541</td>\n","      <td>1178.11</td>\n","      <td>8.00</td>\n","      <td>46.745856</td>\n","      <td>3972.12</td>\n","      <td>36.98</td>\n","      <td>109.56</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2001-01-01</td>\n","      <td>4466</td>\n","      <td>1208.18</td>\n","      <td>8.00</td>\n","      <td>46.536033</td>\n","      <td>4326.72</td>\n","      <td>36.90</td>\n","      <td>110.52</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2001-01-02</td>\n","      <td>4370</td>\n","      <td>1267.18</td>\n","      <td>7.50</td>\n","      <td>46.514595</td>\n","      <td>4247.04</td>\n","      <td>36.73</td>\n","      <td>112.01</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>234</th>\n","      <td>2020-01-04</td>\n","      <td>45504</td>\n","      <td>1603.02</td>\n","      <td>4.65</td>\n","      <td>76.222334</td>\n","      <td>33717.62</td>\n","      <td>125.85</td>\n","      <td>99.57</td>\n","    </tr>\n","    <tr>\n","      <th>235</th>\n","      <td>2020-01-05</td>\n","      <td>46343</td>\n","      <td>2298.55</td>\n","      <td>4.25</td>\n","      <td>75.666063</td>\n","      <td>32424.10</td>\n","      <td>126.24</td>\n","      <td>98.34</td>\n","    </tr>\n","    <tr>\n","      <th>236</th>\n","      <td>2020-01-06</td>\n","      <td>47315</td>\n","      <td>2987.46</td>\n","      <td>4.25</td>\n","      <td>75.763427</td>\n","      <td>34915.80</td>\n","      <td>127.00</td>\n","      <td>97.39</td>\n","    </tr>\n","    <tr>\n","      <th>237</th>\n","      <td>2020-01-07</td>\n","      <td>49878</td>\n","      <td>3156.01</td>\n","      <td>4.25</td>\n","      <td>74.908993</td>\n","      <td>37606.89</td>\n","      <td>128.53</td>\n","      <td>93.35</td>\n","    </tr>\n","    <tr>\n","      <th>238</th>\n","      <td>2020-01-08</td>\n","      <td>52917</td>\n","      <td>3243.75</td>\n","      <td>4.25</td>\n","      <td>74.573820</td>\n","      <td>38628.29</td>\n","      <td>129.30</td>\n","      <td>92.14</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>239 rows × 8 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0903df3a-770d-42c8-af01-a3bc8f5cb38d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0903df3a-770d-42c8-af01-a3bc8f5cb38d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0903df3a-770d-42c8-af01-a3bc8f5cb38d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7af0bbeb-d045-4caa-9151-93739ca4c3c1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7af0bbeb-d045-4caa-9151-93739ca4c3c1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7af0bbeb-d045-4caa-9151-93739ca4c3c1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_40e45837-7c5e-40c6-b43e-3b80a7595133\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('gd')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_40e45837-7c5e-40c6-b43e-3b80a7595133 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('gd');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"gd","summary":"{\n  \"name\": \"gd\",\n  \"rows\": 239,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2000-01-10 00:00:00\",\n        \"max\": \"2020-01-08 00:00:00\",\n        \"num_unique_values\": 239,\n        \"samples\": [\n          \"2002-01-10 00:00:00\",\n          \"2001-01-04 00:00:00\",\n          \"2008-01-07 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gold_Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11668,\n        \"min\": 4267,\n        \"max\": 52917,\n        \"num_unique_values\": 237,\n        \"samples\": [\n          18745,\n          4693,\n          30097\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Crude_Oil\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1551.627401491845,\n        \"min\": 887.42,\n        \"max\": 6926.83,\n        \"num_unique_values\": 239,\n        \"samples\": [\n          1331.61,\n          1203.33,\n          5689.98\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Interest_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.1883089135016145,\n        \"min\": 4.25,\n        \"max\": 10.25,\n        \"num_unique_values\": 18,\n        \"samples\": [\n          8.0,\n          7.5,\n          8.75\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"USD_INR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.311143511772425,\n        \"min\": 39.366685,\n        \"max\": 76.222334,\n        \"num_unique_values\": 239,\n        \"samples\": [\n          48.362591,\n          46.75567,\n          43.001054\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sensex\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11032.206600137108,\n        \"min\": 2811.6,\n        \"max\": 41253.74,\n        \"num_unique_values\": 239,\n        \"samples\": [\n          2949.32,\n          3519.16,\n          14355.75\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CPI\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29.106140728923894,\n        \"min\": 36.73,\n        \"max\": 129.3,\n        \"num_unique_values\": 163,\n        \"samples\": [\n          105.96,\n          92.96,\n          102.14\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"USD_Index\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.312606802267338,\n        \"min\": 71.8,\n        \"max\": 120.24,\n        \"num_unique_values\": 234,\n        \"samples\": [\n          85.3,\n          89.97,\n          98.63\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["correlation=gd.corr()\n","plt.figure(figsize=(8, 8))\n","sns.heatmap(correlation, annot=True )\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":778},"id":"sBKqhG5pmAOm","executionInfo":{"status":"ok","timestamp":1726037774354,"user_tz":-330,"elapsed":1026,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"66ef9817-7faf-4a39-e1ff-17630728003e"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":12},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x800 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["gd[\"Date\"].info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IKAjXxrImiYu","executionInfo":{"status":"ok","timestamp":1726037774354,"user_tz":-330,"elapsed":67,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"5ca45bd1-372f-4ac0-9dd3-97be4ec3b743"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.series.Series'>\n","RangeIndex: 239 entries, 0 to 238\n","Series name: Date\n","Non-Null Count  Dtype         \n","--------------  -----         \n","239 non-null    datetime64[ns]\n","dtypes: datetime64[ns](1)\n","memory usage: 2.0 KB\n"]}]},{"cell_type":"code","source":["period1gd=gd.loc[(gd[\"Date\"] >= '2000-01-11')&(gd[\"Date\"]<'2011-01-11')]\n","period1gd"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"hqAMItLXnAak","executionInfo":{"status":"ok","timestamp":1726037774354,"user_tz":-330,"elapsed":64,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"3d48ff26-2020-49d4-93e2-b0e116473c6b"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          Date  Gold_Price  Crude_Oil  Interest_Rate    USD_INR    Sensex  \\\n","1   2000-01-11        4483    1512.47            8.0  46.783613   3997.99   \n","2   2000-01-12        4541    1178.11            8.0  46.745856   3972.12   \n","3   2001-01-01        4466    1208.18            8.0  46.536033   4326.72   \n","4   2001-01-02        4370    1267.18            7.5  46.514595   4247.04   \n","5   2001-01-03        4269    1166.45            7.0  46.609354   3604.38   \n","..         ...         ...        ...            ...        ...       ...   \n","128 2011-01-06       22214    4747.57            6.0  44.818533  18845.87   \n","129 2011-01-07       22627    4793.30            6.0  44.394613  18197.20   \n","130 2011-01-08       25878    4550.04            6.0  45.293900  16676.75   \n","131 2011-01-09       27487    4811.93            6.0  47.291880  16453.76   \n","132 2011-01-10       26668    4916.61            6.0  49.178077  17705.01   \n","\n","       CPI  USD_Index  \n","1    37.31     115.24  \n","2    36.98     109.56  \n","3    36.90     110.52  \n","4    36.73     112.01  \n","5    36.90     117.37  \n","..     ...        ...  \n","128  72.30      74.30  \n","129  73.83      73.90  \n","130  74.21      74.12  \n","131  75.36      78.55  \n","132  75.74      76.17  \n","\n","[132 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-a8745a0b-e572-4f9e-9b6f-23d0e1f60b54\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Gold_Price</th>\n","      <th>Crude_Oil</th>\n","      <th>Interest_Rate</th>\n","      <th>USD_INR</th>\n","      <th>Sensex</th>\n","      <th>CPI</th>\n","      <th>USD_Index</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>2000-01-11</td>\n","      <td>4483</td>\n","      <td>1512.47</td>\n","      <td>8.0</td>\n","      <td>46.783613</td>\n","      <td>3997.99</td>\n","      <td>37.31</td>\n","      <td>115.24</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2000-01-12</td>\n","      <td>4541</td>\n","      <td>1178.11</td>\n","      <td>8.0</td>\n","      <td>46.745856</td>\n","      <td>3972.12</td>\n","      <td>36.98</td>\n","      <td>109.56</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2001-01-01</td>\n","      <td>4466</td>\n","      <td>1208.18</td>\n","      <td>8.0</td>\n","      <td>46.536033</td>\n","      <td>4326.72</td>\n","      <td>36.90</td>\n","      <td>110.52</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2001-01-02</td>\n","      <td>4370</td>\n","      <td>1267.18</td>\n","      <td>7.5</td>\n","      <td>46.514595</td>\n","      <td>4247.04</td>\n","      <td>36.73</td>\n","      <td>112.01</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2001-01-03</td>\n","      <td>4269</td>\n","      <td>1166.45</td>\n","      <td>7.0</td>\n","      <td>46.609354</td>\n","      <td>3604.38</td>\n","      <td>36.90</td>\n","      <td>117.37</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>128</th>\n","      <td>2011-01-06</td>\n","      <td>22214</td>\n","      <td>4747.57</td>\n","      <td>6.0</td>\n","      <td>44.818533</td>\n","      <td>18845.87</td>\n","      <td>72.30</td>\n","      <td>74.30</td>\n","    </tr>\n","    <tr>\n","      <th>129</th>\n","      <td>2011-01-07</td>\n","      <td>22627</td>\n","      <td>4793.30</td>\n","      <td>6.0</td>\n","      <td>44.394613</td>\n","      <td>18197.20</td>\n","      <td>73.83</td>\n","      <td>73.90</td>\n","    </tr>\n","    <tr>\n","      <th>130</th>\n","      <td>2011-01-08</td>\n","      <td>25878</td>\n","      <td>4550.04</td>\n","      <td>6.0</td>\n","      <td>45.293900</td>\n","      <td>16676.75</td>\n","      <td>74.21</td>\n","      <td>74.12</td>\n","    </tr>\n","    <tr>\n","      <th>131</th>\n","      <td>2011-01-09</td>\n","      <td>27487</td>\n","      <td>4811.93</td>\n","      <td>6.0</td>\n","      <td>47.291880</td>\n","      <td>16453.76</td>\n","      <td>75.36</td>\n","      <td>78.55</td>\n","    </tr>\n","    <tr>\n","      <th>132</th>\n","      <td>2011-01-10</td>\n","      <td>26668</td>\n","      <td>4916.61</td>\n","      <td>6.0</td>\n","      <td>49.178077</td>\n","      <td>17705.01</td>\n","      <td>75.74</td>\n","      <td>76.17</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>132 rows × 8 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a8745a0b-e572-4f9e-9b6f-23d0e1f60b54')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a8745a0b-e572-4f9e-9b6f-23d0e1f60b54 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a8745a0b-e572-4f9e-9b6f-23d0e1f60b54');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-dfaa0881-0523-4844-a014-d60d8d86f0c8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dfaa0881-0523-4844-a014-d60d8d86f0c8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-dfaa0881-0523-4844-a014-d60d8d86f0c8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_d4766bce-22eb-418c-a362-de6dac609879\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('period1gd')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_d4766bce-22eb-418c-a362-de6dac609879 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('period1gd');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"period1gd","summary":"{\n  \"name\": \"period1gd\",\n  \"rows\": 132,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2000-01-11 00:00:00\",\n        \"max\": \"2011-01-10 00:00:00\",\n        \"num_unique_values\": 132,\n        \"samples\": [\n          \"2005-01-07 00:00:00\",\n          \"2007-01-10 00:00:00\",\n          \"2002-01-06 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gold_Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5730,\n        \"min\": 4267,\n        \"max\": 27487,\n        \"num_unique_values\": 131,\n        \"samples\": [\n          6134,\n          5986,\n          5313\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Crude_Oil\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1220.0208940398877,\n        \"min\": 887.42,\n        \"max\": 5689.98,\n        \"num_unique_values\": 132,\n        \"samples\": [\n          2454.2,\n          3238.9,\n          1199.06\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Interest_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4007604672576696,\n        \"min\": 6.0,\n        \"max\": 8.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          8.0,\n          7.5,\n          6.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"USD_INR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.5426569234981495,\n        \"min\": 39.366685,\n        \"max\": 51.113321,\n        \"num_unique_values\": 132,\n        \"samples\": [\n          43.490185,\n          39.548261,\n          48.963447\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sensex\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5890.423738457015,\n        \"min\": 2811.6,\n        \"max\": 20509.09,\n        \"num_unique_values\": 132,\n        \"samples\": [\n          7635.42,\n          19837.99,\n          3244.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CPI\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.033634133072935,\n        \"min\": 36.73,\n        \"max\": 75.74,\n        \"num_unique_values\": 93,\n        \"samples\": [\n          44.77,\n          40.96,\n          50.49\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"USD_Index\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.388353903321113,\n        \"min\": 71.8,\n        \"max\": 120.24,\n        \"num_unique_values\": 132,\n        \"samples\": [\n          89.35,\n          76.48,\n          106.11\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["period2gd=gd.loc[(gd[\"Date\"] >= '2011-01-11' )&(gd[\"Date\"]<'2020-01-08')]"],"metadata":{"id":"Tmzxi5slnc4s","executionInfo":{"status":"ok","timestamp":1726037774354,"user_tz":-330,"elapsed":62,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["period2gd"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"rI_qvgT1neHz","executionInfo":{"status":"ok","timestamp":1726037774355,"user_tz":-330,"elapsed":63,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"c6258199-89fd-4447-f7ec-f7ac32aeef39"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          Date  Gold_Price  Crude_Oil  Interest_Rate    USD_INR    Sensex  \\\n","133 2011-01-11       28563    5343.29           6.00  50.574833  16123.46   \n","134 2011-01-12       28063    5486.72           6.00  52.333333  15454.92   \n","135 2012-01-01       27598    5484.92           6.00  51.234633  17193.55   \n","136 2012-01-02       28119    5540.26           9.50  49.151346  17752.68   \n","137 2012-01-03       27854    5927.55           9.50  50.207433  17404.20   \n","..         ...         ...        ...            ...        ...       ...   \n","233 2020-01-03       42285    2392.98           4.65  74.534897  29468.49   \n","234 2020-01-04       45504    1603.02           4.65  76.222334  33717.62   \n","235 2020-01-05       46343    2298.55           4.25  75.666063  32424.10   \n","236 2020-01-06       47315    2987.46           4.25  75.763427  34915.80   \n","237 2020-01-07       49878    3156.01           4.25  74.908993  37606.89   \n","\n","        CPI  USD_Index  \n","133   76.12      78.38  \n","134   75.36      80.18  \n","135   75.74      79.29  \n","136   76.12      78.74  \n","137   76.89      79.00  \n","..      ...        ...  \n","233  124.71      99.05  \n","234  125.85      99.57  \n","235  126.24      98.34  \n","236  127.00      97.39  \n","237  128.53      93.35  \n","\n","[105 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-691e7801-ba0d-4050-9987-7021f1ace0a7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Gold_Price</th>\n","      <th>Crude_Oil</th>\n","      <th>Interest_Rate</th>\n","      <th>USD_INR</th>\n","      <th>Sensex</th>\n","      <th>CPI</th>\n","      <th>USD_Index</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>133</th>\n","      <td>2011-01-11</td>\n","      <td>28563</td>\n","      <td>5343.29</td>\n","      <td>6.00</td>\n","      <td>50.574833</td>\n","      <td>16123.46</td>\n","      <td>76.12</td>\n","      <td>78.38</td>\n","    </tr>\n","    <tr>\n","      <th>134</th>\n","      <td>2011-01-12</td>\n","      <td>28063</td>\n","      <td>5486.72</td>\n","      <td>6.00</td>\n","      <td>52.333333</td>\n","      <td>15454.92</td>\n","      <td>75.36</td>\n","      <td>80.18</td>\n","    </tr>\n","    <tr>\n","      <th>135</th>\n","      <td>2012-01-01</td>\n","      <td>27598</td>\n","      <td>5484.92</td>\n","      <td>6.00</td>\n","      <td>51.234633</td>\n","      <td>17193.55</td>\n","      <td>75.74</td>\n","      <td>79.29</td>\n","    </tr>\n","    <tr>\n","      <th>136</th>\n","      <td>2012-01-02</td>\n","      <td>28119</td>\n","      <td>5540.26</td>\n","      <td>9.50</td>\n","      <td>49.151346</td>\n","      <td>17752.68</td>\n","      <td>76.12</td>\n","      <td>78.74</td>\n","    </tr>\n","    <tr>\n","      <th>137</th>\n","      <td>2012-01-03</td>\n","      <td>27854</td>\n","      <td>5927.55</td>\n","      <td>9.50</td>\n","      <td>50.207433</td>\n","      <td>17404.20</td>\n","      <td>76.89</td>\n","      <td>79.00</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>233</th>\n","      <td>2020-01-03</td>\n","      <td>42285</td>\n","      <td>2392.98</td>\n","      <td>4.65</td>\n","      <td>74.534897</td>\n","      <td>29468.49</td>\n","      <td>124.71</td>\n","      <td>99.05</td>\n","    </tr>\n","    <tr>\n","      <th>234</th>\n","      <td>2020-01-04</td>\n","      <td>45504</td>\n","      <td>1603.02</td>\n","      <td>4.65</td>\n","      <td>76.222334</td>\n","      <td>33717.62</td>\n","      <td>125.85</td>\n","      <td>99.57</td>\n","    </tr>\n","    <tr>\n","      <th>235</th>\n","      <td>2020-01-05</td>\n","      <td>46343</td>\n","      <td>2298.55</td>\n","      <td>4.25</td>\n","      <td>75.666063</td>\n","      <td>32424.10</td>\n","      <td>126.24</td>\n","      <td>98.34</td>\n","    </tr>\n","    <tr>\n","      <th>236</th>\n","      <td>2020-01-06</td>\n","      <td>47315</td>\n","      <td>2987.46</td>\n","      <td>4.25</td>\n","      <td>75.763427</td>\n","      <td>34915.80</td>\n","      <td>127.00</td>\n","      <td>97.39</td>\n","    </tr>\n","    <tr>\n","      <th>237</th>\n","      <td>2020-01-07</td>\n","      <td>49878</td>\n","      <td>3156.01</td>\n","      <td>4.25</td>\n","      <td>74.908993</td>\n","      <td>37606.89</td>\n","      <td>128.53</td>\n","      <td>93.35</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>105 rows × 8 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-691e7801-ba0d-4050-9987-7021f1ace0a7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-691e7801-ba0d-4050-9987-7021f1ace0a7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-691e7801-ba0d-4050-9987-7021f1ace0a7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2a8c65c6-1e99-4cf1-b16b-1143fd4f843b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2a8c65c6-1e99-4cf1-b16b-1143fd4f843b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2a8c65c6-1e99-4cf1-b16b-1143fd4f843b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_5eb494b5-d13d-4c8f-ad06-d6c19b3d3def\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('period2gd')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_5eb494b5-d13d-4c8f-ad06-d6c19b3d3def button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('period2gd');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"period2gd","summary":"{\n  \"name\": \"period2gd\",\n  \"rows\": 105,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2011-01-11 00:00:00\",\n        \"max\": \"2020-01-07 00:00:00\",\n        \"num_unique_values\": 105,\n        \"samples\": [\n          \"2014-01-05 00:00:00\",\n          \"2017-01-04 00:00:00\",\n          \"2017-01-03 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gold_Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4658,\n        \"min\": 25207,\n        \"max\": 49878,\n        \"num_unique_values\": 104,\n        \"samples\": [\n          27427,\n          28471,\n          29010\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Crude_Oil\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1305.0345279428166,\n        \"min\": 1603.02,\n        \"max\": 6926.83,\n        \"num_unique_values\": 105,\n        \"samples\": [\n          6273.13,\n          3365.04,\n          3355.09\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Interest_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.4445858564665848,\n        \"min\": 4.25,\n        \"max\": 10.25,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          6.0,\n          9.5,\n          8.25\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"USD_INR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.3428388244466625,\n        \"min\": 49.151346,\n        \"max\": 76.222334,\n        \"num_unique_values\": 105,\n        \"samples\": [\n          59.308661,\n          64.530959,\n          65.873348\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sensex\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7215.659684986255,\n        \"min\": 15454.92,\n        \"max\": 41253.74,\n        \"num_unique_values\": 105,\n        \"samples\": [\n          24217.34,\n          29918.4,\n          29620.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CPI\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.229299654047932,\n        \"min\": 75.36,\n        \"max\": 128.53,\n        \"num_unique_values\": 70,\n        \"samples\": [\n          92.19,\n          76.12,\n          110.17\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"USD_Index\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.6657017066722375,\n        \"min\": 78.38,\n        \"max\": 102.21,\n        \"num_unique_values\": 102,\n        \"samples\": [\n          80.37,\n          95.63,\n          99.51\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["x1=period1gd.drop([ \"Date\", \"Gold_Price\"] , axis=1)\n","x1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"7zRGpaZ3nfbM","executionInfo":{"status":"ok","timestamp":1726037774355,"user_tz":-330,"elapsed":61,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"4203d15d-68e4-443d-c85a-7dc0a2999534"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Crude_Oil  Interest_Rate    USD_INR    Sensex    CPI  USD_Index\n","1      1512.47            8.0  46.783613   3997.99  37.31     115.24\n","2      1178.11            8.0  46.745856   3972.12  36.98     109.56\n","3      1208.18            8.0  46.536033   4326.72  36.90     110.52\n","4      1267.18            7.5  46.514595   4247.04  36.73     112.01\n","5      1166.45            7.0  46.609354   3604.38  36.90     117.37\n","..         ...            ...        ...       ...    ...        ...\n","128    4747.57            6.0  44.818533  18845.87  72.30      74.30\n","129    4793.30            6.0  44.394613  18197.20  73.83      73.90\n","130    4550.04            6.0  45.293900  16676.75  74.21      74.12\n","131    4811.93            6.0  47.291880  16453.76  75.36      78.55\n","132    4916.61            6.0  49.178077  17705.01  75.74      76.17\n","\n","[132 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-a5b092ee-855c-44f7-acb3-8bcc2c300e85\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Crude_Oil</th>\n","      <th>Interest_Rate</th>\n","      <th>USD_INR</th>\n","      <th>Sensex</th>\n","      <th>CPI</th>\n","      <th>USD_Index</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>1512.47</td>\n","      <td>8.0</td>\n","      <td>46.783613</td>\n","      <td>3997.99</td>\n","      <td>37.31</td>\n","      <td>115.24</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1178.11</td>\n","      <td>8.0</td>\n","      <td>46.745856</td>\n","      <td>3972.12</td>\n","      <td>36.98</td>\n","      <td>109.56</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1208.18</td>\n","      <td>8.0</td>\n","      <td>46.536033</td>\n","      <td>4326.72</td>\n","      <td>36.90</td>\n","      <td>110.52</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1267.18</td>\n","      <td>7.5</td>\n","      <td>46.514595</td>\n","      <td>4247.04</td>\n","      <td>36.73</td>\n","      <td>112.01</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>1166.45</td>\n","      <td>7.0</td>\n","      <td>46.609354</td>\n","      <td>3604.38</td>\n","      <td>36.90</td>\n","      <td>117.37</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>128</th>\n","      <td>4747.57</td>\n","      <td>6.0</td>\n","      <td>44.818533</td>\n","      <td>18845.87</td>\n","      <td>72.30</td>\n","      <td>74.30</td>\n","    </tr>\n","    <tr>\n","      <th>129</th>\n","      <td>4793.30</td>\n","      <td>6.0</td>\n","      <td>44.394613</td>\n","      <td>18197.20</td>\n","      <td>73.83</td>\n","      <td>73.90</td>\n","    </tr>\n","    <tr>\n","      <th>130</th>\n","      <td>4550.04</td>\n","      <td>6.0</td>\n","      <td>45.293900</td>\n","      <td>16676.75</td>\n","      <td>74.21</td>\n","      <td>74.12</td>\n","    </tr>\n","    <tr>\n","      <th>131</th>\n","      <td>4811.93</td>\n","      <td>6.0</td>\n","      <td>47.291880</td>\n","      <td>16453.76</td>\n","      <td>75.36</td>\n","      <td>78.55</td>\n","    </tr>\n","    <tr>\n","      <th>132</th>\n","      <td>4916.61</td>\n","      <td>6.0</td>\n","      <td>49.178077</td>\n","      <td>17705.01</td>\n","      <td>75.74</td>\n","      <td>76.17</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>132 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a5b092ee-855c-44f7-acb3-8bcc2c300e85')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a5b092ee-855c-44f7-acb3-8bcc2c300e85 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a5b092ee-855c-44f7-acb3-8bcc2c300e85');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-dee4cbfd-804f-45f6-9587-7bb469b20cc1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dee4cbfd-804f-45f6-9587-7bb469b20cc1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-dee4cbfd-804f-45f6-9587-7bb469b20cc1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_5a7386f3-621e-4522-af55-ab96e86e5e39\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('x1')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_5a7386f3-621e-4522-af55-ab96e86e5e39 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('x1');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"x1","summary":"{\n  \"name\": \"x1\",\n  \"rows\": 132,\n  \"fields\": [\n    {\n      \"column\": \"Crude_Oil\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1220.0208940398877,\n        \"min\": 887.42,\n        \"max\": 5689.98,\n        \"num_unique_values\": 132,\n        \"samples\": [\n          2454.2,\n          3238.9,\n          1199.06\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Interest_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4007604672576696,\n        \"min\": 6.0,\n        \"max\": 8.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          8.0,\n          7.5,\n          6.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"USD_INR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.5426569234981495,\n        \"min\": 39.366685,\n        \"max\": 51.113321,\n        \"num_unique_values\": 132,\n        \"samples\": [\n          43.490185,\n          39.548261,\n          48.963447\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sensex\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5890.423738457015,\n        \"min\": 2811.6,\n        \"max\": 20509.09,\n        \"num_unique_values\": 132,\n        \"samples\": [\n          7635.42,\n          19837.99,\n          3244.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CPI\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.033634133072935,\n        \"min\": 36.73,\n        \"max\": 75.74,\n        \"num_unique_values\": 93,\n        \"samples\": [\n          44.77,\n          40.96,\n          50.49\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"USD_Index\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.388353903321113,\n        \"min\": 71.8,\n        \"max\": 120.24,\n        \"num_unique_values\": 132,\n        \"samples\": [\n          89.35,\n          76.48,\n          106.11\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["y1=period1gd[\"Gold_Price\"]\n","y1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":458},"id":"fEEexxken01j","executionInfo":{"status":"ok","timestamp":1726037774356,"user_tz":-330,"elapsed":60,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"fe2e646d-6fb2-4777-e6c1-327a2f9f779a"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1       4483\n","2       4541\n","3       4466\n","4       4370\n","5       4269\n","       ...  \n","128    22214\n","129    22627\n","130    25878\n","131    27487\n","132    26668\n","Name: Gold_Price, Length: 132, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Gold_Price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>4483</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4541</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4466</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4370</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>4269</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>128</th>\n","      <td>22214</td>\n","    </tr>\n","    <tr>\n","      <th>129</th>\n","      <td>22627</td>\n","    </tr>\n","    <tr>\n","      <th>130</th>\n","      <td>25878</td>\n","    </tr>\n","    <tr>\n","      <th>131</th>\n","      <td>27487</td>\n","    </tr>\n","    <tr>\n","      <th>132</th>\n","      <td>26668</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>132 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["x2=period2gd.drop([ \"Date\", \"Gold_Price\"] , axis=1)\n","x2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"4cHilQHpn2Ok","executionInfo":{"status":"ok","timestamp":1726037774356,"user_tz":-330,"elapsed":58,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"575e20e3-f534-4e91-8085-f34fb108d13b"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Crude_Oil  Interest_Rate    USD_INR    Sensex     CPI  USD_Index\n","133    5343.29           6.00  50.574833  16123.46   76.12      78.38\n","134    5486.72           6.00  52.333333  15454.92   75.36      80.18\n","135    5484.92           6.00  51.234633  17193.55   75.74      79.29\n","136    5540.26           9.50  49.151346  17752.68   76.12      78.74\n","137    5927.55           9.50  50.207433  17404.20   76.89      79.00\n","..         ...            ...        ...       ...     ...        ...\n","233    2392.98           4.65  74.534897  29468.49  124.71      99.05\n","234    1603.02           4.65  76.222334  33717.62  125.85      99.57\n","235    2298.55           4.25  75.666063  32424.10  126.24      98.34\n","236    2987.46           4.25  75.763427  34915.80  127.00      97.39\n","237    3156.01           4.25  74.908993  37606.89  128.53      93.35\n","\n","[105 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-398d25f5-65a5-4e85-9c18-0a3ad6381f60\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Crude_Oil</th>\n","      <th>Interest_Rate</th>\n","      <th>USD_INR</th>\n","      <th>Sensex</th>\n","      <th>CPI</th>\n","      <th>USD_Index</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>133</th>\n","      <td>5343.29</td>\n","      <td>6.00</td>\n","      <td>50.574833</td>\n","      <td>16123.46</td>\n","      <td>76.12</td>\n","      <td>78.38</td>\n","    </tr>\n","    <tr>\n","      <th>134</th>\n","      <td>5486.72</td>\n","      <td>6.00</td>\n","      <td>52.333333</td>\n","      <td>15454.92</td>\n","      <td>75.36</td>\n","      <td>80.18</td>\n","    </tr>\n","    <tr>\n","      <th>135</th>\n","      <td>5484.92</td>\n","      <td>6.00</td>\n","      <td>51.234633</td>\n","      <td>17193.55</td>\n","      <td>75.74</td>\n","      <td>79.29</td>\n","    </tr>\n","    <tr>\n","      <th>136</th>\n","      <td>5540.26</td>\n","      <td>9.50</td>\n","      <td>49.151346</td>\n","      <td>17752.68</td>\n","      <td>76.12</td>\n","      <td>78.74</td>\n","    </tr>\n","    <tr>\n","      <th>137</th>\n","      <td>5927.55</td>\n","      <td>9.50</td>\n","      <td>50.207433</td>\n","      <td>17404.20</td>\n","      <td>76.89</td>\n","      <td>79.00</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>233</th>\n","      <td>2392.98</td>\n","      <td>4.65</td>\n","      <td>74.534897</td>\n","      <td>29468.49</td>\n","      <td>124.71</td>\n","      <td>99.05</td>\n","    </tr>\n","    <tr>\n","      <th>234</th>\n","      <td>1603.02</td>\n","      <td>4.65</td>\n","      <td>76.222334</td>\n","      <td>33717.62</td>\n","      <td>125.85</td>\n","      <td>99.57</td>\n","    </tr>\n","    <tr>\n","      <th>235</th>\n","      <td>2298.55</td>\n","      <td>4.25</td>\n","      <td>75.666063</td>\n","      <td>32424.10</td>\n","      <td>126.24</td>\n","      <td>98.34</td>\n","    </tr>\n","    <tr>\n","      <th>236</th>\n","      <td>2987.46</td>\n","      <td>4.25</td>\n","      <td>75.763427</td>\n","      <td>34915.80</td>\n","      <td>127.00</td>\n","      <td>97.39</td>\n","    </tr>\n","    <tr>\n","      <th>237</th>\n","      <td>3156.01</td>\n","      <td>4.25</td>\n","      <td>74.908993</td>\n","      <td>37606.89</td>\n","      <td>128.53</td>\n","      <td>93.35</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>105 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-398d25f5-65a5-4e85-9c18-0a3ad6381f60')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-398d25f5-65a5-4e85-9c18-0a3ad6381f60 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-398d25f5-65a5-4e85-9c18-0a3ad6381f60');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6336608f-e89a-4472-a688-70ca47253e50\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6336608f-e89a-4472-a688-70ca47253e50')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6336608f-e89a-4472-a688-70ca47253e50 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_38f85191-7a4a-441f-adfa-b822115cbb5e\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('x2')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_38f85191-7a4a-441f-adfa-b822115cbb5e button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('x2');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"x2","summary":"{\n  \"name\": \"x2\",\n  \"rows\": 105,\n  \"fields\": [\n    {\n      \"column\": \"Crude_Oil\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1305.0345279428166,\n        \"min\": 1603.02,\n        \"max\": 6926.83,\n        \"num_unique_values\": 105,\n        \"samples\": [\n          6273.13,\n          3365.04,\n          3355.09\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Interest_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.4445858564665848,\n        \"min\": 4.25,\n        \"max\": 10.25,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          6.0,\n          9.5,\n          8.25\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"USD_INR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.3428388244466625,\n        \"min\": 49.151346,\n        \"max\": 76.222334,\n        \"num_unique_values\": 105,\n        \"samples\": [\n          59.308661,\n          64.530959,\n          65.873348\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sensex\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7215.659684986255,\n        \"min\": 15454.92,\n        \"max\": 41253.74,\n        \"num_unique_values\": 105,\n        \"samples\": [\n          24217.34,\n          29918.4,\n          29620.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CPI\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.229299654047932,\n        \"min\": 75.36,\n        \"max\": 128.53,\n        \"num_unique_values\": 70,\n        \"samples\": [\n          92.19,\n          76.12,\n          110.17\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"USD_Index\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.6657017066722375,\n        \"min\": 78.38,\n        \"max\": 102.21,\n        \"num_unique_values\": 102,\n        \"samples\": [\n          80.37,\n          95.63,\n          99.51\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["y2=period2gd[\"Gold_Price\"]\n","y2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":458},"id":"mCjXsU-Rn3Ha","executionInfo":{"status":"ok","timestamp":1726037774357,"user_tz":-330,"elapsed":57,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"6abb3e9c-d761-49b5-8ba7-4208ec2af450"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["133    28563\n","134    28063\n","135    27598\n","136    28119\n","137    27854\n","       ...  \n","233    42285\n","234    45504\n","235    46343\n","236    47315\n","237    49878\n","Name: Gold_Price, Length: 105, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Gold_Price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>133</th>\n","      <td>28563</td>\n","    </tr>\n","    <tr>\n","      <th>134</th>\n","      <td>28063</td>\n","    </tr>\n","    <tr>\n","      <th>135</th>\n","      <td>27598</td>\n","    </tr>\n","    <tr>\n","      <th>136</th>\n","      <td>28119</td>\n","    </tr>\n","    <tr>\n","      <th>137</th>\n","      <td>27854</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>233</th>\n","      <td>42285</td>\n","    </tr>\n","    <tr>\n","      <th>234</th>\n","      <td>45504</td>\n","    </tr>\n","    <tr>\n","      <th>235</th>\n","      <td>46343</td>\n","    </tr>\n","    <tr>\n","      <th>236</th>\n","      <td>47315</td>\n","    </tr>\n","    <tr>\n","      <th>237</th>\n","      <td>49878</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>105 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["x1_train,x1_test,y1_train,y1_test = train_test_split(x1, y1, test_size=0.1, random_state=2)\n","x2_train,x2_test,y2_train,y2_test = train_test_split(x2, y2, test_size=0.1, random_state=2)"],"metadata":{"id":"yc5_gag1sJcR","executionInfo":{"status":"ok","timestamp":1726037774357,"user_tz":-330,"elapsed":56,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["lg=LinearRegression()\n","lg.fit(x1_train,y1_train)\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"Ou0JZpXDsjJf","executionInfo":{"status":"ok","timestamp":1726037774357,"user_tz":-330,"elapsed":55,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"535a7441-0f57-4f7a-f5fa-4b4911641294"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearRegression()"],"text/html":["<style>#sk-container-id-1 {color: black;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["x1_train_prediction=lg.predict(x1_train)\n","training_data = metrics.r2_score(x1_train_prediction, y1_train)\n","print(training_data)\n","\n","X1_test_prediction = lg.predict(x1_test)\n","x1_test_data=metrics.r2_score(X1_test_prediction , y1_test)\n","print(x1_test_data)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CUiVD7-N1thg","executionInfo":{"status":"ok","timestamp":1726037774357,"user_tz":-330,"elapsed":52,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"0a9eb510-f1bf-4d70-ca84-d7f33b019105"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["0.9789809492327904\n","0.9772607512913665\n"]}]},{"cell_type":"code","source":["rfr=RandomForestRegressor(n_estimators=100)\n","rfr.fit(x1_train,y1_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"a9vSoHTdvYjk","executionInfo":{"status":"ok","timestamp":1726037774950,"user_tz":-330,"elapsed":637,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"881a9cc2-5b78-4c6e-c061-670d49b8b315"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["RandomForestRegressor()"],"text/html":["<style>#sk-container-id-2 {color: black;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestRegressor()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestRegressor</label><div class=\"sk-toggleable__content\"><pre>RandomForestRegressor()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["x1_train_prediction = rfr.predict(x1_train)\n","training_data=metrics.r2_score(x1_train_prediction, y1_train)\n","print(training_data)\n","X1_test_prediction=rfr.predict(x1_test)\n","test_data=metrics.r2_score(X1_test_prediction, y1_test)\n","print(test_data)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Dtk9z4FPvhoK","executionInfo":{"status":"ok","timestamp":1726037774950,"user_tz":-330,"elapsed":38,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"03a8bb45-49ec-4f51-c497-d44ffa32c7bf"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["0.9978345484050536\n","0.9804365203918765\n"]}]},{"cell_type":"code","source":["lg2=LinearRegression ()\n","lg2.fit (x2_train,y2_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"N6baI12WwMWq","executionInfo":{"status":"ok","timestamp":1726037774950,"user_tz":-330,"elapsed":34,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"95ff07ea-e2d7-48fc-c829-cf1e58b1ca1a"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearRegression()"],"text/html":["<style>#sk-container-id-3 {color: black;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["x2_train_prediction=lg2.predict(x2_train)\n","training_data=metrics.r2_score(x2_train_prediction,y2_train)\n","print(training_data)\n","X2_test_prediction=lg2.predict(x2_test)\n","test_data=metrics.r2_score(X2_test_prediction, y2_test)\n","print(test_data)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"O-bs-hU0wTTL","executionInfo":{"status":"ok","timestamp":1726037774951,"user_tz":-330,"elapsed":33,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"b61bb2b0-62bb-4909-ad38-565f5fb21a60"},"execution_count":27,"outputs":[{"output_type":"stream","name":"stdout","text":["0.6703354098390504\n","0.3310709044488255\n"]}]},{"cell_type":"code","source":[" rfr2 = RandomForestRegressor(n_estimators=100)\n"," rfr2.fit(x2_train,y2_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"FgpkfmHyxVTP","executionInfo":{"status":"ok","timestamp":1726037774951,"user_tz":-330,"elapsed":29,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"5cf81653-427c-4c39-ed58-ebf01d071c5e"},"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["RandomForestRegressor()"],"text/html":["<style>#sk-container-id-4 {color: black;}#sk-container-id-4 pre{padding: 0;}#sk-container-id-4 div.sk-toggleable {background-color: white;}#sk-container-id-4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-4 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-4 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-4 div.sk-item {position: relative;z-index: 1;}#sk-container-id-4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-4 div.sk-item::before, #sk-container-id-4 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-4 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-4 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-4 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-4 div.sk-label-container {text-align: center;}#sk-container-id-4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-4 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestRegressor()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" checked><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestRegressor</label><div class=\"sk-toggleable__content\"><pre>RandomForestRegressor()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["x2_train_prediction = rfr2.predict(x2_train)\n","training_data=metrics.r2_score(x2_train_prediction,y2_train)\n","print(training_data)\n","X2_test_prediction=rfr2.predict(x2_test)\n","test_data=metrics.r2_score(X2_test_prediction, y2_test)\n","print(test_data)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"A02EzsRNxmXB","executionInfo":{"status":"ok","timestamp":1726037774951,"user_tz":-330,"elapsed":28,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"ece80d84-588a-4a44-ffc6-44c0a33a3258"},"execution_count":29,"outputs":[{"output_type":"stream","name":"stdout","text":["0.9893212701434713\n","0.728140560781017\n"]}]},{"cell_type":"code","source":["input_data=(1455.51,8, 46.318297, 3711.02,37.23,116.65)\n","input_data_as_numpy_array=np.array(input_data)\n","reshaped=input_data_as_numpy_array.reshape(1, -1)\n","prediction=lg.predict(reshaped)\n","\n","print(prediction [0])\n","pprediction=rfr.predict(reshaped)\n","print(pprediction [0])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"X0X5wDXpxsW_","executionInfo":{"status":"ok","timestamp":1726037774951,"user_tz":-330,"elapsed":24,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"c7bd6cb1-7785-480e-9b58-aa316a468d34"},"execution_count":30,"outputs":[{"output_type":"stream","name":"stdout","text":["4795.852011852196\n","4452.66\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/base.py:465: UserWarning: X does not have valid feature names, but LinearRegression was fitted with feature names\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/base.py:465: UserWarning: X does not have valid feature names, but RandomForestRegressor was fitted with feature names\n","  warnings.warn(\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"0EDUxiAJx_aK","executionInfo":{"status":"ok","timestamp":1726037774952,"user_tz":-330,"elapsed":20,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}}},"execution_count":30,"outputs":[]}]}