{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyO8rF3Simr0BxBt0JbKlE56"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"6zA2HvXljf_z"},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","from matplotlib import pyplot as plt\n","import seaborn as sns\n","from sklearn.linear_model import LinearRegression\n","from sklearn import metrics\n","import random\n","from sklearn.ensemble import RandomForestRegressor"]},{"cell_type":"code","source":["from google.colab import files\n","files.upload()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":221},"id":"Z4H0GBWajy7_","executionInfo":{"status":"ok","timestamp":1725512695801,"user_tz":-330,"elapsed":31977,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"88d26008-ad0d-46bf-8002-1d01e97261af"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-a2dd6d7f-f6e5-4428-aca7-2a11efc1b648\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-a2dd6d7f-f6e5-4428-aca7-2a11efc1b648\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script>// Copyright 2017 Google LLC\n","//\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n","// you may not use this file except in compliance with the License.\n","// You may obtain a copy of the License at\n","//\n","//      http://www.apache.org/licenses/LICENSE-2.0\n","//\n","// Unless required by applicable law or agreed to in writing, software\n","// distributed under the License is distributed on an \"AS IS\" BASIS,\n","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","// See the License for the specific language governing permissions and\n","// limitations under the License.\n","\n","/**\n"," * @fileoverview Helpers for google.colab Python module.\n"," */\n","(function(scope) {\n","function span(text, styleAttributes = {}) {\n","  const element = document.createElement('span');\n","  element.textContent = text;\n","  for (const key of Object.keys(styleAttributes)) {\n","    element.style[key] = styleAttributes[key];\n","  }\n","  return element;\n","}\n","\n","// Max number of bytes which will be uploaded at a time.\n","const MAX_PAYLOAD_SIZE = 100 * 1024;\n","\n","function _uploadFiles(inputId, outputId) {\n","  const steps = uploadFilesStep(inputId, outputId);\n","  const outputElement = document.getElementById(outputId);\n","  // Cache steps on the outputElement to make it available for the next call\n","  // to uploadFilesContinue from Python.\n","  outputElement.steps = steps;\n","\n","  return _uploadFilesContinue(outputId);\n","}\n","\n","// This is roughly an async generator (not supported in the browser yet),\n","// where there are multiple asynchronous steps and the Python side is going\n","// to poll for completion of each step.\n","// This uses a Promise to block the python side on completion of each step,\n","// then passes the result of the previous step as the input to the next step.\n","function _uploadFilesContinue(outputId) {\n","  const outputElement = document.getElementById(outputId);\n","  const steps = outputElement.steps;\n","\n","  const next = steps.next(outputElement.lastPromiseValue);\n","  return Promise.resolve(next.value.promise).then((value) => {\n","    // Cache the last promise value to make it available to the next\n","    // step of the generator.\n","    outputElement.lastPromiseValue = value;\n","    return next.value.response;\n","  });\n","}\n","\n","/**\n"," * Generator function which is called between each async step of the upload\n"," * process.\n"," * @param {string} inputId Element ID of the input file picker element.\n"," * @param {string} outputId Element ID of the output display.\n"," * @return {!Iterable<!Object>} Iterable of next steps.\n"," */\n","function* uploadFilesStep(inputId, outputId) {\n","  const inputElement = document.getElementById(inputId);\n","  inputElement.disabled = false;\n","\n","  const outputElement = document.getElementById(outputId);\n","  outputElement.innerHTML = '';\n","\n","  const pickedPromise = new Promise((resolve) => {\n","    inputElement.addEventListener('change', (e) => {\n","      resolve(e.target.files);\n","    });\n","  });\n","\n","  const cancel = document.createElement('button');\n","  inputElement.parentElement.appendChild(cancel);\n","  cancel.textContent = 'Cancel upload';\n","  const cancelPromise = new Promise((resolve) => {\n","    cancel.onclick = () => {\n","      resolve(null);\n","    };\n","  });\n","\n","  // Wait for the user to pick the files.\n","  const files = yield {\n","    promise: Promise.race([pickedPromise, cancelPromise]),\n","    response: {\n","      action: 'starting',\n","    }\n","  };\n","\n","  cancel.remove();\n","\n","  // Disable the input element since further picks are not allowed.\n","  inputElement.disabled = true;\n","\n","  if (!files) {\n","    return {\n","      response: {\n","        action: 'complete',\n","      }\n","    };\n","  }\n","\n","  for (const file of files) {\n","    const li = document.createElement('li');\n","    li.append(span(file.name, {fontWeight: 'bold'}));\n","    li.append(span(\n","        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n","        `last modified: ${\n","            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n","                                    'n/a'} - `));\n","    const percent = span('0% done');\n","    li.appendChild(percent);\n","\n","    outputElement.appendChild(li);\n","\n","    const fileDataPromise = new Promise((resolve) => {\n","      const reader = new FileReader();\n","      reader.onload = (e) => {\n","        resolve(e.target.result);\n","      };\n","      reader.readAsArrayBuffer(file);\n","    });\n","    // Wait for the data to be ready.\n","    let fileData = yield {\n","      promise: fileDataPromise,\n","      response: {\n","        action: 'continue',\n","      }\n","    };\n","\n","    // Use a chunked sending to avoid message size limits. See b/62115660.\n","    let position = 0;\n","    do {\n","      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n","      const chunk = new Uint8Array(fileData, position, length);\n","      position += length;\n","\n","      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n","      yield {\n","        response: {\n","          action: 'append',\n","          file: file.name,\n","          data: base64,\n","        },\n","      };\n","\n","      let percentDone = fileData.byteLength === 0 ?\n","          100 :\n","          Math.round((position / fileData.byteLength) * 100);\n","      percent.textContent = `${percentDone}% done`;\n","\n","    } while (position < fileData.byteLength);\n","  }\n","\n","  // All done.\n","  yield {\n","    response: {\n","      action: 'complete',\n","    }\n","  };\n","}\n","\n","scope.google = scope.google || {};\n","scope.google.colab = scope.google.colab || {};\n","scope.google.colab._files = {\n","  _uploadFiles,\n","  _uploadFilesContinue,\n","};\n","})(self);\n","</script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving Household energy bill data (1).csv to Household energy bill data (1).csv\n"]},{"output_type":"execute_result","data":{"text/plain":["{'Household energy bill data (1).csv': b'num_rooms,num_people,housearea,is_ac,is_tv,is_flat,ave_monthly_income,num_children,is_urban,amount_paid\\r\\n3,3,742.57,1,1,1,9675.93,2,0,560.4814469\\r\\n1,5,952.99,0,1,0,35064.79,1,1,633.2836786\\r\\n3,1,761.44,1,1,1,22292.44,0,0,511.8791568\\r\\n0,5,861.32,1,1,0,12139.08,0,0,332.9920353\\r\\n1,8,731.61,0,1,0,17230.1,2,1,658.285625\\r\\n0,5,837.24,0,1,1,24661.81,2,1,793.2423456\\r\\n4,5,679.04,0,1,0,28184.43,1,1,570.3828451\\r\\n3,4,1044.65,0,0,1,16912.69,2,1,585.4051997\\r\\n2,4,713.9,1,0,0,26058.28,0,1,653.2008685\\r\\n1,6,734.43,0,0,0,22545.5,2,1,606.015138\\r\\n2,6,742.69,0,1,0,15670.76,0,0,222.7345416\\r\\n1,6,924.04,1,1,0,22527.33,0,1,606.1839763\\r\\n0,3,776.62,0,1,0,32341.3,0,1,528.2784474\\r\\n2,4,990.59,0,1,1,13084.35,0,1,622.3819174\\r\\n2,7,870.61,0,1,0,31430.75,1,1,756.6516959\\r\\n1,5,747.02,0,1,0,28595.98,0,1,471.1284367\\r\\n3,5,699.01,0,0,1,44997,3,0,458.8428794\\r\\n2,8,932.84,1,1,0,30009.93,1,1,818.1268647\\r\\n4,4,573.69,0,1,0,32902.39,1,0,355.4343346\\r\\n3,1,901.33,0,1,1,27090.16,2,1,707.9660271\\r\\n1,6,902.07,1,1,0,11306.32,1,0,583.5433244\\r\\n3,4,686.59,0,1,1,36352.99,1,1,579.6585178\\r\\n1,4,860.28,0,0,0,7792.07,0,1,529.6833919\\r\\n1,7,859.83,0,1,1,42003.43,1,1,763.9111317\\r\\n2,6,773.65,0,1,0,30764.16,2,1,695.0368687\\r\\n2,7,808.93,0,1,1,26083.57,1,1,605.607782\\r\\n3,2,890.69,1,1,1,17349.88,4,1,994.6565775\\r\\n1,1,765.32,0,1,1,8315.34,0,1,535.7010785\\r\\n1,2,657.97,1,1,0,28148.91,1,1,711.3453733\\r\\n2,7,816.77,0,1,1,16817.74,1,1,703.4094805\\r\\n3,5,988.62,0,1,0,30021.55,3,1,731.2151799\\r\\n1,4,733.55,0,1,1,14935.76,2,1,746.0997602\\r\\n3,6,682.75,0,1,1,14898.26,1,1,601.4020142\\r\\n0,9,1009.31,1,1,0,26697.92,2,0,715.5738462\\r\\n2,7,764.79,1,1,1,26101.9,0,1,782.140521\\r\\n2,6,643.52,0,1,0,5829.41,1,1,534.364255\\r\\n2,5,554.38,0,0,1,28399.11,0,0,312.5746088\\r\\n3,5,823.05,0,1,0,32656.32,0,1,611.881149\\r\\n1,4,640.25,0,1,0,20463.3,0,1,552.347876\\r\\n4,5,689.76,1,0,0,26291.15,0,0,349.6027282\\r\\n2,5,813.69,0,1,1,23541.2,1,1,612.597427\\r\\n1,3,821.69,1,1,0,16745.65,1,1,737.1308417\\r\\n3,3,664.68,1,0,1,32740.89,2,1,873.6665321\\r\\n2,3,1054.58,1,1,1,21255.23,0,1,696.3223547\\r\\n2,0,1042.81,0,0,1,39314.16,0,0,238.9001909\\r\\n3,5,929.46,0,1,1,16106.32,1,1,592.0867337\\r\\n1,4,673.08,1,0,1,14214.36,2,0,658.0727505\\r\\n1,5,713.62,0,1,1,36298.72,1,1,694.1850442\\r\\n2,5,704.72,1,1,1,31749.91,2,1,926.2187523\\r\\n1,4,794.74,0,0,0,6364.43,1,1,622.8890891\\r\\n2,4,829.78,1,1,1,19835.2,2,1,1010.938058\\r\\n1,4,953.19,1,1,1,39489.23,1,1,815.613587\\r\\n1,5,585.55,0,0,1,20797.91,3,0,565.2021559\\r\\n5,6,633.97,1,0,1,28202.39,0,0,447.529972\\r\\n3,5,820.54,0,1,0,22586.51,0,1,579.811638\\r\\n3,3,750.39,0,1,0,18681.58,3,0,564.8511814\\r\\n2,2,672.37,1,1,1,19403.1,1,1,803.3617544\\r\\n2,4,685.43,0,1,0,34816.79,0,1,453.9486956\\r\\n3,2,662.29,0,1,0,36722.54,2,0,428.0121685\\r\\n1,6,725.53,0,1,0,25109.88,3,0,559.7427587\\r\\n1,0,878.69,0,1,1,15569.46,2,1,821.6441918\\r\\n3,7,898.5,1,1,0,36884.89,2,1,976.8192519\\r\\n3,7,893.27,0,1,0,16860.46,1,1,692.4273097\\r\\n3,7,533.3,0,1,1,27626.36,0,1,657.3938401\\r\\n1,8,518.49,1,1,0,30763.52,0,1,676.1190816\\r\\n3,7,794.89,1,1,0,35189.49,2,0,670.8193916\\r\\n2,8,711.53,0,0,0,37215.47,1,0,307.582511\\r\\n2,6,1010.55,0,1,0,27689.47,1,0,440.5656881\\r\\n4,4,845.12,0,1,0,12264.5,1,1,564.655552\\r\\n1,7,714.65,1,1,0,24488.96,1,0,567.2766771\\r\\n1,5,704.64,0,1,1,31282.86,0,1,626.4506534\\r\\n2,2,690.69,0,1,1,14905.48,0,1,664.9073389\\r\\n1,2,704.75,0,1,1,46993,0,0,390.598628\\r\\n2,4,873.04,1,1,0,22599.47,1,0,525.5660584\\r\\n1,4,862.83,0,1,1,14622.24,2,1,654.9969378\\r\\n4,6,534.35,0,1,1,45379.66,0,1,633.9372718\\r\\n2,5,666.23,0,1,0,25393.47,1,0,328.825046\\r\\n3,8,780.66,1,0,1,28477.29,1,1,727.4280326\\r\\n2,6,700.32,1,1,0,17418.74,2,1,806.5937005\\r\\n2,6,388.17,0,1,1,9736.98,1,1,690.6665444\\r\\n3,6,637.24,1,1,1,35536.9,0,0,397.6351074\\r\\n2,3,868.51,0,1,0,30102.18,0,1,620.1505838\\r\\n2,5,956.49,1,1,1,30233.2,1,0,640.7265185\\r\\n3,8,613.67,0,1,0,21489.89,0,0,273.5962329\\r\\n2,5,556.77,0,1,1,33455.61,0,0,433.1814116\\r\\n1,4,719.97,0,1,1,22954.06,0,1,553.3296824\\r\\n1,4,722.55,1,0,1,49903.47,0,0,506.9184632\\r\\n2,6,755.85,1,0,0,28414.45,2,1,762.1161771\\r\\n2,4,912.5,1,1,0,29492.59,0,0,547.5001535\\r\\n2,8,592.68,1,1,1,20542.24,1,1,780.4230187\\r\\n-1,5,697.17,0,1,1,17804.39,2,1,817.5148774\\r\\n2,4,631.85,1,1,0,29206.67,0,0,445.7234847\\r\\n3,7,627.3,0,1,0,32568.9,0,1,488.9383085\\r\\n2,5,686,0,1,0,12090.35,2,1,762.7457624\\r\\n4,2,755.81,1,1,0,34541.06,2,0,702.2583676\\r\\n3,2,875.98,0,1,0,24849.38,2,0,534.6117635\\r\\n1,5,729.06,1,1,0,22456.58,1,1,848.0907729\\r\\n2,3,698.35,0,0,0,37442.86,2,0,302.4912074\\r\\n2,5,621.6,1,1,0,27571.38,1,0,421.1591555\\r\\n3,9,1123.53,0,1,1,33964.42,0,1,559.968969\\r\\n3,5,486.17,0,1,0,18879.68,0,0,198.5154603\\r\\n3,10,810.5,0,1,1,39304.91,1,1,815.3694045\\r\\n2,6,750.76,1,1,0,26952.99,2,1,789.5914601\\r\\n2,4,1000.26,1,1,1,18076.23,0,0,424.9164636\\r\\n0,8,758,1,1,0,24767,0,0,439.7280884\\r\\n2,3,700.37,0,1,1,14199.3,3,1,836.6893793\\r\\n3,5,674.38,0,1,0,14925.92,0,1,491.2202209\\r\\n2,4,1021.58,0,1,1,36811.24,2,0,425.0775644\\r\\n3,4,773.05,0,1,0,20515.14,0,1,451.3722352\\r\\n2,8,969.13,1,1,0,10539.88,1,0,439.6013586\\r\\n1,7,580.33,0,1,0,30949.12,1,0,472.0017023\\r\\n1,4,751.24,0,1,1,24104.97,2,1,835.1975354\\r\\n1,9,835.06,0,1,1,27876.39,2,1,755.5377839\\r\\n1,2,984.48,1,1,1,29999.75,2,1,840.2709695\\r\\n1,6,900.96,0,1,0,12476.47,1,1,653.6549818\\r\\n2,4,701.95,0,1,1,31473.06,2,1,828.2807862\\r\\n1,6,719.2,0,1,0,31574.87,1,1,541.8547912\\r\\n2,4,742.02,1,1,0,28730.32,1,0,603.3643827\\r\\n2,3,776.74,1,1,1,28498.21,1,1,844.0376613\\r\\n3,2,651.79,0,1,0,31858.78,0,1,510.4280629\\r\\n2,6,824.89,1,1,1,22751.5,0,1,669.3708527\\r\\n-1,2,638.39,0,1,0,26305.76,2,1,675.4832544\\r\\n2,5,1076.14,0,1,1,34651.95,2,0,558.4210491\\r\\n3,7,579.55,1,1,1,23892.45,0,0,457.7362956\\r\\n2,4,777.33,0,1,0,20522.84,1,1,704.3168173\\r\\n2,0,549.85,0,0,0,23928.25,2,1,611.2579713\\r\\n1,6,764.09,1,0,1,18017.78,2,0,605.2541021\\r\\n2,6,879.51,1,1,1,22013.63,0,0,422.5633362\\r\\n2,6,671.88,0,0,1,14134.17,1,1,563.5413893\\r\\n2,7,887.91,1,1,0,20988.27,0,1,724.8519505\\r\\n3,4,699.8,0,1,1,12241.93,0,1,493.2565674\\r\\n1,6,850.87,1,1,0,3776.08,0,1,652.293855\\r\\n1,11,946.74,0,1,1,28819.03,2,1,730.0905088\\r\\n3,7,549.72,0,1,1,41533.34,1,0,556.8264404\\r\\n0,5,755.03,0,1,0,19693.19,1,0,261.9466408\\r\\n2,6,828.63,1,1,1,10699.02,2,1,836.41467\\r\\n1,5,323.95,0,1,0,26295.5,1,1,505.4436476\\r\\n3,6,683.29,0,1,1,23182.8,1,0,507.9912064\\r\\n2,5,557.23,0,0,0,19273.03,0,0,197.0671145\\r\\n2,4,683.02,1,1,1,29193.07,1,0,606.133103\\r\\n4,4,840.2,1,1,0,33580.57,0,1,653.2507522\\r\\n1,8,970.75,0,1,0,32285.37,0,0,367.968041\\r\\n3,2,929.79,1,0,1,24110.05,2,0,654.9929598\\r\\n1,5,692.13,0,1,0,26348.19,2,0,490.1176933\\r\\n1,1,878.83,0,1,0,34531.17,1,0,371.7114552\\r\\n3,7,572.78,1,1,1,34099.98,1,0,513.9281277\\r\\n2,4,840.06,0,1,1,20857.83,2,1,779.8590201\\r\\n2,2,765.99,0,1,0,21128.67,2,0,470.4746362\\r\\n2,6,627.91,1,1,1,21104.1,3,0,823.628494\\r\\n3,6,884.14,1,1,1,25621.9,0,0,613.4892019\\r\\n3,6,776.99,1,1,0,15962.89,1,0,517.2493253\\r\\n2,8,567.36,1,1,1,12522.58,1,1,896.6508247\\r\\n1,5,870.71,0,1,1,29910.62,3,1,812.1212149\\r\\n2,4,1177.7,1,1,1,19366.43,3,1,984.2688434\\r\\n1,5,950.5,0,1,1,15450.66,0,0,414.7156609\\r\\n1,2,817.61,0,1,0,38734.51,1,1,622.0495954\\r\\n1,7,658.86,0,1,1,35701.06,1,0,534.1766167\\r\\n3,7,764.33,0,1,1,31872.19,2,0,570.4230146\\r\\n3,2,1005.38,1,1,1,33346.93,1,1,754.6272794\\r\\n1,3,968.28,0,1,0,32258.4,2,1,815.0588563\\r\\n2,3,800.96,0,1,0,30971.97,2,0,455.3476047\\r\\n2,3,564.17,1,1,1,16354.79,0,1,610.0848676\\r\\n1,5,752.39,0,1,1,35560.75,1,1,589.4441598\\r\\n2,4,771.59,0,1,1,25489.96,1,1,601.7710286\\r\\n2,4,1069.32,0,1,0,12435.65,1,1,686.7638017\\r\\n3,5,836.5,0,1,1,28629.77,2,1,862.2175725\\r\\n3,5,934.82,0,1,0,24210.55,0,1,593.7690527\\r\\n2,3,760.75,0,1,0,32129.77,3,0,545.6086013\\r\\n1,7,665.07,0,1,0,42115.1,1,1,576.2863923\\r\\n1,4,704.72,0,0,0,20191.55,1,1,500.8210966\\r\\n4,-1,1058.32,1,0,0,17182.76,4,0,598.9381838\\r\\n2,4,883.45,0,0,0,22813.35,2,0,372.4437758\\r\\n1,6,626.75,0,1,0,31028.6,3,0,457.7769971\\r\\n2,5,635.28,0,1,0,32315.58,1,1,567.3438377\\r\\n1,5,574.3,0,1,0,11962.93,0,1,429.2638457\\r\\n1,3,813.06,1,1,1,31780.33,2,1,908.841547\\r\\n2,7,911.98,0,1,0,26336.01,2,1,794.8439016\\r\\n2,4,880.15,0,1,0,22242.58,2,1,616.882502\\r\\n2,7,931.86,0,1,0,24697.02,0,1,575.1968352\\r\\n2,6,809.69,0,1,0,18617.69,1,0,311.4161298\\r\\n2,3,786.46,0,1,0,31008.24,3,0,467.478603\\r\\n-1,8,801.48,1,1,0,22003.44,2,1,960.3130864\\r\\n1,4,748.04,1,1,1,16081.34,0,0,382.0630621\\r\\n1,5,670.5,1,0,1,-1013.85,2,0,528.6530379\\r\\n2,6,548.96,0,1,0,31400.35,2,0,485.7386496\\r\\n2,5,569.94,0,0,1,19983.43,1,1,562.9551679\\r\\n2,3,731.05,0,1,1,21571.95,1,0,479.555862\\r\\n1,4,1035.94,1,1,0,38030.46,1,1,821.6955521\\r\\n1,1,799.66,0,0,0,21299.68,1,0,277.1831966\\r\\n2,5,843.85,0,1,0,19607.07,0,0,306.9960988\\r\\n2,6,928.7,0,1,1,31689,1,1,792.8161884\\r\\n2,9,856.5,0,1,0,18043.09,1,1,539.6381853\\r\\n1,5,767.79,0,1,0,28953.16,0,0,183.4503234\\r\\n2,7,996.66,1,1,0,30070.15,0,1,618.7511794\\r\\n4,8,795.46,1,0,0,26405.81,1,1,769.1072468\\r\\n4,9,678.47,0,0,0,30465.27,2,1,706.8992695\\r\\n2,8,861.31,1,1,0,24174.71,1,0,640.1846499\\r\\n3,5,819.68,1,0,0,10547.98,0,1,586.1330574\\r\\n0,3,766.53,0,1,1,25372.96,1,0,300.4399838\\r\\n4,2,834.13,1,1,0,32820.26,0,0,453.0959102\\r\\n3,0,618.91,1,1,0,19943.2,0,1,709.0744227\\r\\n1,4,942.95,0,0,0,23348.8,1,1,650.9153023\\r\\n1,6,1002.71,0,1,1,26478.15,2,0,420.8366003\\r\\n2,8,834.85,0,1,1,16956.43,0,0,302.893914\\r\\n2,7,868.06,1,0,0,26477.51,0,1,551.787806\\r\\n1,5,684.37,1,0,1,33920.09,0,1,570.8432625\\r\\n1,4,691.12,1,1,0,47090.5,0,1,698.066295\\r\\n4,4,801.12,0,1,0,11182.68,2,1,606.3941555\\r\\n2,7,825.89,0,1,0,35389.76,0,1,535.0685342\\r\\n0,5,606.3,1,1,1,23623.36,1,0,558.7426381\\r\\n2,7,1046.44,0,1,1,28452.41,1,1,630.6312016\\r\\n1,3,550.83,0,1,0,27439.6,2,1,586.4738462\\r\\n2,2,670.35,0,1,1,16868.7,2,1,669.0412069\\r\\n2,3,800.93,1,1,1,26743,0,1,746.518128\\r\\n2,6,881.87,1,1,0,8927.86,0,1,720.1093318\\r\\n3,5,772.83,0,1,1,31214.57,0,1,658.2630834\\r\\n1,3,730.49,0,0,0,29719.32,1,1,549.545373\\r\\n0,4,844.57,1,1,0,26500.91,1,1,880.8234158\\r\\n4,2,737.62,1,1,1,35443.13,3,1,1018.807208\\r\\n2,6,643.98,0,0,1,20385.97,0,1,457.5240621\\r\\n1,5,587.1,0,0,1,12899.98,1,1,531.2852754\\r\\n3,9,681.31,0,0,1,36553.92,1,0,363.393724\\r\\n0,4,857.96,0,1,0,13955.21,0,0,300.1616797\\r\\n3,6,792.56,0,1,0,23087.74,2,1,812.8427609\\r\\n1,3,938.51,1,1,0,17284.03,2,0,495.1024651\\r\\n3,6,865.67,0,1,1,35757.27,0,0,393.6225296\\r\\n3,5,1087.35,0,1,0,38651.2,1,1,662.5452582\\r\\n3,8,669.97,0,1,0,22952.21,1,1,553.4463821\\r\\n1,5,635.28,0,1,1,21549.44,1,0,481.9255305\\r\\n1,4,608.51,0,1,0,34811.43,2,1,776.9682302\\r\\n2,9,937.63,0,1,1,10770.83,2,1,836.0758367\\r\\n2,5,904.92,1,1,0,5801.91,0,1,710.6763872\\r\\n1,7,788.73,0,1,1,15850.7,0,1,676.9253264\\r\\n2,1,939.97,0,0,1,27136.17,1,0,387.3232973\\r\\n1,6,895.91,0,0,0,18822.41,1,0,222.2247631\\r\\n2,4,690.85,1,1,1,10227.04,0,1,813.9892299\\r\\n1,5,888.32,0,1,1,36802.71,1,1,603.1229602\\r\\n2,4,549.95,0,1,0,34362.91,1,1,605.9595005\\r\\n0,5,1046.68,1,0,1,21197.44,1,1,801.7182161\\r\\n4,4,869.29,0,1,0,7682.1,1,1,534.148012\\r\\n3,3,927.71,0,1,1,28285.37,0,1,581.3758404\\r\\n2,3,1102.5,0,1,1,20783.2,1,0,409.1240787\\r\\n1,5,1031.06,1,1,0,38350.58,3,1,1066.594425\\r\\n3,3,769.77,0,1,0,15884.25,2,0,536.8192042\\r\\n1,5,658.94,0,1,1,28110.64,2,1,818.8201127\\r\\n3,4,660.55,0,1,1,43636.94,0,1,616.4123284\\r\\n2,7,664.49,1,1,0,33094.49,1,0,590.0817935\\r\\n1,6,701.3,0,1,0,37684.67,0,0,250.9313184\\r\\n2,5,963.07,0,1,0,44918.46,2,0,494.0189081\\r\\n3,5,993.23,0,1,0,31536.8,1,1,752.0093749\\r\\n2,7,974.28,1,0,1,9282.02,0,1,630.8952742\\r\\n2,3,731.11,0,1,1,20693.18,0,0,245.2243408\\r\\n4,1,862.33,0,1,0,20098.58,1,0,272.8650264\\r\\n1,2,708.64,1,1,0,34663.71,1,0,562.0554916\\r\\n1,5,612.54,0,0,1,20217.23,2,0,442.1168544\\r\\n1,7,840.81,0,0,0,30684.89,0,0,226.4556426\\r\\n1,2,680.57,1,1,1,4884.15,0,1,617.8314193\\r\\n2,8,790.51,1,1,0,24854.53,1,1,905.4282995\\r\\n0,6,979.89,1,1,0,14522.36,3,1,914.6161758\\r\\n2,4,972.95,0,1,1,34625.01,3,1,829.2913526\\r\\n3,2,676.98,0,1,0,22900.94,2,1,711.565416\\r\\n2,3,581.22,0,1,0,29023.85,1,1,572.7088478\\r\\n3,5,1166.71,1,1,1,13738.55,1,1,926.7304853\\r\\n2,2,924.17,0,1,0,16058.13,0,0,279.7438394\\r\\n2,4,996.35,1,1,1,37360.13,1,0,571.2180811\\r\\n3,6,1097.89,0,1,1,22277.67,2,1,709.3098138\\r\\n2,6,548.8,0,1,0,27080.23,2,0,543.9354184\\r\\n3,7,981.26,0,1,1,-526.54,3,1,783.5255785\\r\\n0,4,904.53,1,1,1,56531.08,0,0,583.2398175\\r\\n2,4,835.05,1,1,1,-90.52,0,1,794.614\\r\\n3,6,786.93,0,1,1,17196.35,0,1,568.6786069\\r\\n0,4,1185.36,0,1,1,28864.24,0,1,662.1393949\\r\\n2,4,534.15,1,1,0,24618.26,1,1,682.4090632\\r\\n2,6,700.94,1,1,0,18591.7,0,1,679.1481048\\r\\n2,6,662.82,0,1,1,20919.1,2,1,656.4575669\\r\\n2,7,860.15,0,1,0,39465.64,2,0,509.0291588\\r\\n4,7,709.59,0,1,1,18900.25,1,0,350.8113244\\r\\n0,9,843.85,0,0,1,22729.18,1,1,577.2556066\\r\\n1,6,948.47,0,1,0,25758.26,2,0,474.1761551\\r\\n2,6,750.79,0,1,1,22787.4,3,1,888.2096974\\r\\n3,3,571.3,0,1,0,27899.3,0,0,294.6957175\\r\\n3,5,942.5,1,0,1,15292,0,0,400.7263335\\r\\n2,1,560.7,1,1,0,26586.82,1,0,456.862551\\r\\n1,6,701.89,0,1,1,32896.78,0,0,366.0123683\\r\\n3,5,1074.9,0,0,1,26420.49,1,0,309.3080252\\r\\n1,7,892.85,0,1,1,15912.6,1,0,373.8729471\\r\\n1,8,848.04,0,1,1,18347.8,1,1,696.6311855\\r\\n2,4,749.44,0,1,1,21510.21,2,0,483.1073489\\r\\n3,7,754.59,1,1,0,30996,1,0,522.8448179\\r\\n1,4,821.37,0,0,1,14991.02,0,1,463.5323308\\r\\n3,7,916.95,0,1,1,19975.74,2,1,782.7341353\\r\\n2,6,898.26,1,1,1,15825.46,0,0,524.5383396\\r\\n2,5,593.12,1,1,1,25339.76,1,1,780.9526325\\r\\n3,2,752.36,0,1,1,9371.77,3,0,609.0749818\\r\\n1,3,757.73,1,1,0,22432.58,2,1,915.4694544\\r\\n4,8,635.78,0,1,1,24609.66,0,0,432.3340355\\r\\n3,6,676.79,0,0,1,21962.35,1,1,583.2890522\\r\\n3,7,827.01,0,1,1,26537.74,0,0,432.2673572\\r\\n2,7,606.43,1,1,0,16225.94,2,1,850.4622698\\r\\n0,1,557.07,1,1,1,7525.82,1,1,800.1079434\\r\\n1,4,942.08,0,1,1,27218.13,1,1,616.0944936\\r\\n1,6,833.6,0,1,0,28663.06,0,1,547.9316486\\r\\n2,8,813.67,1,1,1,15648.87,2,0,621.6985441\\r\\n2,6,361.13,0,0,1,28218.63,1,0,441.8739292\\r\\n2,5,711.94,0,1,1,19210.78,1,0,418.5082516\\r\\n1,7,696.3,0,1,0,30768.18,1,1,532.4827927\\r\\n2,6,599.88,0,1,1,24223.48,0,1,494.1409317\\r\\n1,7,661.46,0,1,1,31908.08,1,0,444.270298\\r\\n3,6,704.81,0,1,0,20227.31,0,0,189.435056\\r\\n2,4,828.85,0,1,0,-1048.77,2,0,382.6288977\\r\\n2,7,915.66,0,1,0,8824.44,0,1,436.7547868\\r\\n0,4,906.78,0,1,0,24609.42,2,1,793.7354241\\r\\n3,4,916.19,1,1,0,19258.73,2,1,971.6818099\\r\\n3,8,631.54,0,1,1,12107.02,1,1,756.0872302\\r\\n1,4,802.95,0,1,0,47110.28,1,0,410.3066595\\r\\n2,1,597.39,1,1,0,20184.42,1,1,769.0576612\\r\\n3,9,744.67,1,1,1,26095.19,1,1,788.4536996\\r\\n0,2,840.99,1,1,1,26297.68,2,0,663.8351392\\r\\n1,6,1066.39,1,0,1,47483.47,1,1,748.8090585\\r\\n3,5,820.39,0,1,1,9501.99,2,1,787.2543942\\r\\n3,7,824.91,1,0,0,20618.16,3,1,931.0142392\\r\\n0,2,702.84,0,0,1,23958.43,0,1,475.0254414\\r\\n2,2,653.43,1,0,1,25127.72,1,1,769.0218418\\r\\n2,5,663.28,0,1,1,32704.18,1,1,650.4666246\\r\\n0,5,780.22,0,1,1,14164.11,2,1,818.3629448\\r\\n2,6,911.58,1,0,1,36316.9,1,0,475.0777396\\r\\n2,5,244.4,1,0,1,39823.7,2,1,858.6716877\\r\\n2,5,674.53,0,1,0,16451.23,0,0,163.3647714\\r\\n3,5,1019.52,1,1,1,21532.89,1,1,760.5243042\\r\\n1,1,515.34,0,1,1,11753.98,0,1,460.1106084\\r\\n1,5,584.85,0,0,0,2108.61,0,1,440.8124498\\r\\n4,7,900.39,1,1,0,22294.67,1,1,883.6118169\\r\\n4,6,829.15,1,1,0,18777.36,2,1,833.1895497\\r\\n2,4,814.28,0,1,0,34929.14,1,0,418.7832479\\r\\n1,8,895.34,1,1,0,36314.02,1,0,532.7216015\\r\\n2,6,911.72,1,1,1,24762.94,0,1,845.9697556\\r\\n4,7,770.68,1,0,0,24871.18,0,1,714.209685\\r\\n1,3,824.05,0,1,0,38321.36,3,1,784.1259379\\r\\n5,3,750.58,0,0,0,13397.44,0,1,439.5910043\\r\\n1,9,835.59,0,1,0,44083.19,0,1,580.1261035\\r\\n1,2,791.78,1,1,0,27267.91,2,1,882.6201297\\r\\n3,5,879.29,1,1,0,24582.51,3,0,748.8892048\\r\\n0,4,1116.41,0,1,1,19658.51,3,0,585.5771094\\r\\n2,3,698.84,0,0,0,26577.03,1,1,442.226251\\r\\n2,5,842.02,0,1,1,36015.54,2,1,837.8105896\\r\\n2,6,787.1,0,1,1,29109.56,4,0,803.503396\\r\\n4,3,720.31,1,0,1,22691.55,2,1,849.2852361\\r\\n3,5,773.66,1,0,1,35807.59,0,1,770.5384418\\r\\n2,2,1075.89,0,0,1,16451.71,0,0,357.7844607\\r\\n2,4,772.33,0,0,0,31731.94,2,1,531.610463\\r\\n2,5,662.58,0,1,1,22932.87,1,1,783.0543301\\r\\n1,8,843.47,1,1,1,33015.78,0,1,770.5757588\\r\\n3,6,551.32,0,1,0,40545.49,1,0,371.2366143\\r\\n1,5,831.82,1,1,1,28563.2,0,0,471.8930473\\r\\n1,4,870.57,0,1,0,10237.39,1,1,516.0465127\\r\\n2,7,786.06,0,1,0,35869.9,2,1,656.3058064\\r\\n2,9,759.64,1,1,1,19296.1,1,0,635.9161227\\r\\n2,6,520.46,0,1,0,38685.23,3,1,878.2533167\\r\\n2,7,811.63,0,1,1,47453.09,2,1,700.2187487\\r\\n2,5,974.83,1,1,0,18894.52,2,1,976.3125412\\r\\n1,5,836.06,1,0,0,24032.65,0,0,253.1077251\\r\\n1,5,812.24,1,1,1,19179.15,0,1,795.716107\\r\\n1,8,1055.17,1,1,0,15189.3,1,0,540.8191009\\r\\n3,11,555.62,0,0,1,52765.1,0,1,481.3082327\\r\\n2,10,1064.73,0,1,1,27339.04,1,0,455.7820163\\r\\n2,5,771.82,0,1,1,26668.29,2,1,879.250475\\r\\n1,6,801.99,0,1,1,22542.9,1,0,325.9106886\\r\\n3,6,730.36,0,1,1,19302.3,1,1,744.2576233\\r\\n2,6,753.22,1,1,0,15696.01,0,1,600.6084664\\r\\n1,4,877.23,0,1,1,33337.88,1,1,701.0286772\\r\\n4,5,762.6,0,0,1,12326.43,0,0,337.6202412\\r\\n2,5,778.5,0,1,0,26252.68,2,0,492.8836598\\r\\n3,7,725.84,0,1,1,18666,2,0,497.5142581\\r\\n2,1,661.54,1,1,1,40260.49,0,1,747.1459665\\r\\n2,4,504.24,0,1,0,25193.6,1,0,264.9235721\\r\\n2,4,825.94,1,0,1,27846.65,2,0,492.5951271\\r\\n1,3,634.29,1,1,0,38155.18,0,1,612.9389668\\r\\n2,2,736.14,1,1,1,36618.88,0,0,516.7114435\\r\\n3,1,851.93,0,0,0,16419.26,1,1,567.0406852\\r\\n1,7,528.29,1,1,1,34288.53,0,1,763.6057424\\r\\n2,4,586.48,0,1,1,28153,0,1,620.7240903\\r\\n0,6,620.29,1,0,0,31055.69,1,1,747.975083\\r\\n1,8,957.95,0,1,0,34888,2,1,795.4947438\\r\\n2,5,583.22,1,1,0,19597.04,1,0,609.8191917\\r\\n3,7,729.7,1,1,0,29004.38,0,1,668.9365583\\r\\n2,10,606.2,1,1,1,31577.13,1,0,540.1462009\\r\\n3,7,601.03,0,1,1,23941.9,1,1,709.0986932\\r\\n1,7,935.01,0,1,1,27243.07,2,0,599.035737\\r\\n2,8,652.2,1,0,0,10756.64,3,0,530.3150711\\r\\n3,4,743.58,0,1,1,17822.06,0,1,503.9412205\\r\\n1,6,889.06,0,1,1,-1576.44,1,0,308.8392937\\r\\n4,6,681.32,1,1,0,13481.07,1,1,875.3330171\\r\\n0,6,949.59,0,0,0,5200.62,3,0,509.1269886\\r\\n2,7,509.38,0,1,0,46025.99,0,1,654.935881\\r\\n2,6,888.47,1,1,0,27854.32,2,0,592.0069616\\r\\n2,9,747.74,0,1,0,21937.54,2,0,372.4623946\\r\\n2,7,770.67,0,1,0,19771.94,3,1,727.699264\\r\\n3,5,634.83,1,1,1,16128.76,3,0,773.7381173\\r\\n2,8,605.21,0,0,1,34695.89,2,1,680.9557555\\r\\n3,4,695.24,0,1,0,26862.82,0,1,598.5220013\\r\\n1,2,694.55,0,1,1,8498.6,1,1,749.7065498\\r\\n3,5,798.92,1,1,1,20900.09,2,1,844.2098201\\r\\n1,5,595.7,1,0,0,18885.43,1,1,705.26141\\r\\n2,7,957.28,1,1,0,18063.68,0,0,356.9823471\\r\\n3,5,845.62,1,0,1,28938.08,1,0,464.2619137\\r\\n4,8,765.55,0,1,1,17127.48,0,1,664.0208157\\r\\n2,3,1063.48,0,1,0,20030.28,1,1,658.96488\\r\\n1,6,950.08,0,1,1,19782.36,2,0,531.746352\\r\\n1,4,733.47,0,1,0,29943.51,2,1,616.2416058\\r\\n1,5,889.54,0,1,1,8708.73,2,0,388.581916\\r\\n2,6,931.66,1,0,1,22386.93,1,0,618.0101314\\r\\n1,9,879.67,0,1,0,34346.14,1,0,329.5749611\\r\\n1,2,768.1,0,0,0,14810.27,2,1,658.1067631\\r\\n3,6,891.78,1,1,0,32648.4,1,0,506.4166424\\r\\n2,5,742.32,1,1,1,30714.7,1,1,904.6661343\\r\\n1,1,965.07,0,1,1,25904.59,2,0,396.6605482\\r\\n0,6,686.45,1,1,0,46078.72,1,0,645.2169791\\r\\n1,5,961.91,1,1,0,27755.02,0,0,462.4141799\\r\\n2,5,1069.87,1,1,1,25057.67,0,1,748.3173904\\r\\n3,8,867.34,1,1,1,28403.65,1,0,541.3948634\\r\\n3,5,686.58,0,1,0,44804.64,0,0,211.2372842\\r\\n2,4,1015.45,0,1,0,24516.2,1,1,568.6443874\\r\\n1,2,669.69,1,1,1,24973.46,0,0,360.5414968\\r\\n2,3,626.42,1,1,1,19085.43,0,1,717.4590393\\r\\n1,3,1072,1,1,1,10174.71,0,1,810.7030552\\r\\n2,4,865.04,1,1,1,18391.27,0,1,687.2943681\\r\\n1,4,688.98,0,1,1,36571.26,2,1,829.9556872\\r\\n1,5,785.52,0,1,1,17110.12,0,1,620.1852373\\r\\n2,0,797.67,1,1,1,19047.93,2,0,738.1287339\\r\\n4,4,846.15,0,1,0,35945.14,0,1,483.5747113\\r\\n2,4,773.2,0,1,0,34162.2,1,1,683.0314774\\r\\n2,9,998.93,0,1,1,34392.57,0,1,567.5890889\\r\\n4,5,868.58,0,1,0,6788.84,2,0,385.8379213\\r\\n2,7,751.99,0,1,1,13348.51,1,0,356.8761726\\r\\n2,2,666.58,1,1,1,27716.53,1,0,530.3579115\\r\\n2,5,901.61,1,1,1,30061.2,1,1,920.8554234\\r\\n2,4,902.76,0,1,0,14608.19,1,1,589.4088653\\r\\n2,2,796.83,0,0,1,13898.86,0,1,596.4693406\\r\\n3,5,642.72,0,1,0,25405.56,0,0,177.9914984\\r\\n2,4,832.37,0,1,1,6343.89,2,0,529.5110533\\r\\n2,5,988.29,1,1,1,41764.78,2,1,1053.388332\\r\\n1,6,682.29,1,1,1,23078.73,0,0,498.0954245\\r\\n2,4,838.84,1,1,1,38464.04,3,1,1022.602211\\r\\n1,5,890.73,0,1,1,30770.24,3,1,805.6731421\\r\\n2,2,752.77,0,1,1,21188.82,0,0,319.4338803\\r\\n3,4,748.97,0,0,0,31973.67,2,1,579.2376011\\r\\n1,9,572.76,1,1,1,35408.69,3,1,992.3211182\\r\\n2,4,936.44,1,1,0,6757.32,3,1,1002.382506\\r\\n2,5,943.71,0,0,0,26873.88,2,0,286.6848998\\r\\n0,5,868.52,0,1,1,17440.95,0,0,228.9513502\\r\\n2,4,885.58,0,0,0,34893.47,1,0,286.5175008\\r\\n1,3,519.84,0,1,1,20211.03,0,0,313.3258246\\r\\n2,3,958.46,0,1,1,28827.97,2,1,879.0225319\\r\\n1,6,699.62,1,1,1,31778.47,0,1,684.8009986\\r\\n3,6,709.33,0,1,0,18368.07,0,0,357.9913013\\r\\n2,1,835.9,0,1,1,24741.96,0,0,348.9191531\\r\\n0,5,669.56,0,0,1,29937.32,1,0,417.4897091\\r\\n1,7,1090.44,0,0,0,32838.33,1,1,686.8929503\\r\\n1,8,535.6,1,1,1,30021.33,0,0,583.1157672\\r\\n3,7,771.06,1,1,1,19482.65,0,0,475.4273047\\r\\n2,4,1147.92,0,1,0,17006.08,1,1,592.7914215\\r\\n2,7,938.86,1,1,0,16126.88,2,1,952.3731744\\r\\n2,5,947.73,0,1,0,31293.59,1,0,370.0732256\\r\\n3,6,848.71,0,1,0,12959.34,0,1,434.7184162\\r\\n3,6,958.96,0,1,0,19078.68,2,1,641.4128171\\r\\n2,4,687.94,0,1,1,24203.05,1,0,400.5461624\\r\\n3,5,811.93,0,1,1,38603.17,0,0,294.0904538\\r\\n1,3,988.94,0,1,1,15642.66,1,1,586.9327672\\r\\n2,3,703.79,0,1,0,42236.78,0,1,437.3865138\\r\\n4,3,534.57,1,1,1,23102.74,2,0,704.0986425\\r\\n3,4,878.4,0,1,0,25774.32,1,1,602.1315135\\r\\n1,2,795.15,0,1,1,26411.26,1,1,752.286137\\r\\n3,6,693.03,1,1,1,28093.23,2,1,934.077732\\r\\n2,1,984.8,0,1,0,24249.31,2,1,687.4601268\\r\\n0,5,591.87,0,1,1,20541.51,1,1,599.3302284\\r\\n0,6,803.83,0,1,0,25585.89,2,1,606.2907617\\r\\n4,5,627.4,1,1,1,23288.42,1,1,738.9335159\\r\\n4,5,695.95,1,1,1,19703.61,2,1,961.7419174\\r\\n0,3,698.83,0,0,0,13817.63,0,0,97.54415048\\r\\n2,4,1106.99,0,1,0,10691.95,1,1,587.9219078\\r\\n1,5,702.04,0,0,0,31462.81,1,1,486.6259769\\r\\n3,6,695.68,0,0,1,24977.27,0,0,175.8872951\\r\\n-1,5,806.5,1,1,0,10799.59,0,0,450.2527975\\r\\n2,4,1111.85,1,1,1,30600.54,1,1,852.0437297\\r\\n1,3,966.98,1,1,0,13996.33,0,0,515.2099622\\r\\n3,7,696.91,0,0,1,14380.37,1,0,393.295424\\r\\n3,3,720.13,1,0,1,49294.85,2,0,707.5992954\\r\\n1,5,793.79,1,1,0,26738.67,1,1,874.3112671\\r\\n2,2,830.26,0,1,0,16432.02,1,1,611.4857718\\r\\n5,5,1016.56,0,1,0,31100.16,1,1,640.2037452\\r\\n3,5,775.72,0,1,0,18999.34,3,1,751.7374997\\r\\n1,2,977.21,1,1,1,20664.1,0,1,666.6387167\\r\\n3,1,642.96,0,1,1,13626.5,0,1,660.1753471\\r\\n2,6,792.67,1,0,0,46841.59,1,1,637.1154677\\r\\n3,3,723.66,1,1,0,8771.54,2,1,858.9900897\\r\\n2,5,690.67,1,1,1,39842.83,1,1,871.4528249\\r\\n1,5,903.23,1,1,0,20150.28,1,1,765.7981799\\r\\n3,8,684.81,1,1,0,24404.43,1,0,608.3808917\\r\\n2,3,1004.21,0,0,0,13647.46,0,0,166.9937444\\r\\n0,2,795.29,1,1,0,36365.17,2,0,671.8826055\\r\\n3,3,835.89,1,1,1,14067.73,2,0,668.5183784\\r\\n3,3,786.47,0,0,0,15641.6,1,1,475.0078264\\r\\n3,1,714.14,1,1,0,13262.51,0,1,616.8931693\\r\\n3,7,699.63,1,1,0,16616.36,2,1,894.7379361\\r\\n3,7,1130.5,0,1,0,32998.19,1,0,423.8210781\\r\\n1,5,929.73,1,1,1,44518.73,0,0,502.6093068\\r\\n1,9,834.03,1,0,1,24583.35,1,1,820.7227302\\r\\n2,6,674.74,1,1,0,36430.8,1,0,486.9715659\\r\\n2,6,733.45,0,0,1,20701.74,1,1,714.1986266\\r\\n0,1,974.21,0,1,1,32363.36,1,0,447.4180752\\r\\n3,4,941.85,1,1,1,27887.61,2,0,658.3205735\\r\\n3,5,732.97,0,1,1,27439.77,1,1,652.8906719\\r\\n1,4,663.37,0,1,0,19092.23,1,0,393.5284601\\r\\n0,4,699.81,0,0,1,22303.66,1,1,688.030491\\r\\n2,2,1136,1,0,0,22178.75,1,0,550.8021215\\r\\n4,4,1041.18,0,1,0,20060.1,0,1,461.538505\\r\\n3,5,773.02,0,0,1,31408.38,2,0,378.701623\\r\\n3,5,1084.52,1,1,0,1587.7,1,0,456.2568712\\r\\n1,5,790.71,0,1,1,37050.82,0,0,363.3388403\\r\\n4,4,516.43,1,1,0,20372.66,1,0,467.3926921\\r\\n3,6,1057.52,1,1,0,16420.09,1,0,525.7221986\\r\\n2,2,760.93,0,1,0,17974.11,1,1,583.4380802\\r\\n2,8,807.56,1,1,0,22984.61,0,1,710.7783943\\r\\n2,3,1034.6,0,1,0,28074.6,0,1,464.5967688\\r\\n2,5,861.43,0,0,1,28405.85,0,1,498.6166918\\r\\n1,5,900.45,1,0,0,15115.43,1,1,701.7641089\\r\\n0,6,737.19,0,1,1,17451.85,3,1,862.0775316\\r\\n2,4,854.11,0,1,0,25119.88,1,1,556.3738439\\r\\n1,3,786.13,0,1,0,28819.69,1,1,526.4591714\\r\\n2,5,547.37,1,1,1,16397.97,1,0,652.8610003\\r\\n2,3,752.63,0,1,1,16120.11,2,0,523.8907991\\r\\n2,4,699.42,0,1,0,24008.13,0,1,472.7264476\\r\\n1,4,705.27,0,0,1,32894,1,1,655.0841218\\r\\n2,5,924.54,0,1,0,15145.56,2,0,458.8166016\\r\\n2,6,862.53,0,1,1,36313.84,1,0,430.6294796\\r\\n2,7,687.45,0,1,1,19574.41,0,1,558.7522908\\r\\n0,5,928.69,0,1,0,26182.2,0,1,624.6922853\\r\\n2,8,1018.86,1,1,1,13611.22,2,1,961.6759939\\r\\n3,7,786.75,0,1,1,41083.05,1,1,706.6813583\\r\\n1,2,924.05,1,0,1,11499.93,1,0,540.0761456\\r\\n3,5,579.46,1,1,0,37876.75,0,1,682.7549371\\r\\n3,5,831.08,0,1,0,10099.02,1,0,428.551325\\r\\n2,4,717.39,1,1,1,19565.61,1,0,473.206906\\r\\n3,4,640.71,1,1,0,41718.43,1,0,572.901644\\r\\n4,6,691.92,1,0,1,7902.71,1,1,745.783748\\r\\n1,4,893.34,0,0,1,37558.92,1,0,434.3125097\\r\\n1,7,904.79,1,1,0,29416.5,0,1,793.6899716\\r\\n1,5,699.25,1,1,0,28249.71,2,1,941.2855214\\r\\n3,7,643.43,1,1,0,12380.29,0,1,749.1865098\\r\\n2,9,1113.99,1,1,0,28093.77,2,0,609.2879406\\r\\n1,5,735.06,0,1,0,29839.01,0,0,356.9985167\\r\\n1,3,808.19,0,1,0,28898.87,0,1,508.9257612\\r\\n1,4,755.02,0,1,1,34067.78,2,1,696.9320827\\r\\n0,2,764.65,1,1,0,11027.89,1,1,839.1338896\\r\\n1,5,571.11,0,1,1,29918.34,2,0,561.2457488\\r\\n1,6,986.3,0,1,1,28032.2,0,0,434.8873127\\r\\n2,5,726.25,1,1,0,29213.75,0,1,791.0802607\\r\\n0,9,856.15,0,1,0,26546.13,1,1,555.3269443\\r\\n3,8,698.03,0,0,0,28833.16,0,1,539.7390272\\r\\n1,5,846.64,1,1,1,13971.01,2,1,962.4759404\\r\\n3,4,679.48,0,1,0,42422.59,2,1,775.7525413\\r\\n3,1,767.12,1,1,0,24635.02,1,0,511.1914351\\r\\n3,5,650.6,0,1,0,23861.79,0,1,543.0623118\\r\\n3,5,758.62,0,1,0,28484.97,1,0,282.0730577\\r\\n2,6,849.08,0,1,1,25230.29,2,0,551.5703553\\r\\n2,4,784.79,0,1,1,25128.15,2,1,709.3422097\\r\\n3,6,733.48,0,1,0,22880.75,1,0,289.727488\\r\\n4,8,607.15,1,1,1,40047.03,1,1,884.6862449\\r\\n2,7,652.57,0,1,0,25566.98,1,1,660.2078757\\r\\n3,2,695.3,0,1,0,28278.67,0,1,535.0481464\\r\\n1,5,874.65,1,1,1,20070.34,1,1,823.5053303\\r\\n2,4,717.42,0,0,0,18993.48,2,1,595.2475269\\r\\n1,4,778.09,0,1,0,31208.61,1,1,684.9239938\\r\\n2,7,932.1,0,1,1,24188.14,2,0,499.3299628\\r\\n1,4,622.28,0,0,0,27825.25,1,0,344.9279635\\r\\n2,4,755.57,0,1,1,19598.82,1,1,679.2632007\\r\\n1,5,869.58,0,1,1,13976.87,0,1,545.19653\\r\\n1,4,630.91,0,0,1,29720.86,0,1,501.4505145\\r\\n1,5,761.19,1,0,1,31943.79,1,1,869.5514892\\r\\n1,3,886.07,0,1,1,22982.15,1,0,448.3860326\\r\\n3,7,867.73,0,1,0,23413.83,0,0,266.5493575\\r\\n1,4,883.64,1,1,1,39365.49,1,1,771.8986153\\r\\n4,5,870.48,0,1,1,38274.33,0,0,401.553697\\r\\n2,5,1024,1,1,0,23140.23,1,1,798.8415518\\r\\n2,5,716.73,0,1,1,51.85,1,0,359.9484974\\r\\n2,6,578.78,0,1,0,35741.32,2,1,691.275315\\r\\n1,5,602.68,0,0,1,18477.49,1,0,364.9896195\\r\\n0,6,892.43,1,1,1,21027.82,1,1,727.3685723\\r\\n3,5,1064.88,1,1,1,20596.74,0,1,767.093111\\r\\n0,4,963.1,1,1,0,20828.59,3,1,986.6975166\\r\\n1,5,824.09,0,1,1,32799.66,0,1,589.5633109\\r\\n1,5,1032.83,1,1,1,34453.53,1,1,787.5294336\\r\\n3,4,675.74,1,1,0,21394.01,1,1,869.2543121\\r\\n1,3,956.4,1,1,0,13342.48,2,0,506.0592641\\r\\n2,9,835.64,0,1,0,19603.28,0,1,488.1886059\\r\\n1,5,689.15,0,1,1,30570,2,1,841.1148197\\r\\n2,5,875.28,0,1,0,28512.28,2,1,699.819949\\r\\n3,2,750.75,0,1,1,17242.08,1,1,592.2714082\\r\\n3,6,751.4,0,0,1,21288.94,2,1,805.8326737\\r\\n2,2,852.38,0,1,0,25600.11,2,0,395.8549112\\r\\n1,4,677.17,0,0,0,22290.57,2,1,572.6231332\\r\\n3,3,1027.08,0,0,0,13333.28,1,0,218.0463638\\r\\n2,1,967.37,0,1,0,28745.23,2,1,672.1716595\\r\\n1,4,688.61,1,1,0,4994.76,0,1,763.9650128\\r\\n3,6,770.58,0,0,0,11919.18,1,1,618.7553799\\r\\n0,3,649.56,1,1,0,24884.65,0,1,653.0106592\\r\\n2,4,811.69,0,1,1,39518.02,2,0,499.1541336\\r\\n2,4,766.01,1,1,1,16610.41,0,1,729.8771486\\r\\n4,6,893.72,0,1,1,24822.96,0,0,376.4520199\\r\\n2,5,750.74,0,1,0,29119.48,1,1,566.9710993\\r\\n1,5,841.03,1,1,0,28153.11,3,0,799.1545397\\r\\n2,4,1015.02,0,1,0,37069.58,0,1,554.2658183\\r\\n2,8,825.89,1,1,0,31592.5,0,1,754.729268\\r\\n2,5,753.92,0,1,1,13236.41,1,1,687.4220662\\r\\n0,7,703.67,0,1,1,26051.29,1,1,686.8261898\\r\\n3,8,711.82,0,1,1,19788.33,1,1,678.4015618\\r\\n4,3,732.57,0,0,1,23679.47,0,1,560.2871201\\r\\n3,2,864.51,0,1,1,25012.42,0,1,480.8326846\\r\\n3,4,724.01,0,0,0,34647.94,1,1,517.1574095\\r\\n3,0,747.69,0,1,1,26251.25,2,1,758.3134216\\r\\n4,5,757.58,0,1,0,18735.41,3,1,715.2620444\\r\\n2,6,669.82,1,1,1,13241.11,1,1,827.0572264\\r\\n2,4,511.18,0,0,1,24732.64,0,1,412.9688218\\r\\n1,5,390.65,1,1,1,21047.34,3,1,984.0387802\\r\\n3,6,665.16,1,1,0,19141.79,1,1,738.4249718\\r\\n2,7,944.15,0,1,0,49063.95,1,1,610.7776416\\r\\n1,3,443.63,0,1,1,20706.53,1,1,715.6422847\\r\\n1,2,684.1,1,1,0,28602.42,1,0,504.7278098\\r\\n2,8,682.47,0,1,0,28083.17,1,1,536.4161256\\r\\n3,2,729.58,0,1,1,24148.75,3,1,935.0084535\\r\\n2,4,1033.89,0,1,1,33497.88,1,1,733.9495611\\r\\n1,5,525.89,0,1,0,31088.66,1,0,347.7321872\\r\\n-1,8,696.99,0,1,1,13396.89,0,0,322.3817726\\r\\n3,3,761.02,0,0,1,35086.09,1,1,520.6575629\\r\\n2,7,746.7,0,1,0,16581.48,0,0,300.4335454\\r\\n1,6,694.81,0,1,1,31686,2,0,566.6484087\\r\\n2,6,761.41,1,0,1,34722.1,1,0,417.9645682\\r\\n3,0,724.04,1,1,0,30385.25,1,1,804.8891237\\r\\n4,5,545.39,1,1,0,20700.19,0,0,353.2666057\\r\\n4,6,835.63,0,1,0,11469.2,2,1,718.2225636\\r\\n1,2,1004.55,0,1,1,18973.76,1,0,361.3138823\\r\\n3,3,776.97,0,0,1,27194.27,2,1,593.6745546\\r\\n4,9,770,0,1,1,26072.34,0,1,621.9227847\\r\\n1,4,834.24,0,1,1,31470.86,1,1,775.9264744\\r\\n0,5,543.82,0,1,0,21678.79,2,0,475.8695502\\r\\n2,4,863.94,0,1,1,28760.84,3,1,922.5504972\\r\\n1,9,1040.6,0,1,1,27620.24,0,0,446.45579\\r\\n2,4,989.18,0,0,1,12491.63,0,1,605.2095038\\r\\n3,5,615.59,1,0,1,27163.95,1,0,504.4878011\\r\\n1,4,706.03,1,1,0,24016.9,2,0,630.1971374\\r\\n3,8,867.52,1,1,1,20593.2,0,0,583.7230559\\r\\n4,4,724.42,1,1,1,29061.4,1,1,869.8259693\\r\\n3,6,771.15,0,1,0,13999.58,2,0,362.149647\\r\\n1,2,883.09,1,1,1,21622.9,1,1,842.963205\\r\\n2,6,874.2,0,0,0,36903.03,1,0,396.8999552\\r\\n2,7,889.54,1,1,0,41049.77,0,0,416.7785561\\r\\n1,3,644.34,0,1,0,29411.13,1,0,349.3330573\\r\\n3,6,723.02,0,0,1,25843.01,0,0,244.0172693\\r\\n3,-1,673.71,0,1,1,30987.64,0,1,510.6912092\\r\\n3,7,832.49,0,1,0,10054.41,1,0,366.9861294\\r\\n1,6,896.52,1,1,1,10853.42,0,1,768.9255618\\r\\n3,1,773.71,0,0,1,16025.37,0,1,405.2861068\\r\\n2,2,872.1,0,1,1,14693.76,2,1,695.5033362\\r\\n4,4,751.46,0,1,0,29637.91,2,1,720.9022472\\r\\n3,3,1118.29,0,1,0,5037.37,1,1,606.0078796\\r\\n3,3,1007.11,1,1,0,16240.07,1,1,779.3499658\\r\\n2,4,680.77,0,1,0,33587.08,1,1,519.901034\\r\\n1,7,804.29,0,1,0,33096.67,1,1,720.5930273\\r\\n2,9,996.07,1,1,0,23587.13,3,0,744.9913096\\r\\n2,2,767.13,1,1,1,25828.96,1,0,552.0702558\\r\\n3,5,1189.12,0,1,0,23070.28,0,1,473.8204534\\r\\n3,8,998.26,0,1,0,13845.18,1,1,717.6134248\\r\\n2,4,890.88,1,1,0,42381.17,1,0,490.8506047\\r\\n2,3,541.84,0,1,0,1220.02,2,1,748.3442502\\r\\n2,4,871.99,0,0,1,34261.62,1,0,397.3597228\\r\\n1,6,537.8,1,0,1,14009.7,4,1,1083.726891\\r\\n1,5,813.13,0,1,0,21015.26,2,1,640.9150403\\r\\n2,7,842.86,0,1,1,19564.25,1,1,602.1022346\\r\\n2,3,971.81,1,1,1,34339.53,3,0,821.8827095\\r\\n0,3,872.07,0,1,0,27389.26,2,1,641.3209105\\r\\n1,6,769.82,0,1,0,32041.19,0,1,557.4036778\\r\\n3,8,640.76,1,1,0,18882.26,0,1,748.3323293\\r\\n1,6,1129.49,0,1,0,25438.6,3,1,862.0787587\\r\\n1,6,523.18,0,1,1,13750.91,0,1,474.0016832\\r\\n2,5,842.97,0,1,0,16908.09,3,1,806.4929143\\r\\n1,4,605.37,0,0,0,20308.74,1,0,343.1304848\\r\\n1,6,889.07,0,1,0,17023.78,0,0,307.2322844\\r\\n2,7,1002.39,1,1,1,24347.73,2,1,930.4058197\\r\\n3,10,875.56,0,0,1,24743.19,1,1,682.6718095\\r\\n2,5,633.56,1,1,1,28722.73,0,0,553.7611718\\r\\n1,7,691.1,1,1,0,25467.6,1,1,855.5163868\\r\\n2,5,806.86,0,1,0,25091.68,3,1,800.4168675\\r\\n1,5,853.32,1,1,1,42468.81,2,1,969.2387888\\r\\n2,2,700.66,0,1,0,20510.12,0,1,553.7077885\\r\\n2,4,984.69,0,0,0,37668.45,0,1,392.8620063\\r\\n3,6,679.75,1,0,0,14771.53,3,1,887.116791\\r\\n1,6,865.22,1,1,1,15528.65,0,0,584.4865908\\r\\n1,4,840.52,0,0,0,41247.78,2,1,642.7807314\\r\\n1,4,613.78,0,1,0,27295.77,2,1,637.6792316\\r\\n3,3,905.05,1,0,1,45935.96,1,1,786.9905334\\r\\n2,7,1047,0,1,1,3359.25,0,1,563.1202692\\r\\n1,2,1091.52,0,0,0,38467.38,2,1,599.9171244\\r\\n1,6,558.97,0,1,1,26922.51,2,1,867.2113868\\r\\n1,6,1119.47,0,1,1,16472.94,1,1,719.1523913\\r\\n0,2,573.02,0,1,0,26570.86,1,1,541.1080977\\r\\n0,4,1109.07,0,1,0,27082.45,2,1,779.8866628\\r\\n1,6,849.33,0,0,1,21189.48,3,0,487.251743\\r\\n2,6,799.96,1,1,1,32253.73,1,1,805.9709803\\r\\n3,5,777.46,1,1,0,20678.7,1,0,452.2171764\\r\\n2,2,984.38,0,1,0,30375.05,2,0,505.7858724\\r\\n2,4,888.96,0,1,0,22313.49,0,1,635.0349124\\r\\n1,6,847.09,0,1,1,30523.26,2,0,526.1979671\\r\\n3,7,579.13,0,1,1,18816.96,2,0,587.9931666\\r\\n2,4,768.52,1,0,0,12245.13,0,1,594.5649672\\r\\n1,5,862.96,0,1,1,30335.85,0,0,235.0878886\\r\\n2,5,648.93,0,1,0,25351.52,1,1,732.5346668\\r\\n3,5,894.94,0,1,1,44634.72,0,1,636.1297173\\r\\n2,5,961.45,1,1,0,13474.32,0,0,427.6573919\\r\\n3,6,877.3,1,1,0,21952.31,2,1,810.6254768\\r\\n2,1,834.1,0,1,0,20873.18,0,1,428.8262919\\r\\n1,5,680.21,0,1,0,30484.49,0,1,495.1803516\\r\\n3,6,785.44,1,1,0,33992.03,0,0,510.1875934\\r\\n3,6,844.47,0,1,0,18796.71,0,1,450.4369418\\r\\n0,5,715.93,0,1,1,20897.96,1,1,647.9434861\\r\\n3,1,741.72,0,0,0,30486.35,3,0,540.5141363\\r\\n1,6,1056.3,0,1,0,33057.16,2,1,650.9976783\\r\\n2,2,775.24,1,0,0,34972.12,1,1,635.2988026\\r\\n3,6,681.24,0,1,1,16854.39,1,0,387.5938265\\r\\n3,7,944.98,1,1,1,23591.03,1,1,805.4482994\\r\\n2,4,1128,0,1,1,37439.39,1,1,644.1445341\\r\\n2,6,809.14,0,1,0,11989.09,1,1,574.6268913\\r\\n2,7,847.06,1,1,0,31317.85,1,0,645.181718\\r\\n2,2,924.05,1,0,0,37.78,0,1,669.4731768\\r\\n0,4,638.7,0,0,1,22741.98,1,1,606.5647402\\r\\n3,3,677.62,1,1,0,16189.31,2,0,702.7783759\\r\\n1,6,789.43,0,1,1,45243.6,0,1,693.8246471\\r\\n1,6,1113.17,0,1,0,22116.9,2,0,404.0829903\\r\\n2,2,745.55,0,0,1,14794.44,0,1,408.8352928\\r\\n3,4,485.29,1,0,0,25695.76,1,0,446.9125902\\r\\n2,6,968.84,0,1,1,9788.09,1,1,768.370068\\r\\n1,6,866.08,1,1,0,12959.37,1,1,781.5239133\\r\\n3,10,496.23,0,1,0,15633.05,1,0,455.0492404\\r\\n1,8,666.17,0,1,1,50110.52,2,1,742.3798151\\r\\n2,5,503.2,1,1,0,21514.42,2,1,902.630464\\r\\n1,2,845.99,0,1,0,18394.7,0,1,571.0398786\\r\\n2,6,756.78,1,0,0,25382.09,0,0,323.9576779\\r\\n2,4,693.64,1,1,0,22786.52,1,1,821.4638294\\r\\n3,6,1005.53,1,1,0,28894.24,3,1,917.2148836\\r\\n3,4,882.3,1,1,1,22055.03,0,1,825.7049777\\r\\n2,3,876.92,0,1,0,35764.37,1,1,581.4853804\\r\\n1,6,701.75,0,1,0,17440.23,0,0,289.2376328\\r\\n3,4,784.66,1,1,0,22990.62,1,0,413.4531972\\r\\n2,3,808.05,0,1,1,11855.19,0,1,503.4281079\\r\\n2,3,653.71,1,1,0,32657.08,0,0,486.0989181\\r\\n3,1,593.11,1,0,0,36125.38,0,0,412.1831905\\r\\n2,6,503.58,0,1,0,25547.56,3,0,509.1694236\\r\\n3,10,885.17,1,1,0,40972.21,1,0,505.9184372\\r\\n2,4,724.91,0,0,1,15450.67,0,1,532.1316101\\r\\n3,6,510.57,0,1,1,25751.31,2,0,545.4339181\\r\\n1,4,739.46,1,1,0,37974.81,3,0,785.6461325\\r\\n2,5,659.68,0,0,1,27161.28,1,1,587.5861556\\r\\n0,4,591.84,0,1,0,26173.34,1,0,305.36883\\r\\n4,7,877.12,0,1,0,38695.89,1,0,342.700941\\r\\n3,4,854.5,0,1,1,-1177.42,2,1,694.5358411\\r\\n2,6,824.3,0,1,0,33636.63,1,1,692.4349936\\r\\n2,6,862.32,1,0,0,36173.24,1,1,765.0175452\\r\\n0,7,775.05,1,0,1,19339.03,1,0,594.2070431\\r\\n3,5,717.65,1,1,0,35729.31,0,0,416.2992859\\r\\n1,-1,803.67,0,1,1,25087.46,0,1,484.601514\\r\\n4,3,812.58,0,1,1,28523.47,0,1,523.1900482\\r\\n2,1,1010.53,1,0,0,22346.64,2,0,567.0330186\\r\\n2,6,657.46,0,0,0,40556.07,3,1,725.7340411\\r\\n4,4,813.22,0,1,1,17441.35,0,1,535.8048141\\r\\n2,4,749.95,0,1,0,48985.24,2,0,474.3424201\\r\\n1,7,867.51,0,1,0,34397.74,1,1,654.6911119\\r\\n3,4,603.76,0,0,1,27143.19,0,1,437.6546558\\r\\n2,4,780.69,1,1,0,13472.99,2,1,921.675717\\r\\n1,7,889.51,0,1,1,42581.85,2,1,771.331685\\r\\n4,6,956.65,1,0,1,22290.71,1,1,713.9166273\\r\\n3,3,767.03,0,1,1,13983.43,0,1,670.8911292\\r\\n3,6,844.71,1,1,1,31825.02,1,1,818.0911026\\r\\n1,5,1047.23,0,1,0,22144.56,0,1,508.1793159\\r\\n2,6,665.98,0,0,0,20282.97,0,1,452.3685386\\r\\n2,8,761.85,0,1,1,7716.81,3,1,800.3552675\\r\\n2,4,923.94,0,1,0,35159.91,2,0,488.4036544\\r\\n3,6,832.32,1,1,1,18419.07,0,0,475.0273456\\r\\n3,8,946.75,0,1,0,15911.63,1,1,729.5291273\\r\\n4,6,838.62,0,1,0,31661.56,0,0,267.7779516\\r\\n3,4,895.81,0,1,0,21977.73,2,1,796.9563827\\r\\n4,4,996.57,0,0,0,26294.83,0,1,376.6231262\\r\\n4,5,657.8,1,0,1,27780.65,1,0,489.3365077\\r\\n2,9,990.99,1,1,0,22734.82,2,0,690.3913356\\r\\n2,4,599.81,0,0,0,13762.18,1,0,264.2898436\\r\\n0,8,811.26,0,1,0,20312.57,1,1,741.8148937\\r\\n1,3,991.18,1,1,0,6049.17,0,0,458.243049\\r\\n2,10,858.17,1,0,0,13232.88,1,0,438.8596761\\r\\n1,9,873.78,0,0,0,12998.57,0,0,262.134934\\r\\n3,5,801.2,0,0,1,37571.74,0,0,345.5484398\\r\\n2,5,802.11,0,1,0,10244.49,2,1,712.4547407\\r\\n1,4,663.42,1,0,1,51774.67,2,1,894.5040945\\r\\n2,6,748.92,0,0,1,16826.39,1,1,624.7858461\\r\\n2,4,759.56,0,1,1,17279.51,1,1,668.4312013\\r\\n2,5,975.06,0,1,1,14725.77,0,0,411.2190052\\r\\n0,10,659.02,0,0,0,9712.83,0,1,408.7602831\\r\\n3,5,802.68,0,0,0,27474.05,1,1,490.6354472\\r\\n2,5,641.03,0,1,0,24266.75,0,1,503.5726532\\r\\n3,5,901.75,1,0,0,33231.86,1,0,509.7194672\\r\\n4,5,599.01,0,0,0,28939.04,2,0,432.1356836\\r\\n1,3,878.66,0,1,0,36984.67,0,0,273.1460201\\r\\n0,7,937.42,1,0,1,17018.37,0,1,706.5868973\\r\\n3,7,669.21,0,0,0,7597.14,2,1,720.9411431\\r\\n2,1,901.34,0,1,0,39718.99,1,0,303.2398657\\r\\n2,6,828.78,0,1,0,16265.12,1,1,613.4348304\\r\\n1,2,972.73,1,0,1,28861.85,0,1,680.8111229\\r\\n2,3,693.11,0,1,0,25254.15,2,0,481.9605295\\r\\n2,6,881.52,0,1,1,20805.04,1,1,621.9581262\\r\\n1,4,747.96,0,0,0,32192.83,1,0,209.1575056\\r\\n1,5,781.8,1,1,0,5681.86,0,0,329.7516594\\r\\n1,4,897.21,0,0,0,32319.97,2,1,550.9329231\\r\\n1,4,926.78,0,1,1,33504.17,0,1,616.5942508\\r\\n3,3,901.47,1,1,1,19740.48,1,1,720.7078792\\r\\n2,5,838.58,0,1,1,25174.6,0,1,643.2787613\\r\\n2,7,801.08,0,1,0,25772.23,3,1,739.2765584\\r\\n4,3,770.08,0,1,0,22386.58,2,1,714.0825767\\r\\n1,7,744.79,1,0,1,21717.13,2,1,740.654246\\r\\n5,6,862.18,1,1,1,42080.48,0,1,873.3151082\\r\\n2,1,594.97,0,0,0,19945.75,1,1,432.0564968\\r\\n2,6,581.92,1,1,1,31671.12,0,1,701.5860156\\r\\n3,5,828.86,0,1,1,32097.76,0,0,429.8587308\\r\\n1,4,664.27,0,1,0,37591.87,2,1,760.3848419\\r\\n3,5,980.25,0,1,1,9111.69,2,0,442.2453194\\r\\n3,3,733.35,1,1,0,23763.85,0,1,714.2249699\\r\\n1,4,793.23,0,0,0,32791.1,0,0,152.8064994\\r\\n2,-1,594.82,0,1,0,34875.33,1,1,558.6983552\\r\\n3,6,882.81,0,1,0,13983.82,1,1,559.1317316\\r\\n1,5,993.6,0,1,0,18839.05,0,1,491.2677888\\r\\n4,0,856.25,1,0,0,24394.06,2,1,708.0228553\\r\\n3,8,947.1,1,1,0,33000.41,1,0,525.4912471\\r\\n1,5,755.23,0,1,0,27605.69,1,0,442.6147902\\r\\n1,4,952.53,0,1,1,21533.11,1,1,600.6304808\\r\\n0,3,906.35,0,1,0,13662.8,2,0,451.4238351\\r\\n2,2,516.37,0,1,0,20040.11,2,0,530.8667089\\r\\n4,3,906.07,1,1,0,31143.81,0,0,350.6889098\\r\\n1,2,828.02,0,1,1,32351.24,0,1,567.7590954\\r\\n2,2,1000.18,0,1,1,19160.32,2,1,831.5319977\\r\\n3,1,940.05,0,1,1,24975.39,2,0,588.2533207\\r\\n3,3,802.81,0,0,0,25520.17,2,1,541.0411806\\r\\n3,0,1175.71,1,1,1,40163.85,0,1,850.6174256\\r\\n3,3,918.63,0,1,1,16998.43,3,0,516.1371736\\r\\n1,5,587.69,0,1,0,20956.92,1,0,361.0301742\\r\\n2,4,949.02,1,1,1,15645.13,2,1,908.4111717\\r\\n3,5,912.62,1,1,0,19487.56,2,1,948.1244137\\r\\n1,5,567.83,1,1,0,34357.78,1,0,416.0863173\\r\\n3,5,852.77,1,0,0,42164.38,1,0,428.5338743\\r\\n3,5,808.27,0,1,1,42973.79,3,1,872.3510953\\r\\n2,5,630.08,1,1,0,22784.23,0,1,609.2283984\\r\\n2,5,1113.18,0,1,1,27659.79,3,0,601.3236612\\r\\n3,5,785.79,1,1,1,33916.8,0,1,691.4960226\\r\\n1,2,854.04,1,1,1,8560.56,0,0,387.2025774\\r\\n1,5,667.43,0,1,0,16639.28,1,1,651.8485741\\r\\n0,7,478.33,0,1,1,19062.14,0,1,502.3623706\\r\\n2,5,701.43,1,1,1,12857.82,0,0,366.9756201\\r\\n2,5,1000.44,0,1,0,28649.43,1,0,285.7052733\\r\\n3,4,887.57,0,1,0,23856.6,0,1,601.7798412\\r\\n2,6,637.27,0,0,0,28094.45,0,1,485.9354521\\r\\n3,4,733.62,0,1,1,30381.49,2,1,749.1383063\\r\\n3,5,761.19,0,0,1,33356.46,2,0,537.5937521\\r\\n2,7,840.13,0,1,1,35397.42,2,1,761.2642415\\r\\n2,5,739,1,0,1,23731.51,0,0,368.2610223\\r\\n2,6,488.35,0,0,1,12436.41,1,1,580.2561579\\r\\n0,3,1024.82,0,1,1,28876.67,1,1,613.7702422\\r\\n2,6,965.2,0,1,0,33363.39,1,1,745.8097632\\r\\n0,5,968.65,1,1,1,47904.37,3,1,1094.762145\\r\\n3,6,838.25,0,1,1,22592.39,0,1,651.2505703\\r\\n1,3,610.17,0,1,0,28660.04,1,1,529.752567\\r\\n3,7,532.29,0,1,1,20281.78,0,0,339.4661728\\r\\n1,6,984.05,1,0,1,9627.81,1,0,565.4874221\\r\\n3,4,873.78,0,1,1,5565.5,0,0,299.9922367\\r\\n2,4,777.78,0,1,0,25425.08,2,1,679.6670644\\r\\n2,6,705.26,1,1,0,22377.23,2,1,804.4602565\\r\\n3,3,647.53,0,1,1,33074.14,3,0,527.2751089\\r\\n2,3,952.8,0,1,1,39609.7,2,1,856.2314301\\r\\n1,6,622.23,1,1,0,27623.69,0,1,680.8628705\\r\\n1,7,970.66,0,1,1,26338.22,3,1,802.164383\\r\\n0,6,918.08,0,1,0,19449.26,0,0,225.8297233\\r\\n1,1,808.88,1,0,0,19741.17,2,1,813.7427877\\r\\n2,4,755.45,0,0,1,31312.08,2,0,531.6564844\\r\\n2,8,626.27,0,1,0,4577.68,3,0,533.2605305\\r\\n2,5,563,0,0,0,34857.7,1,1,501.5592067\\r\\n0,6,817.24,1,1,0,23889.94,2,1,913.1323358\\r\\n1,6,896.96,0,1,1,11184.97,1,1,708.0589312\\r\\n3,7,874.27,0,1,0,31211.12,0,1,642.4982494\\r\\n2,6,1034.24,1,1,1,7775.47,1,1,823.7567113\\r\\n1,5,898.03,1,1,0,11325.19,3,1,1030.525958\\r\\n1,6,880.51,1,1,1,32511.01,2,1,987.8537637\\r\\n1,4,905.65,0,1,0,56355.95,2,0,576.9982862\\r\\n3,5,646.24,1,1,1,19332,3,0,849.4272911\\r\\n3,7,673.25,0,0,0,20910.94,2,1,619.8681172\\r\\n1,6,702.43,1,0,0,24957.63,2,1,874.6551407\\r\\n2,5,778.53,0,1,0,28011.26,0,1,471.6859469\\r\\n3,2,603.58,0,1,0,28243.32,0,0,224.5919176\\r\\n3,1,1077.31,0,1,1,8382.92,1,1,649.7085257\\r\\n0,5,868.31,1,0,0,31608.86,0,0,271.6913989\\r\\n2,9,746.65,0,1,1,23299.5,2,1,820.8426313\\r\\n0,6,925.72,0,1,0,30721.85,0,0,348.1411043\\r\\n2,9,674.48,1,1,1,27319.21,2,1,905.8731672\\r\\n2,6,905.64,1,1,0,28407.03,0,1,641.2404715\\r\\n0,5,999.06,0,1,0,30210.45,1,1,732.9088264\\r\\n3,4,854.33,0,1,0,18918.92,3,1,787.4450969\\r\\n2,5,813.5,0,1,0,33164.3,1,1,596.5393003\\r\\n3,4,505.88,0,0,1,24826.06,3,0,620.8044324\\r\\n2,4,761.86,0,1,1,7353.41,0,0,364.9502191\\r\\n2,2,767.74,1,1,0,17477.31,3,0,716.031236\\r\\n2,1,752.08,1,1,0,30477.09,1,0,546.5076831\\r\\n2,7,1025.06,1,0,1,17823.67,1,0,609.1034722\\r\\n3,6,753.75,1,1,1,11728.32,4,1,1102.994109\\r\\n1,5,861.68,1,1,0,35897.48,1,0,544.2242352\\r\\n1,3,811.09,0,1,1,36398.05,1,0,522.8355157\\r\\n2,6,901.94,1,1,1,33624.6,2,0,688.1587974\\r\\n2,9,983.6,1,1,0,26546.3,2,0,598.14145\\r\\n0,7,926.45,1,0,1,27785.45,2,1,774.0506127\\r\\n2,3,513.97,1,0,0,24447.93,2,0,482.3048555\\r\\n2,6,742.55,1,1,1,25114.88,1,0,599.9276294\\r\\n3,6,767.65,0,1,0,35282.36,2,0,524.3016383\\r\\n3,5,711.94,0,1,0,18470.96,1,1,716.9022033\\r\\n3,6,847.1,1,1,0,32952.39,0,1,693.158645\\r\\n3,5,698.63,0,1,1,26337.36,1,1,731.2069996\\r\\n4,4,729.31,0,1,1,10395.27,0,0,305.9995691\\r\\n1,5,1023.66,0,1,0,12826.64,1,1,721.5493629\\r\\n1,3,802.89,1,1,0,21307.33,1,1,765.879138\\r\\n1,8,841.62,1,1,0,23764.01,2,0,603.7833777\\r\\n2,5,879.25,0,0,1,12596.85,0,0,272.7913879\\r\\n2,5,367.73,0,0,0,14814.95,0,0,87.8518497\\r\\n2,3,457.71,0,1,0,10398.38,2,0,456.7958156\\r\\n3,4,1025.59,0,1,1,41559.87,0,0,272.5741732\\r\\n2,2,639.22,0,1,0,29826.67,1,1,560.0940142\\r\\n3,5,912.02,1,1,0,33736.56,0,0,353.0244501\\r\\n3,6,1112.99,0,1,1,15430.48,0,0,446.559878\\r\\n0,10,1019.64,0,1,0,6031.98,2,1,819.6897325\\r\\n2,0,708.78,0,1,1,24223.22,2,1,693.0780987\\r\\n2,4,841.29,1,1,0,6165.27,2,0,546.7350103\\r\\n2,4,758.89,1,1,0,12919.84,1,0,576.2154416\\r\\n1,5,668.13,1,1,0,15481.44,1,1,658.3791723\\r\\n4,5,470.52,0,1,0,22726.77,2,1,671.1305381\\r\\n2,4,953.72,0,1,0,27690.35,1,1,555.6780785\\r\\n3,0,772.57,1,1,1,12317.68,0,1,816.3237989\\r\\n2,6,780.34,0,1,1,41016.55,1,0,411.9113289\\r\\n3,8,1024.32,0,1,0,29350.88,2,1,760.0749706\\r\\n1,4,1025.35,1,1,1,12059.17,1,0,675.4361882\\r\\n0,5,795.34,1,1,0,22724.75,2,0,678.2539839\\r\\n2,5,945.22,1,1,1,13217.15,2,1,815.1687753\\r\\n1,4,912.46,1,1,0,26579.64,2,1,976.1715232\\r\\n2,7,697.37,0,1,1,18812.34,1,1,634.8459632\\r\\n2,8,983.43,0,0,1,22657.68,4,0,529.1219825\\r\\n2,2,819.78,1,1,0,21991.53,0,1,636.8844293\\r\\n2,5,678.51,0,1,1,14150.45,1,0,395.4033332\\r\\n2,3,527.7,0,1,0,43204.74,1,1,575.0037374\\r\\n2,9,863.06,1,1,1,22622.14,1,1,812.9828301\\r\\n3,5,692.49,1,1,1,39477.18,1,0,690.1026345\\r\\n2,5,670.01,1,1,1,36959.48,1,0,539.030565\\r\\n3,7,710,1,1,1,19662.06,0,0,547.8579188\\r\\n2,5,954.01,0,0,1,27990.39,0,0,270.2592943\\r\\n2,6,631.54,0,1,1,32046.17,2,1,821.5718157\\r\\n2,6,783.75,1,1,1,8970.35,0,1,768.0457556\\r\\n0,7,602.31,0,0,1,9072.79,1,0,418.4443299\\r\\n3,0,1060.11,0,1,1,33817.84,1,1,656.168438\\r\\n2,2,762.18,1,1,0,35141.26,2,1,786.3179031\\r\\n3,8,824.74,1,1,1,23400.22,1,0,682.4282341\\r\\n3,4,615.35,0,1,0,33954.6,2,1,725.9703135\\r\\n2,6,996.64,0,0,0,21220.11,0,1,495.153671\\r\\n2,3,903.62,1,1,1,38243.86,0,1,793.3423112\\r\\n2,5,686.9,1,1,0,29489.46,2,1,937.6211463\\r\\n2,4,976.34,0,0,0,3507.86,1,1,477.7614788\\r\\n2,7,729.12,0,1,0,29066.2,0,1,655.2151632\\r\\n3,3,829.61,0,1,0,29728.82,1,1,568.0921031\\r\\n1,8,909.63,1,1,1,10084.09,1,1,853.4426696\\r\\n2,8,748.83,0,0,0,12819.36,2,0,329.4553246\\r\\n2,2,1025.77,0,1,1,24293.56,2,0,476.6830107\\r\\n4,7,1049.08,1,1,0,33978.15,0,1,796.1320637\\r\\n2,7,818.59,1,0,0,32710.94,0,1,542.129924\\r\\n1,7,998.02,1,1,0,11903.62,2,1,814.3627199\\r\\n0,5,787.6,0,1,0,26472.36,2,1,659.0702207\\r\\n3,4,671.4,0,1,1,30461.42,0,0,313.4620194\\r\\n2,4,925.83,0,1,0,36063.58,2,0,474.6952299\\r\\n2,4,721.09,0,1,0,37586.7,1,0,478.1037958\\r\\n3,5,621.65,0,1,0,36867.11,1,1,688.1521363\\r\\n3,5,904.32,0,1,1,22728,1,0,538.103211\\r\\n2,3,734.66,0,1,0,15053.63,1,1,517.9757247\\r\\n1,5,652.64,1,1,1,35364.15,1,1,784.2329099\\r\\n3,4,944.11,1,1,0,33446.94,1,1,898.5794256\\r\\n1,6,678.34,0,0,1,39175.03,0,1,615.4819559\\r\\n2,7,666.42,0,1,1,13412.74,0,0,332.5594177\\r\\n1,4,602.24,1,1,0,43077.89,1,1,721.6156407\\r\\n3,4,872.51,0,1,1,13887.45,0,1,495.8442857\\r\\n2,6,816.3,0,1,1,39795.94,1,0,528.4521069\\r\\n3,0,991.31,0,1,0,12687.26,1,1,655.8701112\\r\\n2,5,847.97,0,1,0,39502.92,0,0,354.4726932\\r\\n2,4,660.94,1,0,0,10145.17,0,1,568.6605495\\r\\n1,1,814.75,0,1,1,15535.05,0,1,653.4233136\\r\\n1,6,835.43,0,0,0,22204,0,1,537.8010046\\r\\n'}"]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["HH = pd.read_csv('Household energy bill data (1).csv')\n","HH"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"NZwZ1Pf7kjHg","executionInfo":{"status":"ok","timestamp":1725512962746,"user_tz":-330,"elapsed":464,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"14a559f9-f2cf-4122-85b0-22a608a7f687"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     num_rooms  num_people  housearea  is_ac  is_tv  is_flat  \\\n","0            3           3     742.57      1      1        1   \n","1            1           5     952.99      0      1        0   \n","2            3           1     761.44      1      1        1   \n","3            0           5     861.32      1      1        0   \n","4            1           8     731.61      0      1        0   \n","..         ...         ...        ...    ...    ...      ...   \n","995          3           0     991.31      0      1        0   \n","996          2           5     847.97      0      1        0   \n","997          2           4     660.94      1      0        0   \n","998          1           1     814.75      0      1        1   \n","999          1           6     835.43      0      0        0   \n","\n","     ave_monthly_income  num_children  is_urban  amount_paid  \n","0               9675.93             2         0   560.481447  \n","1              35064.79             1         1   633.283679  \n","2              22292.44             0         0   511.879157  \n","3              12139.08             0         0   332.992035  \n","4              17230.10             2         1   658.285625  \n","..                  ...           ...       ...          ...  \n","995            12687.26             1         1   655.870111  \n","996            39502.92             0         0   354.472693  \n","997            10145.17             0         1   568.660550  \n","998            15535.05             0         1   653.423314  \n","999            22204.00             0         1   537.801005  \n","\n","[1000 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-75e42f8f-617c-49c5-9158-0148b45a25a8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>num_rooms</th>\n","      <th>num_people</th>\n","      <th>housearea</th>\n","      <th>is_ac</th>\n","      <th>is_tv</th>\n","      <th>is_flat</th>\n","      <th>ave_monthly_income</th>\n","      <th>num_children</th>\n","      <th>is_urban</th>\n","      <th>amount_paid</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>742.57</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>9675.93</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>560.481447</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>952.99</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>35064.79</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>633.283679</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>761.44</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>22292.44</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>511.879157</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>861.32</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>12139.08</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>332.992035</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>8</td>\n","      <td>731.61</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>17230.10</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>658.285625</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>995</th>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>991.31</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>12687.26</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>655.870111</td>\n","    </tr>\n","    <tr>\n","      <th>996</th>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>847.97</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>39502.92</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>354.472693</td>\n","    </tr>\n","    <tr>\n","      <th>997</th>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>660.94</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>10145.17</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>568.660550</td>\n","    </tr>\n","    <tr>\n","      <th>998</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>814.75</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>15535.05</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>653.423314</td>\n","    </tr>\n","    <tr>\n","      <th>999</th>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>835.43</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>22204.00</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>537.801005</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1000 rows × 10 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-75e42f8f-617c-49c5-9158-0148b45a25a8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-75e42f8f-617c-49c5-9158-0148b45a25a8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-75e42f8f-617c-49c5-9158-0148b45a25a8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-23420ce4-5447-4ee9-80e6-c86b5b52abec\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-23420ce4-5447-4ee9-80e6-c86b5b52abec')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-23420ce4-5447-4ee9-80e6-c86b5b52abec button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_d261814c-c4da-4a1b-b4a1-7ccccb5528d1\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('HH')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_d261814c-c4da-4a1b-b4a1-7ccccb5528d1 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('HH');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"HH","summary":"{\n  \"name\": \"HH\",\n  \"rows\": 1000,\n  \"fields\": [\n    {\n      \"column\": \"num_rooms\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": -1,\n        \"max\": 5,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          3,\n          1,\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"num_people\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": -1,\n        \"max\": 11,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          11,\n          0,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"housearea\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 147.77173606100078,\n        \"min\": 244.4,\n        \"max\": 1189.12,\n        \"num_unique_values\": 990,\n        \"samples\": [\n          881.87,\n          895.34,\n          1130.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"is_ac\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"is_tv\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"is_flat\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ave_monthly_income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9678.228224285494,\n        \"min\": -1576.44,\n        \"max\": 56531.08,\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          17974.11,\n          14794.44\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"num_children\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 4,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"is_urban\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"amount_paid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 181.40620967162272,\n        \"min\": 87.8518497,\n        \"max\": 1102.994109,\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          583.4380802,\n          408.8352928\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["HH.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ewpV-jEYlqDU","executionInfo":{"status":"ok","timestamp":1725512991291,"user_tz":-330,"elapsed":388,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"a69d14f7-24d1-47b2-f21b-d4bd5d476699"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1000, 10)"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["HH.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kdNtjyLwlshN","executionInfo":{"status":"ok","timestamp":1725513040107,"user_tz":-330,"elapsed":390,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"4cc1264f-fa1d-4b0f-eb10-9ce893d24fe9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1000 entries, 0 to 999\n","Data columns (total 10 columns):\n"," #   Column              Non-Null Count  Dtype  \n","---  ------              --------------  -----  \n"," 0   num_rooms           1000 non-null   int64  \n"," 1   num_people          1000 non-null   int64  \n"," 2   housearea           1000 non-null   float64\n"," 3   is_ac               1000 non-null   int64  \n"," 4   is_tv               1000 non-null   int64  \n"," 5   is_flat             1000 non-null   int64  \n"," 6   ave_monthly_income  1000 non-null   float64\n"," 7   num_children        1000 non-null   int64  \n"," 8   is_urban            1000 non-null   int64  \n"," 9   amount_paid         1000 non-null   float64\n","dtypes: float64(3), int64(7)\n","memory usage: 78.2 KB\n"]}]},{"cell_type":"code","source":["HH.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"mgxousfSl4Aa","executionInfo":{"status":"ok","timestamp":1725513048462,"user_tz":-330,"elapsed":410,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"bc378240-99fe-43f2-a13e-748cd917fe16"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         num_rooms   num_people    housearea        is_ac        is_tv  \\\n","count  1000.000000  1000.000000  1000.000000  1000.000000  1000.000000   \n","mean      1.962000     4.897000   794.703420     0.376000     0.798000   \n","std       1.030348     2.007591   147.771736     0.484622     0.401693   \n","min      -1.000000    -1.000000   244.400000     0.000000     0.000000   \n","25%       1.000000     4.000000   691.037500     0.000000     1.000000   \n","50%       2.000000     5.000000   789.970000     0.000000     1.000000   \n","75%       3.000000     6.000000   892.955000     1.000000     1.000000   \n","max       5.000000    11.000000  1189.120000     1.000000     1.000000   \n","\n","           is_flat  ave_monthly_income  num_children     is_urban  amount_paid  \n","count  1000.000000         1000.000000   1000.000000  1000.000000  1000.000000  \n","mean      0.477000        24684.986550      1.078000     0.608000   600.396359  \n","std       0.499721         9678.228224      0.934232     0.488441   181.406210  \n","min       0.000000        -1576.440000      0.000000     0.000000    87.851850  \n","25%       0.000000        18036.762500      0.000000     0.000000   475.065141  \n","50%       0.000000        24742.575000      1.000000     1.000000   598.331726  \n","75%       1.000000        31402.357500      2.000000     1.000000   729.930489  \n","max       1.000000        56531.080000      4.000000     1.000000  1102.994109  "],"text/html":["\n","  <div id=\"df-01c7decc-ddc4-45ea-9915-00689165a45f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>num_rooms</th>\n","      <th>num_people</th>\n","      <th>housearea</th>\n","      <th>is_ac</th>\n","      <th>is_tv</th>\n","      <th>is_flat</th>\n","      <th>ave_monthly_income</th>\n","      <th>num_children</th>\n","      <th>is_urban</th>\n","      <th>amount_paid</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>1000.000000</td>\n","      <td>1000.000000</td>\n","      <td>1000.000000</td>\n","      <td>1000.000000</td>\n","      <td>1000.000000</td>\n","      <td>1000.000000</td>\n","      <td>1000.000000</td>\n","      <td>1000.000000</td>\n","      <td>1000.000000</td>\n","      <td>1000.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>1.962000</td>\n","      <td>4.897000</td>\n","      <td>794.703420</td>\n","      <td>0.376000</td>\n","      <td>0.798000</td>\n","      <td>0.477000</td>\n","      <td>24684.986550</td>\n","      <td>1.078000</td>\n","      <td>0.608000</td>\n","      <td>600.396359</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>1.030348</td>\n","      <td>2.007591</td>\n","      <td>147.771736</td>\n","      <td>0.484622</td>\n","      <td>0.401693</td>\n","      <td>0.499721</td>\n","      <td>9678.228224</td>\n","      <td>0.934232</td>\n","      <td>0.488441</td>\n","      <td>181.406210</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>-1.000000</td>\n","      <td>-1.000000</td>\n","      <td>244.400000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>-1576.440000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>87.851850</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>1.000000</td>\n","      <td>4.000000</td>\n","      <td>691.037500</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>18036.762500</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>475.065141</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>2.000000</td>\n","      <td>5.000000</td>\n","      <td>789.970000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>24742.575000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>598.331726</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>3.000000</td>\n","      <td>6.000000</td>\n","      <td>892.955000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>31402.357500</td>\n","      <td>2.000000</td>\n","      <td>1.000000</td>\n","      <td>729.930489</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>5.000000</td>\n","      <td>11.000000</td>\n","      <td>1189.120000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>56531.080000</td>\n","      <td>4.000000</td>\n","      <td>1.000000</td>\n","      <td>1102.994109</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-01c7decc-ddc4-45ea-9915-00689165a45f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-01c7decc-ddc4-45ea-9915-00689165a45f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-01c7decc-ddc4-45ea-9915-00689165a45f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-53236ae2-2ebd-40a9-8f91-a97b1557f155\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-53236ae2-2ebd-40a9-8f91-a97b1557f155')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-53236ae2-2ebd-40a9-8f91-a97b1557f155 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"HH\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"num_rooms\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 352.9013872473103,\n        \"min\": -1.0,\n        \"max\": 1000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1.962,\n          2.0,\n          1000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"num_people\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 351.9585254437012,\n        \"min\": -1.0,\n        \"max\": 1000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          4.897,\n          5.0,\n          1000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"housearea\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 357.2374509757608,\n        \"min\": 147.77173606100078,\n        \"max\": 1189.12,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          794.7034199999999,\n          789.97,\n          1000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"is_ac\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 353.4091513373349,\n        \"min\": 0.0,\n        \"max\": 1000.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.376,\n          1.0,\n          0.48462238790511825\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"is_tv\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 353.29095562438675,\n        \"min\": 0.0,\n        \"max\": 1000.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.798,\n          1.0,\n          0.4016931134054421\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"is_flat\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 353.4032883428602,\n        \"min\": 0.0,\n        \"max\": 1000.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.477,\n          1.0,\n          0.4997206426802086\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ave_monthly_income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18682.99445543248,\n        \"min\": -1576.44,\n        \"max\": 56531.08,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          24684.986549999998,\n          24742.574999999997,\n          1000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"num_children\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 353.10051673276695,\n        \"min\": 0.0,\n        \"max\": 1000.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1000.0,\n          1.078,\n          2.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"is_urban\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 353.34673387768504,\n        \"min\": 0.0,\n        \"max\": 1000.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.608,\n          1.0,\n          0.48844096324384445\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"amount_paid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 355.1540931485117,\n        \"min\": 87.8518497,\n        \"max\": 1102.994109,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          600.3963593265801,\n          598.33172565,\n          1000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["HH['num_rooms'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":335},"id":"pR06fKETmBe6","executionInfo":{"status":"ok","timestamp":1725513177756,"user_tz":-330,"elapsed":388,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"0c731585-0d72-40cd-84b4-a4c6eb382e77"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["num_rooms\n"," 2    373\n"," 1    257\n"," 3    240\n"," 0     65\n"," 4     56\n","-1      5\n"," 5      4\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>num_rooms</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>373</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>257</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>240</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>65</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>56</td>\n","    </tr>\n","    <tr>\n","      <th>-1</th>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["HH.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":397},"id":"gqFMXdFunHNS","executionInfo":{"status":"ok","timestamp":1725513373152,"user_tz":-330,"elapsed":417,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"5df3800c-9252-4d8f-b03c-c38fd6ec9a79"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["num_rooms             0\n","num_people            0\n","housearea             0\n","is_ac                 0\n","is_tv                 0\n","is_flat               0\n","ave_monthly_income    0\n","num_children          0\n","is_urban              0\n","amount_paid           0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>num_rooms</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>num_people</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>housearea</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>is_ac</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>is_tv</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>is_flat</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>ave_monthly_income</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>num_children</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>is_urban</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>amount_paid</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["plt.figure(figsize=(6,6))\n","sns.histplot(x = 'num_rooms',data =HH)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":560},"id":"JWsfbW9ambV6","executionInfo":{"status":"ok","timestamp":1725513227666,"user_tz":-330,"elapsed":440,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"e8369da0-1b85-4821-da61-79785f8768d5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='num_rooms', ylabel='Count'>"]},"metadata":{},"execution_count":17},{"output_type":"display_data","data":{"text/plain":["<Figure size 600x600 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAhwAAAINCAYAAAB1dKZCAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAAurElEQVR4nO3df3RU9Z3/8dckJCGBTDCE/JIk/NL8UAJsgDDFWoSY8KOsHDmuPxCosljZBIW0SNNF+WFtWLZVLKbQ7iLYc8hi7YquLPIrSKglIEYpvznCge+gZBIjkiEBEkjm+0e/zLejiUjIJ3cSn49z7jnMvTdz33eOR57cuZOxeTwejwAAAAwKsHoAAADQ+REcAADAOIIDAAAYR3AAAADjCA4AAGAcwQEAAIwjOAAAgHEEBwAAMK6L1QP4g6amJp09e1bh4eGy2WxWjwMAQIfh8Xh04cIFxcfHKyCg5esYBIeks2fPKiEhweoxAADosM6cOaPevXu3uJ3gkBQeHi7pby+W3W63eBoAADoOt9uthIQE79+lLSE4JO/bKHa7neAAAKAVrndLAjeNAgAA4wgOAABgHMEBAACMIzgAAIBxBAcAADCO4AAAAMYRHAAAwDiCAwAAGEdwAAAA4wgOAABgHMEBAACMIzgAAIBxBAcAADCO4AAAAMYRHAAAwDiCAwAAGEdwAAAA4wgOAABgXBerBwDw3eF0OlVdXd1ux4uKilJiYmK7HQ9AywgOAO3C6XQqJSVVly5dbLdjhoaG6dixo0QH4AcIDgDtorq6WpcuXVTm4wtlj+tj/HjuitPa++piVVdXExyAHyA4ALQre1wfRSYmWz0GgHbGTaMAAMA4ggMAABhHcAAAAOMIDgAAYBzBAQAAjCM4AACAcQQHAAAwjuAAAADGERwAAMA4ggMAABhHcAAAAOMIDgAAYBzBAQAAjCM4AACAcQQHAAAwjuAAAADGERwAAMA4ggMAABhHcAAAAOMIDgAAYJylwbFy5Uqlp6fLbrfLbrfL4XDo3Xff9W4fNWqUbDabz/Lkk0/6PIfT6dSECRMUFham6OhozZs3T1evXm3vUwEAAN+gi5UH7927t5YuXarbbrtNHo9Hr732mu677z59/PHHuuOOOyRJM2fO1JIlS7w/ExYW5v1zY2OjJkyYoNjYWO3evVsVFRWaNm2agoKC9Mtf/rLdzwcAADTP0uCYOHGiz+MXXnhBK1eu1J49e7zBERYWptjY2GZ/fuvWrTpy5Ii2b9+umJgYDR48WM8//7zmz5+vRYsWKTg42Pg5AACA6/ObezgaGxu1fv161dXVyeFweNevW7dOUVFRuvPOO1VQUKCLFy96t5WVlWngwIGKiYnxrsvJyZHb7dbhw4dbPFZ9fb3cbrfPAgAAzLH0CockHTx4UA6HQ5cvX1b37t21YcMGpaWlSZIeeeQRJSUlKT4+XgcOHND8+fN1/Phxvfnmm5Ikl8vlExuSvI9dLleLxywsLNTixYsNnREAAPgqy4MjOTlZ+/fvV01Njf70pz9p+vTpKi0tVVpamp544gnvfgMHDlRcXJzGjBmjkydPqn///q0+ZkFBgfLz872P3W63EhISbuo8AABAyyx/SyU4OFgDBgxQRkaGCgsLNWjQIL388svN7puZmSlJOnHihCQpNjZWlZWVPvtce9zSfR+SFBIS4v1kzLUFAACYY3lwfFVTU5Pq6+ub3bZ//35JUlxcnCTJ4XDo4MGDqqqq8u6zbds22e1279syAADAepa+pVJQUKBx48YpMTFRFy5cUHFxsXbu3KktW7bo5MmTKi4u1vjx49WzZ08dOHBAc+fO1d1336309HRJUnZ2ttLS0jR16lQtW7ZMLpdLCxYsUG5urkJCQqw8NQAA8HcsDY6qqipNmzZNFRUVioiIUHp6urZs2aJ7771XZ86c0fbt27V8+XLV1dUpISFBkydP1oIFC7w/HxgYqI0bN2rWrFlyOBzq1q2bpk+f7vN7OwAAgPUsDY7Vq1e3uC0hIUGlpaXXfY6kpCRt2rSpLccCAABtzO/u4QAAAJ0PwQEAAIwjOAAAgHEEBwAAMI7gAAAAxhEcAADAOIIDAAAYR3AAAADjCA4AAGAcwQEAAIwjOAAAgHEEBwAAMI7gAAAAxhEcAADAOIIDAAAYR3AAAADjCA4AAGAcwQEAAIwjOAAAgHEEBwAAMI7gAAAAxhEcAADAOIIDAAAYR3AAAADjCA4AAGAcwQEAAIwjOAAAgHEEBwAAMI7gAAAAxhEcAADAOIIDAAAYR3AAAADjCA4AAGAcwQEAAIwjOAAAgHEEBwAAMI7gAAAAxhEcAADAOIIDAAAYR3AAAADjCA4AAGAcwQEAAIwjOAAAgHEEBwAAMI7gAAAAxhEcAADAOIIDAAAYR3AAAADjLA2OlStXKj09XXa7XXa7XQ6HQ++++653++XLl5Wbm6uePXuqe/fumjx5siorK32ew+l0asKECQoLC1N0dLTmzZunq1evtvepAACAb2BpcPTu3VtLly5VeXm5PvzwQ40ePVr33XefDh8+LEmaO3eu3nnnHb3xxhsqLS3V2bNndf/993t/vrGxURMmTFBDQ4N2796t1157TWvXrtVzzz1n1SkBAIBmdLHy4BMnTvR5/MILL2jlypXas2ePevfurdWrV6u4uFijR4+WJK1Zs0apqanas2ePRowYoa1bt+rIkSPavn27YmJiNHjwYD3//POaP3++Fi1apODgYCtOCwAAfIXf3MPR2Nio9evXq66uTg6HQ+Xl5bpy5YqysrK8+6SkpCgxMVFlZWWSpLKyMg0cOFAxMTHefXJycuR2u71XSZpTX18vt9vtswAAAHMsD46DBw+qe/fuCgkJ0ZNPPqkNGzYoLS1NLpdLwcHB6tGjh8/+MTExcrlckiSXy+UTG9e2X9vWksLCQkVERHiXhISEtj0pAADgw/LgSE5O1v79+7V3717NmjVL06dP15EjR4wes6CgQDU1Nd7lzJkzRo8HAMB3naX3cEhScHCwBgwYIEnKyMjQvn379PLLL+vBBx9UQ0ODzp8/73OVo7KyUrGxsZKk2NhYffDBBz7Pd+1TLNf2aU5ISIhCQkLa+EwAAEBLLL/C8VVNTU2qr69XRkaGgoKCVFJS4t12/PhxOZ1OORwOSZLD4dDBgwdVVVXl3Wfbtm2y2+1KS0tr99kBAEDzLL3CUVBQoHHjxikxMVEXLlxQcXGxdu7cqS1btigiIkIzZsxQfn6+IiMjZbfbNXv2bDkcDo0YMUKSlJ2drbS0NE2dOlXLli2Ty+XSggULlJubyxUMAAD8iKXBUVVVpWnTpqmiokIRERFKT0/Xli1bdO+990qSXnrpJQUEBGjy5Mmqr69XTk6Ofvvb33p/PjAwUBs3btSsWbPkcDjUrVs3TZ8+XUuWLLHqlAAAQDMsDY7Vq1d/4/auXbuqqKhIRUVFLe6TlJSkTZs2tfVoAACgDfndPRwAAKDzITgAAIBxBAcAADCO4AAAAMYRHAAAwDiCAwAAGEdwAAAA4wgOAABgHMEBAACMIzgAAIBxBAcAADCO4AAAAMYRHAAAwDiCAwAAGEdwAAAA4wgOAABgHMEBAACMIzgAAIBxBAcAADCO4AAAAMYRHAAAwDiCAwAAGEdwAAAA4wgOAABgHMEBAACMIzgAAIBxBAcAADCO4AAAAMYRHAAAwDiCAwAAGEdwAAAA4wgOAABgHMEBAACMIzgAAIBxBAcAADCO4AAAAMYRHAAAwDiCAwAAGEdwAAAA4wgOAABgHMEBAACMIzgAAIBxBAcAADCui9UDAPj/nE6nqqur2+14UVFRSkxMbLfjAfjuIjgAP+F0OpWSkqpLly622zFDQ8N07NhRogOAcQQH4Ceqq6t16dJFZT6+UPa4PsaP5644rb2vLlZ1dTXBAcA4ggPwM/a4PopMTLZ6DABoU9w0CgAAjLM0OAoLCzVs2DCFh4crOjpakyZN0vHjx332GTVqlGw2m8/y5JNP+uzjdDo1YcIEhYWFKTo6WvPmzdPVq1fb81QAAMA3sPQtldLSUuXm5mrYsGG6evWqfv7znys7O1tHjhxRt27dvPvNnDlTS5Ys8T4OCwvz/rmxsVETJkxQbGysdu/erYqKCk2bNk1BQUH65S9/2a7nAwAAmmdpcGzevNnn8dq1axUdHa3y8nLdfffd3vVhYWGKjY1t9jm2bt2qI0eOaPv27YqJidHgwYP1/PPPa/78+Vq0aJGCg4ONngMAALg+v7qHo6amRpIUGRnps37dunWKiorSnXfeqYKCAl28+P8/NlhWVqaBAwcqJibGuy4nJ0dut1uHDx9u9jj19fVyu90+CwAAMMdvPqXS1NSkOXPmaOTIkbrzzju96x955BElJSUpPj5eBw4c0Pz583X8+HG9+eabkiSXy+UTG5K8j10uV7PHKiws1OLFiw2dCQAA+Cq/CY7c3FwdOnRI77//vs/6J554wvvngQMHKi4uTmPGjNHJkyfVv3//Vh2roKBA+fn53sdut1sJCQmtGxwAAFyXX7ylkpeXp40bN+q9995T7969v3HfzMxMSdKJEyckSbGxsaqsrPTZ59rjlu77CAkJkd1u91kAAIA5lgaHx+NRXl6eNmzYoB07dqhv377X/Zn9+/dLkuLi4iRJDodDBw8eVFVVlXefbdu2yW63Ky0tzcjcAADgxlj6lkpubq6Ki4v19ttvKzw83HvPRUREhEJDQ3Xy5EkVFxdr/Pjx6tmzpw4cOKC5c+fq7rvvVnp6uiQpOztbaWlpmjp1qpYtWyaXy6UFCxYoNzdXISEhVp4eAAD4fyy9wrFy5UrV1NRo1KhRiouL8y6vv/66JCk4OFjbt29Xdna2UlJS9JOf/ESTJ0/WO++8432OwMBAbdy4UYGBgXI4HHr00Uc1bdo0n9/bAQAArGXpFQ6Px/ON2xMSElRaWnrd50lKStKmTZvaaiwAANDG/OKmUQAA0LkRHAAAwDiCAwAAGEdwAAAA4/zmN40CAG6c0+lUdXV1ux0vKipKiYmJ7XY8dB4EBwB0UE6nUykpqbp06eL1d24joaFhOnbsKNGBG0ZwAEAHVV1drUuXLirz8YWyx/Uxfjx3xWntfXWxqqurCQ7cMIIDADo4e1wfRSYmWz0G8I24aRQAABhHcAAAAOMIDgAAYBzBAQAAjCM4AACAcQQHAAAwjuAAAADGERwAAMA4ggMAABhHcAAAAOMIDgAAYBzBAQAAjCM4AACAcQQHAAAwjuAAAADGERwAAMA4ggMAABhHcAAAAOMIDgAAYBzBAQAAjCM4AACAcQQHAAAwjuAAAADGERwAAMA4ggMAABhHcAAAAOMIDgAAYBzBAQAAjCM4AACAcQQHAAAwjuAAAADGtSo4+vXrpy+++OJr68+fP69+/frd9FAAAKBzaVVwnD59Wo2NjV9bX19fr88+++ymhwIAAJ1LlxvZ+X/+53+8f96yZYsiIiK8jxsbG1VSUqI+ffq02XAAAKBzuKHgmDRpkiTJZrNp+vTpPtuCgoLUp08f/frXv26z4QAAQOdwQ8HR1NQkSerbt6/27dunqKgoI0MBAIDO5YaC45pTp0619RwAAKATa1VwSFJJSYlKSkpUVVXlvfJxzauvvnrTgwEAgM6jVcGxePFiLVmyREOHDlVcXJxsNltbzwUAADqRVgXHqlWrtHbtWk2dOrWt5wEAAJ1Qq34PR0NDg773ve/d9MELCws1bNgwhYeHKzo6WpMmTdLx48d99rl8+bJyc3PVs2dPde/eXZMnT1ZlZaXPPk6nUxMmTFBYWJiio6M1b948Xb169abnAwAAbaNVwfHP//zPKi4uvumDl5aWKjc3V3v27NG2bdt05coVZWdnq66uzrvP3Llz9c477+iNN95QaWmpzp49q/vvv9+7vbGxURMmTFBDQ4N2796t1157TWvXrtVzzz130/MBAIC20aq3VC5fvqzf//732r59u9LT0xUUFOSz/cUXX/xWz7N582afx2vXrlV0dLTKy8t19913q6amRqtXr1ZxcbFGjx4tSVqzZo1SU1O1Z88ejRgxQlu3btWRI0e0fft2xcTEaPDgwXr++ec1f/58LVq0SMHBwa05RQAA0IZaFRwHDhzQ4MGDJUmHDh3y2XYzN5DW1NRIkiIjIyVJ5eXlunLlirKysrz7pKSkKDExUWVlZRoxYoTKyso0cOBAxcTEePfJycnRrFmzdPjwYQ0ZMuRrx6mvr1d9fb33sdvtbvXMAADg+loVHO+9915bz6GmpibNmTNHI0eO1J133ilJcrlcCg4OVo8ePXz2jYmJkcvl8u7z97Fxbfu1bc0pLCzU4sWL2/gMAABAS/zm6+lzc3N16NAhrV+/3vixCgoKVFNT413OnDlj/JgAAHyXteoKxz333PONb53s2LHjhp4vLy9PGzdu1K5du9S7d2/v+tjYWDU0NOj8+fM+VzkqKysVGxvr3eeDDz7web5rn2K5ts9XhYSEKCQk5IZmBAAArdeqKxyDBw/WoEGDvEtaWpoaGhr00UcfaeDAgd/6eTwej/Ly8rRhwwbt2LFDffv29dmekZGhoKAglZSUeNcdP35cTqdTDodDkuRwOHTw4EFVVVV599m2bZvsdrvS0tJac3oAAKCNteoKx0svvdTs+kWLFqm2tvZbP09ubq6Ki4v19ttvKzw83HvPRUREhEJDQxUREaEZM2YoPz9fkZGRstvtmj17thwOh0aMGCFJys7OVlpamqZOnaply5bJ5XJpwYIFys3N5SoGAAB+ok3v4Xj00Udv6HtUVq5cqZqaGo0aNUpxcXHe5fXXX/fu89JLL+mHP/yhJk+erLvvvluxsbF68803vdsDAwO1ceNGBQYGyuFw6NFHH9W0adO0ZMmStjw1AABwE1r95W3NKSsrU9euXb/1/h6P57r7dO3aVUVFRSoqKmpxn6SkJG3atOlbHxcAALSvVgXH3/+mT+lv4VBRUaEPP/xQzz77bJsMBgAAOo9WBUdERITP44CAACUnJ2vJkiXKzs5uk8EAAEDn0argWLNmTVvPAQAAOrGbuoejvLxcR48elSTdcccdzf4acQAAgFYFR1VVlR566CHt3LnT+wu5zp8/r3vuuUfr169Xr1692nJGAADQwbXqY7GzZ8/WhQsXdPjwYZ07d07nzp3ToUOH5Ha79dRTT7X1jAAAoINr1RWOzZs3a/v27UpNTfWuS0tLU1FRETeNAgCAr2nVFY6mpiYFBQV9bX1QUJCamppueigAANC5tCo4Ro8eraefflpnz571rvvss880d+5cjRkzps2GAwAAnUOrguOVV16R2+1Wnz591L9/f/Xv3199+/aV2+3WihUr2npGAADQwbXqHo6EhAR99NFH2r59u44dOyZJSk1NVVZWVpsOBwAAOocbusKxY8cOpaWlye12y2az6d5779Xs2bM1e/ZsDRs2THfccYf+/Oc/m5oVAAB0UDcUHMuXL9fMmTNlt9u/ti0iIkI//vGP9eKLL7bZcAAAoHO4oeD461//qrFjx7a4PTs7W+Xl5Tc9FAAA6FxuKDgqKyub/TjsNV26dNHnn39+00MBAIDO5YaC49Zbb9WhQ4da3H7gwAHFxcXd9FAAAKBzuaHgGD9+vJ599lldvnz5a9suXbqkhQsX6oc//GGbDQcAADqHG/pY7IIFC/Tmm2/q9ttvV15enpKTkyVJx44dU1FRkRobG/Wv//qvRgYFAAAd1w0FR0xMjHbv3q1Zs2apoKBAHo9HkmSz2ZSTk6OioiLFxMQYGRQAAHRcN/yLv5KSkrRp0yZ9+eWXOnHihDwej2677TbdcsstJuYDAACdQKt+06gk3XLLLRo2bFhbzgIAADqpVn2XCgAAwI0gOAAAgHEEBwAAMI7gAAAAxhEcAADAOIIDAAAYR3AAAADjCA4AAGAcwQEAAIwjOAAAgHEEBwAAMI7gAAAAxhEcAADAOIIDAAAYR3AAAADjCA4AAGAcwQEAAIwjOAAAgHEEBwAAMI7gAAAAxhEcAADAOIIDAAAYR3AAAADjCA4AAGAcwQEAAIwjOAAAgHEEBwAAMM7S4Ni1a5cmTpyo+Ph42Ww2vfXWWz7bf/SjH8lms/ksY8eO9dnn3LlzmjJliux2u3r06KEZM2aotra2Hc8CAABcj6XBUVdXp0GDBqmoqKjFfcaOHauKigrv8l//9V8+26dMmaLDhw9r27Zt2rhxo3bt2qUnnnjC9OgAAOAGdLHy4OPGjdO4ceO+cZ+QkBDFxsY2u+3o0aPavHmz9u3bp6FDh0qSVqxYofHjx+tXv/qV4uPj23xmAABw4/z+Ho6dO3cqOjpaycnJmjVrlr744gvvtrKyMvXo0cMbG5KUlZWlgIAA7d27t8XnrK+vl9vt9lkAAIA5fh0cY8eO1R/+8AeVlJTo3/7t31RaWqpx48apsbFRkuRyuRQdHe3zM126dFFkZKRcLleLz1tYWKiIiAjvkpCQYPQ8AAD4rrP0LZXreeihh7x/HjhwoNLT09W/f3/t3LlTY8aMafXzFhQUKD8/3/vY7XYTHQAAGOTXVzi+ql+/foqKitKJEyckSbGxsaqqqvLZ5+rVqzp37lyL931If7svxG63+ywAAMCcDhUcn376qb744gvFxcVJkhwOh86fP6/y8nLvPjt27FBTU5MyMzOtGhMAAHyFpW+p1NbWeq9WSNKpU6e0f/9+RUZGKjIyUosXL9bkyZMVGxurkydP6plnntGAAQOUk5MjSUpNTdXYsWM1c+ZMrVq1SleuXFFeXp4eeughPqECAIAfsfQKx4cffqghQ4ZoyJAhkqT8/HwNGTJEzz33nAIDA3XgwAH94z/+o26//XbNmDFDGRkZ+vOf/6yQkBDvc6xbt04pKSkaM2aMxo8fr7vuuku///3vrTolAADQDEuvcIwaNUoej6fF7Vu2bLnuc0RGRqq4uLgtxwIAAG2sQ93DAQAAOiaCAwAAGEdwAAAA4wgOAABgHMEBAACMIzgAAIBxBAcAADCO4AAAAMYRHAAAwDiCAwAAGEdwAAAA4wgOAABgHMEBAACMIzgAAIBxBAcAADCO4AAAAMYRHAAAwDiCAwAAGEdwAAAA4wgOAABgHMEBAACMIzgAAIBxBAcAADCO4AAAAMYRHAAAwDiCAwAAGEdwAAAA4wgOAABgHMEBAACMIzgAAIBxBAcAADCO4AAAAMYRHAAAwDiCAwAAGEdwAAAA4wgOAABgHMEBAACMIzgAAIBxBAcAADCO4AAAAMYRHAAAwDiCAwAAGEdwAAAA4wgOAABgHMEBAACMIzgAAIBxBAcAADCO4AAAAMZZGhy7du3SxIkTFR8fL5vNprfeestnu8fj0XPPPae4uDiFhoYqKytLn3zyic8+586d05QpU2S329WjRw/NmDFDtbW17XgWAADgeiwNjrq6Og0aNEhFRUXNbl+2bJl+85vfaNWqVdq7d6+6deumnJwcXb582bvPlClTdPjwYW3btk0bN27Url279MQTT7TXKQAAgG+hi5UHHzdunMaNG9fsNo/Ho+XLl2vBggW67777JEl/+MMfFBMTo7feeksPPfSQjh49qs2bN2vfvn0aOnSoJGnFihUaP368fvWrXyk+Pr7dzgUAALTMb+/hOHXqlFwul7KysrzrIiIilJmZqbKyMklSWVmZevTo4Y0NScrKylJAQID27t3b4nPX19fL7Xb7LAAAwBy/DQ6XyyVJiomJ8VkfExPj3eZyuRQdHe2zvUuXLoqMjPTu05zCwkJFRER4l4SEhDaeHgAA/D2/DQ6TCgoKVFNT413OnDlj9UgAAHRqfhscsbGxkqTKykqf9ZWVld5tsbGxqqqq8tl+9epVnTt3zrtPc0JCQmS3230WAABgjt8GR9++fRUbG6uSkhLvOrfbrb1798rhcEiSHA6Hzp8/r/Lycu8+O3bsUFNTkzIzM9t9ZgAA0DxLP6VSW1urEydOeB+fOnVK+/fvV2RkpBITEzVnzhz94he/0G233aa+ffvq2WefVXx8vCZNmiRJSk1N1dixYzVz5kytWrVKV65cUV5enh566CE+oQIAgB+xNDg+/PBD3XPPPd7H+fn5kqTp06dr7dq1euaZZ1RXV6cnnnhC58+f11133aXNmzera9eu3p9Zt26d8vLyNGbMGAUEBGjy5Mn6zW9+0+7nAgAAWmZpcIwaNUoej6fF7TabTUuWLNGSJUta3CcyMlLFxcUmxgMAAG3Eb+/hAAAAnQfBAQAAjCM4AACAcQQHAAAwjuAAAADGERwAAMA4ggMAABhHcAAAAOMIDgAAYBzBAQAAjCM4AACAcQQHAAAwjuAAAADGERwAAMA4ggMAABhHcAAAAOMIDgAAYBzBAQAAjCM4AACAcQQHAAAwjuAAAADGERwAAMA4ggMAABhHcAAAAOMIDgAAYBzBAQAAjCM4AACAcQQHAAAwjuAAAADGERwAAMA4ggMAABhHcAAAAOMIDgAAYFwXqwdAx+V0OlVdXd1ux4uKilJiYmK7HQ8A0HYIDrSK0+lUSkqqLl262G7HDA0N07FjR4kOAOiACA60SnV1tS5duqjMxxfKHtfH+PHcFae199XFqq6uJjgAoAMiOHBT7HF9FJmYbPUYAAA/x02jAADAOIIDAAAYR3AAAADjCA4AAGAcwQEAAIwjOAAAgHEEBwAAMI7fwwEA8Ft8hULnQXAAAPwSX6HQuRAcAAC/xFcodC4EBwDAr/EVCp2DX980umjRItlsNp8lJSXFu/3y5cvKzc1Vz5491b17d02ePFmVlZUWTgwAAJrj18EhSXfccYcqKiq8y/vvv+/dNnfuXL3zzjt64403VFpaqrNnz+r++++3cFoAANAcv39LpUuXLoqNjf3a+pqaGq1evVrFxcUaPXq0JGnNmjVKTU3Vnj17NGLEiPYeFQAAtMDvr3B88sknio+PV79+/TRlyhQ5nU5JUnl5ua5cuaKsrCzvvikpKUpMTFRZWdk3Pmd9fb3cbrfPAgAAzPHr4MjMzNTatWu1efNmrVy5UqdOndL3v/99XbhwQS6XS8HBwerRo4fPz8TExMjlcn3j8xYWFioiIsK7JCQkGDwLAADg12+pjBs3zvvn9PR0ZWZmKikpSX/84x8VGhra6uctKChQfn6+97Hb7SY6AAAwyK+vcHxVjx49dPvtt+vEiROKjY1VQ0ODzp8/77NPZWVls/d8/L2QkBDZ7XafBQAAmNOhgqO2tlYnT55UXFycMjIyFBQUpJKSEu/248ePy+l0yuFwWDglAAD4Kr9+S+WnP/2pJk6cqKSkJJ09e1YLFy5UYGCgHn74YUVERGjGjBnKz89XZGSk7Ha7Zs+eLYfDwSdUAADwM34dHJ9++qkefvhhffHFF+rVq5fuuusu7dmzR7169ZIkvfTSSwoICNDkyZNVX1+vnJwc/fa3v7V4agAA8FV+HRzr16//xu1du3ZVUVGRioqK2mkiAADQGh3qHg4AANAxERwAAMA4ggMAABhHcAAAAOMIDgAAYBzBAQAAjCM4AACAcQQHAAAwjuAAAADGERwAAMA4ggMAABhHcAAAAOMIDgAAYBzBAQAAjCM4AACAcQQHAAAwjuAAAADGERwAAMA4ggMAABhHcAAAAOMIDgAAYBzBAQAAjCM4AACAcQQHAAAwjuAAAADGERwAAMA4ggMAABhHcAAAAOMIDgAAYBzBAQAAjCM4AACAcQQHAAAwjuAAAADGERwAAMA4ggMAABhHcAAAAOMIDgAAYBzBAQAAjCM4AACAcQQHAAAwjuAAAADGERwAAMA4ggMAABhHcAAAAOMIDgAAYFwXqwfozJxOp6qrq9vteFFRUUpMTGy34wEA8G0RHIY4nU6lpKTq0qWL7XbM0NAwHTt2lOgAgA6ivf9hKln3j1OCw5Dq6mpdunRRmY8vlD2uj/HjuStOa++ri1VdXU1wAEAHYMU/TCXr/nHaaYKjqKhI//7v/y6Xy6VBgwZpxYoVGj58uNVjyR7XR5GJyVaPAQDwM+39D1PJ2n+cdorgeP3115Wfn69Vq1YpMzNTy5cvV05Ojo4fP67o6GirxwMAoEXflX+YdopPqbz44ouaOXOmHnvsMaWlpWnVqlUKCwvTq6++avVoAABAneAKR0NDg8rLy1VQUOBdFxAQoKysLJWVlTX7M/X19aqvr/c+rqmpkSS53e42m6u2tlaSdO7/HNfV+ktt9rwtcbuckqTy8nLvsU06fvy4pM57ftcEBASoqampXY7V2V/Tzn5+Uvv+9yJ1/teU82t7186xtra2zf7Ou/Y8Ho/nm3f0dHCfffaZR5Jn9+7dPuvnzZvnGT58eLM/s3DhQo8kFhYWFhYWljZazpw5841/X3f4KxytUVBQoPz8fO/jpqYmnTt3Tj179pTNZmuTY7jdbiUkJOjMmTOy2+1t8pydAa9Ly3htmsfr0jJem+bxurTMxGvj8Xh04cIFxcfHf+N+HT44oqKiFBgYqMrKSp/1lZWVio2NbfZnQkJCFBIS4rOuR48eRuaz2+38B98MXpeW8do0j9elZbw2zeN1aVlbvzYRERHX3afD3zQaHBysjIwMlZSUeNc1NTWppKREDofDwskAAMA1Hf4KhyTl5+dr+vTpGjp0qIYPH67ly5errq5Ojz32mNWjAQAAdZLgePDBB/X555/rueeek8vl0uDBg7V582bFxMRYNlNISIgWLlz4tbduvut4XVrGa9M8XpeW8do0j9elZVa+NjaP53qfYwEAALg5Hf4eDgAA4P8IDgAAYBzBAQAAjCM4AACAcQRHO3jhhRf0ve99T2FhYcZ+wVhHUVRUpD59+qhr167KzMzUBx98YPVIltu1a5cmTpyo+Ph42Ww2vfXWW1aP5BcKCws1bNgwhYeHKzo6WpMmTfJ+98R32cqVK5Wenu79xU0Oh0Pvvvuu1WP5naVLl8pms2nOnDlWj2K5RYsWyWaz+SwpKSntPgfB0Q4aGhr0wAMPaNasWVaPYqnXX39d+fn5WrhwoT766CMNGjRIOTk5qqqqsno0S9XV1WnQoEEqKiqyehS/UlpaqtzcXO3Zs0fbtm3TlStXlJ2drbq6OqtHs1Tv3r21dOlSlZeX68MPP9To0aN133336fDhw1aP5jf27dun3/3ud0pPT7d6FL9xxx13qKKiwru8//777T9E23yFGr6NNWvWeCIiIqwewzLDhw/35Obmeh83NjZ64uPjPYWFhRZO5V8keTZs2GD1GH6pqqrKI8lTWlpq9Sh+55ZbbvH853/+p9Vj+IULFy54brvtNs+2bds8P/jBDzxPP/201SNZbuHChZ5BgwZZPYaHKxxoFw0NDSovL1dWVpZ3XUBAgLKyslRWVmbhZOgoampqJEmRkZEWT+I/GhsbtX79etXV1fFVDv9Pbm6uJkyY4PP/GkiffPKJ4uPj1a9fP02ZMkVOp7PdZ+gUv2kU/q+6ulqNjY1f++2vMTExOnbsmEVToaNoamrSnDlzNHLkSN15551Wj2O5gwcPyuFw6PLly+revbs2bNigtLQ0q8ey3Pr16/XRRx9p3759Vo/iVzIzM7V27VolJyeroqJCixcv1ve//30dOnRI4eHh7TYHVzha6Wc/+9nXbsL56sJfpEDbyM3N1aFDh7R+/XqrR/ELycnJ2r9/v/bu3atZs2Zp+vTpOnLkiNVjWerMmTN6+umntW7dOnXt2tXqcfzKuHHj9MADDyg9PV05OTnatGmTzp8/rz/+8Y/tOgdXOFrpJz/5iX70ox994z79+vVrn2E6gKioKAUGBqqystJnfWVlpWJjYy2aCh1BXl6eNm7cqF27dql3795Wj+MXgoODNWDAAElSRkaG9u3bp5dfflm/+93vLJ7MOuXl5aqqqtI//MM/eNc1NjZq165deuWVV1RfX6/AwEALJ/QfPXr00O23364TJ06063EJjlbq1auXevXqZfUYHUZwcLAyMjJUUlKiSZMmSfrbZfKSkhLl5eVZOxz8ksfj0ezZs7Vhwwbt3LlTffv2tXokv9XU1KT6+nqrx7DUmDFjdPDgQZ91jz32mFJSUjR//nxi4+/U1tbq5MmTmjp1arsel+BoB06nU+fOnZPT6VRjY6P2798vSRowYIC6d+9u7XDtKD8/X9OnT9fQoUM1fPhwLV++XHV1dXrsscesHs1StbW1Pv/SOHXqlPbv36/IyEglJiZaOJm1cnNzVVxcrLffflvh4eFyuVySpIiICIWGhlo8nXUKCgo0btw4JSYm6sKFCyouLtbOnTu1ZcsWq0ezVHh4+Nfu7+nWrZt69uz5nb/v56c//akmTpyopKQknT17VgsXLlRgYKAefvjh9h3E6o/JfBdMnz7dI+lry3vvvWf1aO1uxYoVnsTERE9wcLBn+PDhnj179lg9kuXee++9Zv/7mD59utWjWaq510SSZ82aNVaPZqnHH3/ck5SU5AkODvb06tXLM2bMGM/WrVutHssv8bHYv3nwwQc9cXFxnuDgYM+tt97qefDBBz0nTpxo9zn4enoAAGAcn1IBAADGERwAAMA4ggMAABhHcAAAAOMIDgAAYBzBAQAAjCM4AACAcQQHAAAwjuAAAADGERwAOoyGhgarRwDQSgQHAEnSqFGj9NRTT+mZZ55RZGSkYmNjtWjRIknS6dOnZbPZvF88KEnnz5+XzWbTzp07JUk7d+6UzWbTli1bNGTIEIWGhmr06NGqqqrSu+++q9TUVNntdj3yyCO6ePHit54pLy9Pc+bMUVRUlHJyciRJpaWlGj58uEJCQhQXF6ef/exnunr1qvfn6uvr9dRTTyk6Olpdu3bVXXfdpX379nm3t3bWP/3pTxo4cKBCQ0PVs2dPZWVlqa6urpWvOPDdQnAA8HrttdfUrVs37d27V8uWLdOSJUu0bdu2G3qORYsW6ZVXXtHu3bt15swZ/dM//ZOWL1+u4uJi/e///q+2bt2qFStW3NBMwcHB+stf/qJVq1bps88+0/jx4zVs2DD99a9/1cqVK7V69Wr94he/8P7MM888o//+7//Wa6+9po8++kgDBgxQTk6Ozp071+pZKyoq9PDDD+vxxx/X0aNHtXPnTt1///3i66iAb6ndvy4OgF/6wQ9+4Lnrrrt81g0bNswzf/58z6lTpzySPB9//LF325dffunzrcfXvvV2+/bt3n0KCws9kjwnT570rvvxj3/sycnJ+dYzDRkyxGfdz3/+c09ycrKnqanJu66oqMjTvXt3T2Njo6e2ttYTFBTkWbdunXd7Q0ODJz4+3rNs2bJWz1peXu6R5Dl9+vS3mh2AL65wAPBKT0/3eRwXF6eqqqpWP0dMTIzCwsLUr18/n3U38pwZGRk+j48ePSqHwyGbzeZdN3LkSNXW1urTTz/VyZMndeXKFY0cOdK7PSgoSMOHD9fRo0dbPeugQYM0ZswYDRw4UA888ID+4z/+Q19++eW3Pg/gu47gAOAVFBTk89hms6mpqUkBAX/7X4Xn794+uHLlynWfw2aztfic31a3bt2+9b436kZmDQwM1LZt2/Tuu+8qLS1NK1asUHJysk6dOmVsPqAzITgAXFevXr0k/e0+hmv+/gbS9pSamqqysjKf+PnLX/6i8PBw9e7dW/379/fe83HNlStXtG/fPqWlpd3UsW02m0aOHKnFixfr448/VnBwsDZs2HBTzwl8V3SxegAA/i80NFQjRozQ0qVL1bdvX1VVVWnBggWWzPIv//IvWr58uWbPnq28vDwdP35cCxcuVH5+vgICAtStWzfNmjVL8+bNU2RkpBITE7Vs2TJdvHhRM2bMaPVx9+7dq5KSEmVnZys6Olp79+7V559/rtTU1DY8O6DzIjgAfCuvvvqqZsyYoYyMDCUnJ2vZsmXKzs5u9zluvfVWbdq0SfPmzdOgQYMUGRmpGTNm+ATQ0qVL1dTUpKlTp+rChQsaOnSotmzZoltuuaXVx7Xb7dq1a5eWL18ut9utpKQk/frXv9a4cePa4rSATs/m8fCZLgAAYBb3cAAAAOMIDgCWcDqd6t69e4uL0+m0ekQAbYi3VABY4urVqzp9+nSL2/v06aMuXbjNDOgsCA4AAGAcb6kAAADjCA4AAGAcwQEAAIwjOAAAgHEEBwAAMI7gAAAAxhEcAADAOIIDAAAY938Bro+uXB2HHNEAAAAASUVORK5CYII=\n"},"metadata":{}}]},{"cell_type":"code","source":["correlation = HH.corr()\n","plt.figure(figsize=(6,6))\n","sns.heatmap(correlation)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":679},"id":"5oBH6GD3noLH","executionInfo":{"status":"ok","timestamp":1725513555680,"user_tz":-330,"elapsed":1135,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"0b2c0523-a8d4-4c51-da81-b131f2a466a4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":19},{"output_type":"display_data","data":{"text/plain":["<Figure size 600x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["X = HH.drop('amount_paid', axis =1)\n","Y = HH['amount_paid']"],"metadata":{"id":"ZsCbzfCpoAXe"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train,X_test,Y_train,Y_test = train_test_split(X, Y,test_size = 0.2,random_state = 1 )"],"metadata":{"id":"svq9nsJtoQlT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"ZXum06KmuQl2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["LG = LinearRegression()\n","LG\n","LG.fit(X_train,Y_train)\n","\n","#train data pedction\n","X_train_prediction = LG.predict(X_train)\n","train_score = metrics.r2_score(Y_train,X_train_prediction,)\n","print('Train data accuracy',train_score)\n","\n","#train data pedction\n","X_test_prediction = LG.predict(X_test)\n","test_score = metrics.r2_score(Y_test,X_test_prediction)\n","print('Test data accuracy',test_score)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_vJDutBmoq-M","executionInfo":{"status":"ok","timestamp":1725514591956,"user_tz":-330,"elapsed":401,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"f6014f50-9f09-433f-f98d-5723fdd378f5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Train data accuracy 0.8835669724118631\n","Test data accuracy 0.861796549610877\n"]}]},{"cell_type":"code","source":["RFG = RandomForestRegressor()\n","RFG\n","RFG.fit(X_train,Y_train)\n","\n","#train data pedction\n","X_train_prediction = RFG.predict(X_train)\n","train_score = metrics.r2_score(Y_train,X_train_prediction,)\n","print('Train data accuracy',train_score)\n","\n","#train data pedction\n","X_test_prediction = RFG.predict(X_test)\n","test_score = metrics.r2_score(Y_test,X_test_prediction)\n","print('Test data accuracy',test_score)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QK5szHgwpuFj","executionInfo":{"status":"ok","timestamp":1725514783665,"user_tz":-330,"elapsed":1651,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"5567f94c-cf28-4fc9-ad44-b3edf293bee6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Train data accuracy 0.9792701316863475\n","Test data accuracy 0.8186915305937971\n"]}]},{"cell_type":"code","source":["input_data = (2,\t6,\t674.74\t,1\t,1\t,0\t,36430.80,\t1,\t0)\n","input_data_as_numpy_array = np.array(input_data)\n","input_data_reshaped = input_data_as_numpy_array.reshape(1,-1)\n","prediction = RFG.predict(input_data_reshaped)\n","print(prediction[0])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FrT-JI7NsjMl","executionInfo":{"status":"ok","timestamp":1725515648660,"user_tz":-330,"elapsed":404,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"3be0e624-2efc-432c-a454-e7c236724583"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["556.0872529470003\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/base.py:465: UserWarning: X does not have valid feature names, but RandomForestRegressor was fitted with feature names\n","  warnings.warn(\n"]}]},{"cell_type":"code","source":["X_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"TTX7upv8txf2","executionInfo":{"status":"ok","timestamp":1725515543798,"user_tz":-330,"elapsed":628,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"47a8ca9f-3e26-43a4-c698-b08efad4685f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     num_rooms  num_people  housearea  is_ac  is_tv  is_flat  \\\n","507          2           6     674.74      1      1        0   \n","818          1           4     897.21      0      0        0   \n","452          2           3     958.46      0      1        1   \n","368          2           6     753.22      1      1        0   \n","242          1           5    1031.06      1      1        0   \n","..         ...         ...        ...    ...    ...      ...   \n","430          2           4     773.20      0      1        0   \n","874          1           3     610.17      0      1        0   \n","550          1           5     735.06      0      1        0   \n","608          4           6     893.72      0      1        1   \n","207          4           4     801.12      0      1        0   \n","\n","     ave_monthly_income  num_children  is_urban  \n","507            36430.80             1         0  \n","818            32319.97             2         1  \n","452            28827.97             2         1  \n","368            15696.01             0         1  \n","242            38350.58             3         1  \n","..                  ...           ...       ...  \n","430            34162.20             1         1  \n","874            28660.04             1         1  \n","550            29839.01             0         0  \n","608            24822.96             0         0  \n","207            11182.68             2         1  \n","\n","[200 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-0047a1f4-b6e0-43a0-bffc-0e81ec63b6e9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>num_rooms</th>\n","      <th>num_people</th>\n","      <th>housearea</th>\n","      <th>is_ac</th>\n","      <th>is_tv</th>\n","      <th>is_flat</th>\n","      <th>ave_monthly_income</th>\n","      <th>num_children</th>\n","      <th>is_urban</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>507</th>\n","      <td>2</td>\n","      <td>6</td>\n","      <td>674.74</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>36430.80</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>818</th>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>897.21</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>32319.97</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>452</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>958.46</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>28827.97</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>368</th>\n","      <td>2</td>\n","      <td>6</td>\n","      <td>753.22</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>15696.01</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>242</th>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>1031.06</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>38350.58</td>\n","      <td>3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>430</th>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>773.20</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>34162.20</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>874</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>610.17</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>28660.04</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>550</th>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>735.06</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>29839.01</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>608</th>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>893.72</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>24822.96</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>207</th>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>801.12</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>11182.68</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>200 rows × 9 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0047a1f4-b6e0-43a0-bffc-0e81ec63b6e9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0047a1f4-b6e0-43a0-bffc-0e81ec63b6e9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0047a1f4-b6e0-43a0-bffc-0e81ec63b6e9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bb22321b-c689-4686-ba6a-df325d8fc05e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bb22321b-c689-4686-ba6a-df325d8fc05e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bb22321b-c689-4686-ba6a-df325d8fc05e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_df340d81-b865-4dde-b22b-2d61fa5bde14\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('X_test')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_df340d81-b865-4dde-b22b-2d61fa5bde14 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('X_test');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"X_test","summary":"{\n  \"name\": \"X_test\",\n  \"rows\": 200,\n  \"fields\": [\n    {\n      \"column\": \"num_rooms\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": -1,\n        \"max\": 4,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          2,\n          1,\n          -1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"num_people\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 0,\n        \"max\": 10,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          9,\n          6,\n          10\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"housearea\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 136.15977282216994,\n        \"min\": 478.33,\n        \"max\": 1166.71,\n        \"num_unique_values\": 200,\n        \"samples\": [\n          998.26,\n          549.72,\n          505.88\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"is_ac\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"is_tv\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"is_flat\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ave_monthly_income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10495.849579949467,\n        \"min\": -526.54,\n        \"max\": 51774.67,\n        \"num_unique_values\": 200,\n        \"samples\": [\n          13845.18,\n          41533.34\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"num_children\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 4,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"is_urban\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":68}]},{"cell_type":"code","source":["Y_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":458},"id":"msz8Gda8vcUI","executionInfo":{"status":"ok","timestamp":1725515554062,"user_tz":-330,"elapsed":397,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"c0bd2753-6cc1-49a1-a33b-f56afb5803eb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["507     486.971566\n","818     550.932923\n","452     879.022532\n","368     600.608466\n","242    1066.594425\n","          ...     \n","430     683.031477\n","874     529.752567\n","550     356.998517\n","608     376.452020\n","207     606.394156\n","Name: amount_paid, Length: 200, dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>amount_paid</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>507</th>\n","      <td>486.971566</td>\n","    </tr>\n","    <tr>\n","      <th>818</th>\n","      <td>550.932923</td>\n","    </tr>\n","    <tr>\n","      <th>452</th>\n","      <td>879.022532</td>\n","    </tr>\n","    <tr>\n","      <th>368</th>\n","      <td>600.608466</td>\n","    </tr>\n","    <tr>\n","      <th>242</th>\n","      <td>1066.594425</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>430</th>\n","      <td>683.031477</td>\n","    </tr>\n","    <tr>\n","      <th>874</th>\n","      <td>529.752567</td>\n","    </tr>\n","    <tr>\n","      <th>550</th>\n","      <td>356.998517</td>\n","    </tr>\n","    <tr>\n","      <th>608</th>\n","      <td>376.452020</td>\n","    </tr>\n","    <tr>\n","      <th>207</th>\n","      <td>606.394156</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>200 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":69}]}]}