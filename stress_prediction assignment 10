{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNs6Fn2GLYVT3nL1CPbflpH"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":32,"metadata":{"id":"FrzxvRtr1J0f","executionInfo":{"status":"ok","timestamp":1726122660248,"user_tz":-330,"elapsed":575,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.model_selection import train_test_split\n","from sklearn import metrics"]},{"cell_type":"code","source":["from google.colab import files\n","files.upload()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":130},"id":"BruWHInt38_W","executionInfo":{"status":"ok","timestamp":1726121802002,"user_tz":-330,"elapsed":14985,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"07469807-167a-4bad-84d2-c00304c8bf66"},"execution_count":3,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-b79c15a8-1ae0-4011-8073-19bf9903915e\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-b79c15a8-1ae0-4011-8073-19bf9903915e\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script>// Copyright 2017 Google LLC\n","//\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n","// you may not use this file except in compliance with the License.\n","// You may obtain a copy of the License at\n","//\n","//      http://www.apache.org/licenses/LICENSE-2.0\n","//\n","// Unless required by applicable law or agreed to in writing, software\n","// distributed under the License is distributed on an \"AS IS\" BASIS,\n","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","// See the License for the specific language governing permissions and\n","// limitations under the License.\n","\n","/**\n"," * @fileoverview Helpers for google.colab Python module.\n"," */\n","(function(scope) {\n","function span(text, styleAttributes = {}) {\n","  const element = document.createElement('span');\n","  element.textContent = text;\n","  for (const key of Object.keys(styleAttributes)) {\n","    element.style[key] = styleAttributes[key];\n","  }\n","  return element;\n","}\n","\n","// Max number of bytes which will be uploaded at a time.\n","const MAX_PAYLOAD_SIZE = 100 * 1024;\n","\n","function _uploadFiles(inputId, outputId) {\n","  const steps = uploadFilesStep(inputId, outputId);\n","  const outputElement = document.getElementById(outputId);\n","  // Cache steps on the outputElement to make it available for the next call\n","  // to uploadFilesContinue from Python.\n","  outputElement.steps = steps;\n","\n","  return _uploadFilesContinue(outputId);\n","}\n","\n","// This is roughly an async generator (not supported in the browser yet),\n","// where there are multiple asynchronous steps and the Python side is going\n","// to poll for completion of each step.\n","// This uses a Promise to block the python side on completion of each step,\n","// then passes the result of the previous step as the input to the next step.\n","function _uploadFilesContinue(outputId) {\n","  const outputElement = document.getElementById(outputId);\n","  const steps = outputElement.steps;\n","\n","  const next = steps.next(outputElement.lastPromiseValue);\n","  return Promise.resolve(next.value.promise).then((value) => {\n","    // Cache the last promise value to make it available to the next\n","    // step of the generator.\n","    outputElement.lastPromiseValue = value;\n","    return next.value.response;\n","  });\n","}\n","\n","/**\n"," * Generator function which is called between each async step of the upload\n"," * process.\n"," * @param {string} inputId Element ID of the input file picker element.\n"," * @param {string} outputId Element ID of the output display.\n"," * @return {!Iterable<!Object>} Iterable of next steps.\n"," */\n","function* uploadFilesStep(inputId, outputId) {\n","  const inputElement = document.getElementById(inputId);\n","  inputElement.disabled = false;\n","\n","  const outputElement = document.getElementById(outputId);\n","  outputElement.innerHTML = '';\n","\n","  const pickedPromise = new Promise((resolve) => {\n","    inputElement.addEventListener('change', (e) => {\n","      resolve(e.target.files);\n","    });\n","  });\n","\n","  const cancel = document.createElement('button');\n","  inputElement.parentElement.appendChild(cancel);\n","  cancel.textContent = 'Cancel upload';\n","  const cancelPromise = new Promise((resolve) => {\n","    cancel.onclick = () => {\n","      resolve(null);\n","    };\n","  });\n","\n","  // Wait for the user to pick the files.\n","  const files = yield {\n","    promise: Promise.race([pickedPromise, cancelPromise]),\n","    response: {\n","      action: 'starting',\n","    }\n","  };\n","\n","  cancel.remove();\n","\n","  // Disable the input element since further picks are not allowed.\n","  inputElement.disabled = true;\n","\n","  if (!files) {\n","    return {\n","      response: {\n","        action: 'complete',\n","      }\n","    };\n","  }\n","\n","  for (const file of files) {\n","    const li = document.createElement('li');\n","    li.append(span(file.name, {fontWeight: 'bold'}));\n","    li.append(span(\n","        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n","        `last modified: ${\n","            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n","                                    'n/a'} - `));\n","    const percent = span('0% done');\n","    li.appendChild(percent);\n","\n","    outputElement.appendChild(li);\n","\n","    const fileDataPromise = new Promise((resolve) => {\n","      const reader = new FileReader();\n","      reader.onload = (e) => {\n","        resolve(e.target.result);\n","      };\n","      reader.readAsArrayBuffer(file);\n","    });\n","    // Wait for the data to be ready.\n","    let fileData = yield {\n","      promise: fileDataPromise,\n","      response: {\n","        action: 'continue',\n","      }\n","    };\n","\n","    // Use a chunked sending to avoid message size limits. See b/62115660.\n","    let position = 0;\n","    do {\n","      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n","      const chunk = new Uint8Array(fileData, position, length);\n","      position += length;\n","\n","      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n","      yield {\n","        response: {\n","          action: 'append',\n","          file: file.name,\n","          data: base64,\n","        },\n","      };\n","\n","      let percentDone = fileData.byteLength === 0 ?\n","          100 :\n","          Math.round((position / fileData.byteLength) * 100);\n","      percent.textContent = `${percentDone}% done`;\n","\n","    } while (position < fileData.byteLength);\n","  }\n","\n","  // All done.\n","  yield {\n","    response: {\n","      action: 'complete',\n","    }\n","  };\n","}\n","\n","scope.google = scope.google || {};\n","scope.google.colab = scope.google.colab || {};\n","scope.google.colab._files = {\n","  _uploadFiles,\n","  _uploadFilesContinue,\n","};\n","})(self);\n","</script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving Stress-Lysis.csv to Stress-Lysis.csv\n"]},{"output_type":"execute_result","data":{"text/plain":["{'Stress-Lysis.csv': b'Humidity,Temperature,Step count,Stress Level\\r\\n21.33,90.33,123,1\\r\\n21.41,90.41,93,1\\r\\n27.12,96.12,196,2\\r\\n27.64,96.64,177,2\\r\\n10.87,79.87,87,0\\r\\n11.31,80.31,40,0\\r\\n18.16,87.16,88,1\\r\\n28.2,97.2,162,2\\r\\n14.25,83.25,61,0\\r\\n26.13,95.13,168,2\\r\\n23.61,92.61,200,2\\r\\n19.37,88.37,117,1\\r\\n29.08,98.08,179,2\\r\\n17.83,86.83,55,1\\r\\n28.06,97.06,148,2\\r\\n19.43,88.43,123,1\\r\\n26.85,95.85,169,2\\r\\n26.51,95.51,135,2\\r\\n29.49,98.49,149,2\\r\\n20.94,89.94,122,1\\r\\n28.6,97.6,131,2\\r\\n18.62,87.62,43,1\\r\\n14.43,83.43,79,0\\r\\n26.69,95.69,153,2\\r\\n15.67,84.67,21,1\\r\\n26.63,95.63,147,2\\r\\n17.58,86.58,30,1\\r\\n21.53,90.53,105,1\\r\\n20.99,89.99,127,1\\r\\n23.94,92.94,162,2\\r\\n19.06,88.06,87,1\\r\\n25.46,94.46,172,2\\r\\n29.19,98.19,190,2\\r\\n28.73,97.73,144,2\\r\\n21.69,90.69,121,1\\r\\n23.66,92.66,134,2\\r\\n19.51,88.51,93,1\\r\\n14.84,83.84,29,0\\r\\n15.34,84.34,79,1\\r\\n20.76,89.76,104,1\\r\\n28.08,97.08,150,2\\r\\n14.23,83.23,59,0\\r\\n20,89,104,1\\r\\n13.13,82.13,40,0\\r\\n21.96,90.96,110,1\\r\\n24.84,93.84,181,2\\r\\n15.14,84.14,59,1\\r\\n13.89,82.89,25,0\\r\\n21.77,90.77,129,1\\r\\n20.43,89.43,109,1\\r\\n24.82,93.82,179,2\\r\\n23.89,92.89,157,2\\r\\n13.06,82.06,33,0\\r\\n19.94,88.94,98,1\\r\\n24.06,93.06,174,2\\r\\n19.56,88.56,98,1\\r\\n17.39,86.39,11,1\\r\\n13.03,82.03,30,0\\r\\n21.8,90.8,94,1\\r\\n23.24,92.24,163,2\\r\\n12.26,81.26,44,0\\r\\n18.37,87.37,18,1\\r\\n23.46,92.46,185,2\\r\\n20.05,89.05,109,1\\r\\n19.07,88.07,88,1\\r\\n24.52,93.52,149,2\\r\\n21.67,90.67,119,1\\r\\n12.06,81.06,24,0\\r\\n21.86,90.86,100,1\\r\\n23.09,92.09,148,2\\r\\n25.74,94.74,200,2\\r\\n22.63,91.63,109,1\\r\\n21.12,90.12,102,1\\r\\n25.47,94.47,173,2\\r\\n23.56,92.56,195,2\\r\\n21,90,128,1\\r\\n25.81,94.81,136,2\\r\\n25.76,94.76,131,2\\r\\n22.66,91.66,112,1\\r\\n26.78,95.78,162,2\\r\\n22.77,91.77,123,1\\r\\n20.66,89.66,94,1\\r\\n16.75,85.75,38,1\\r\\n26.87,95.87,171,2\\r\\n27.84,96.84,197,2\\r\\n25.34,94.34,160,2\\r\\n12.79,81.79,6,0\\r\\n27.92,96.92,134,2\\r\\n11.33,80.33,42,0\\r\\n16.47,85.47,10,1\\r\\n29.74,98.74,174,2\\r\\n20.89,89.89,117,1\\r\\n27.96,96.96,138,2\\r\\n24.53,93.53,150,2\\r\\n28.44,97.44,186,2\\r\\n11.89,80.89,7,0\\r\\n25.89,94.89,144,2\\r\\n29.5,98.5,150,2\\r\\n21.38,90.38,128,1\\r\\n14.18,83.18,54,0\\r\\n19,88,81,1\\r\\n28.68,97.68,139,2\\r\\n12.54,81.54,72,0\\r\\n21.26,90.26,116,1\\r\\n11.77,80.77,86,0\\r\\n20.44,89.44,110,1\\r\\n22.59,91.59,105,1\\r\\n10.31,79.31,31,0\\r\\n10.6,79.6,60,0\\r\\n17.5,86.5,22,1\\r\\n24.08,93.08,176,2\\r\\n22.64,91.64,110,1\\r\\n18.53,87.53,34,1\\r\\n28.95,97.95,166,2\\r\\n25.78,94.78,133,2\\r\\n17.24,86.24,87,1\\r\\n24,93,168,2\\r\\n25.63,94.63,189,2\\r\\n20.73,89.73,101,1\\r\\n29.06,98.06,177,2\\r\\n19.84,88.84,126,1\\r\\n17.21,86.21,84,1\\r\\n18.65,87.65,46,1\\r\\n21.68,90.68,120,1\\r\\n12.58,81.58,76,0\\r\\n13.22,82.22,49,0\\r\\n22.42,91.42,118,1\\r\\n27.8,96.8,193,2\\r\\n29.79,98.79,179,2\\r\\n11.92,80.92,10,0\\r\\n13.28,82.28,55,0\\r\\n10.4,79.4,40,0\\r\\n20.11,89.11,115,1\\r\\n13.46,82.46,73,0\\r\\n13.95,82.95,31,0\\r\\n27.86,96.86,199,2\\r\\n20.63,89.63,129,1\\r\\n18.07,87.07,79,1\\r\\n19.97,88.97,101,1\\r\\n14.16,83.16,52,0\\r\\n28.45,97.45,187,2\\r\\n28.36,97.36,178,2\\r\\n29.3,98.3,130,2\\r\\n19.26,88.26,106,1\\r\\n29.78,98.78,178,2\\r\\n23.93,92.93,161,2\\r\\n28.62,97.62,133,2\\r\\n25.19,94.19,145,2\\r\\n23.78,92.78,146,2\\r\\n28.22,97.22,164,2\\r\\n21.39,90.39,129,1\\r\\n17.88,86.88,60,1\\r\\n29.94,98.94,194,2\\r\\n21.05,90.05,95,1\\r\\n29.89,98.89,189,2\\r\\n28.84,97.84,155,2\\r\\n26.06,95.06,161,2\\r\\n24.4,93.4,137,2\\r\\n16.79,85.79,42,1\\r\\n26.03,95.03,158,2\\r\\n26.38,95.38,193,2\\r\\n10.46,79.46,46,0\\r\\n21.97,90.97,111,1\\r\\n26.32,95.32,187,2\\r\\n26.46,95.46,130,2\\r\\n12.74,81.74,1,0\\r\\n29.37,98.37,137,2\\r\\n14.83,83.83,28,0\\r\\n16.88,85.88,51,1\\r\\n10.92,79.92,1,0\\r\\n11.45,80.45,54,0\\r\\n14.35,83.35,71,0\\r\\n15.21,84.21,66,1\\r\\n27.14,96.14,198,2\\r\\n16.54,85.54,17,1\\r\\n11.84,80.84,2,0\\r\\n17.56,86.56,28,1\\r\\n28.87,97.87,158,2\\r\\n11.88,80.88,6,0\\r\\n13.62,82.62,89,0\\r\\n15.86,84.86,40,1\\r\\n29.91,98.91,191,2\\r\\n25.87,94.87,142,2\\r\\n24.62,93.62,159,2\\r\\n23.82,92.82,150,2\\r\\n26.64,95.64,148,2\\r\\n29.86,98.86,186,2\\r\\n28.25,97.25,167,2\\r\\n16.82,85.82,45,1\\r\\n26.61,95.61,145,2\\r\\n21.27,90.27,117,1\\r\\n24.78,93.78,175,2\\r\\n27.43,96.43,156,2\\r\\n16.56,85.56,19,1\\r\\n13,82,27,0\\r\\n19.14,88.14,94,1\\r\\n16.04,85.04,58,1\\r\\n25.96,94.96,151,2\\r\\n25.41,94.41,167,2\\r\\n22.71,91.71,117,1\\r\\n14.59,83.59,4,0\\r\\n14.77,83.77,22,0\\r\\n14.07,83.07,43,0\\r\\n11.09,80.09,18,0\\r\\n10.52,79.52,52,0\\r\\n22.06,91.06,120,1\\r\\n17.77,86.77,49,1\\r\\n12.56,81.56,74,0\\r\\n20.98,89.98,126,1\\r\\n27.17,96.17,130,2\\r\\n10.65,79.65,65,0\\r\\n11.32,80.32,41,0\\r\\n22.09,91.09,123,1\\r\\n20.93,89.93,121,1\\r\\n14.92,83.92,37,0\\r\\n21.98,90.98,112,1\\r\\n21.78,90.78,92,1\\r\\n10.33,79.33,33,0\\r\\n12.61,81.61,79,0\\r\\n19.09,88.09,90,1\\r\\n26.19,95.19,174,2\\r\\n27.11,96.11,195,2\\r\\n23.59,92.59,198,2\\r\\n27.26,96.26,139,2\\r\\n29.35,98.35,135,2\\r\\n19.99,88.99,103,1\\r\\n22.18,91.18,94,1\\r\\n14.36,83.36,72,0\\r\\n12.41,81.41,59,0\\r\\n11.48,80.48,57,0\\r\\n15.43,84.43,88,1\\r\\n18.93,87.93,74,1\\r\\n14.42,83.42,78,0\\r\\n18.74,87.74,55,1\\r\\n10.21,79.21,21,0\\r\\n26.98,95.98,182,2\\r\\n22.41,91.41,117,1\\r\\n21.74,90.74,126,1\\r\\n17.44,86.44,16,1\\r\\n27.99,96.99,141,2\\r\\n25.44,94.44,170,2\\r\\n16.93,85.93,56,1\\r\\n11.1,80.1,19,0\\r\\n25.16,94.16,142,2\\r\\n17.53,86.53,25,1\\r\\n13.58,82.58,85,0\\r\\n12.72,81.72,90,0\\r\\n27.69,96.69,182,2\\r\\n26.24,95.24,179,2\\r\\n23.67,92.67,135,2\\r\\n16.01,85.01,55,1\\r\\n22.04,91.04,118,1\\r\\n25.32,94.32,158,2\\r\\n15.97,84.97,51,1\\r\\n13.94,82.94,30,0\\r\\n22.39,91.39,115,1\\r\\n11.55,80.55,64,0\\r\\n10.19,79.19,19,0\\r\\n14.28,83.28,64,0\\r\\n24.01,93.01,169,2\\r\\n19.57,88.57,99,1\\r\\n21.92,90.92,106,1\\r\\n12.86,81.86,13,0\\r\\n20.09,89.09,113,1\\r\\n19.45,88.45,125,1\\r\\n21.15,90.15,105,1\\r\\n18.79,87.79,60,1\\r\\n20.31,89.31,97,1\\r\\n10.85,79.85,85,0\\r\\n12.49,81.49,67,0\\r\\n27.23,96.23,136,2\\r\\n20.1,89.1,114,1\\r\\n11.87,80.87,5,0\\r\\n29.11,98.11,182,2\\r\\n11.9,80.9,8,0\\r\\n21.17,90.17,107,1\\r\\n10.2,79.2,20,0\\r\\n11.52,80.52,61,0\\r\\n22.62,91.62,108,1\\r\\n24.7,93.7,167,2\\r\\n23.38,92.38,177,2\\r\\n23.44,92.44,183,2\\r\\n26.86,95.86,170,2\\r\\n25.01,94.01,198,2\\r\\n26.55,95.55,139,2\\r\\n19.34,88.34,114,1\\r\\n27.13,96.13,197,2\\r\\n23.52,92.52,191,2\\r\\n11.02,80.02,11,0\\r\\n28.26,97.26,168,2\\r\\n22,91,114,1\\r\\n10.1,79.1,10,0\\r\\n12.63,81.63,81,0\\r\\n25.14,94.14,140,2\\r\\n20.46,89.46,112,1\\r\\n11.54,80.54,63,0\\r\\n14.22,83.22,58,0\\r\\n12.55,81.55,73,0\\r\\n11.05,80.05,14,0\\r\\n18.87,87.87,68,1\\r\\n20.08,89.08,112,1\\r\\n20.24,89.24,128,1\\r\\n24.85,93.85,182,2\\r\\n18.47,87.47,28,1\\r\\n17.32,86.32,4,1\\r\\n26.21,95.21,176,2\\r\\n23.32,92.32,171,2\\r\\n16.2,85.2,74,1\\r\\n26.83,95.83,167,2\\r\\n29.17,98.17,188,2\\r\\n13.16,82.16,43,0\\r\\n20.68,89.68,96,1\\r\\n24.23,93.23,191,2\\r\\n15.99,84.99,53,1\\r\\n23.18,92.18,157,2\\r\\n11.66,80.66,75,0\\r\\n29.77,98.77,177,2\\r\\n11.21,80.21,30,0\\r\\n14.58,83.58,3,0\\r\\n10.3,79.3,30,0\\r\\n10.81,79.81,81,0\\r\\n28.09,97.09,151,2\\r\\n18.71,87.71,52,1\\r\\n22.56,91.56,102,1\\r\\n12.15,81.15,33,0\\r\\n17.85,86.85,57,1\\r\\n25.21,94.21,147,2\\r\\n28.66,97.66,137,2\\r\\n18.7,87.7,51,1\\r\\n15.65,84.65,19,1\\r\\n27.7,96.7,183,2\\r\\n26.14,95.14,169,2\\r\\n15.07,84.07,52,1\\r\\n15.27,84.27,72,1\\r\\n28.14,97.14,156,2\\r\\n24.25,93.25,193,2\\r\\n23.77,92.77,145,2\\r\\n28.7,97.7,141,2\\r\\n17.42,86.42,14,1\\r\\n27.36,96.36,149,2\\r\\n24.88,93.88,185,2\\r\\n10.23,79.23,23,0\\r\\n14.21,83.21,57,0\\r\\n10.08,79.08,8,0\\r\\n28.49,97.49,191,2\\r\\n22.13,91.13,127,1\\r\\n18.33,87.33,14,1\\r\\n19.32,88.32,112,1\\r\\n21.58,90.58,110,1\\r\\n21.55,90.55,107,1\\r\\n23.26,92.26,165,2\\r\\n15.79,84.79,33,1\\r\\n16.73,85.73,36,1\\r\\n21.63,90.63,115,1\\r\\n18.78,87.78,59,1\\r\\n19.4,88.4,120,1\\r\\n13.08,82.08,35,0\\r\\n25.26,94.26,152,2\\r\\n11.67,80.67,76,0\\r\\n12.4,81.4,58,0\\r\\n17.84,86.84,56,1\\r\\n29.41,98.41,141,2\\r\\n15.24,84.24,69,1\\r\\n25.43,94.43,169,2\\r\\n25.66,94.66,192,2\\r\\n23.79,92.79,147,2\\r\\n17.06,86.06,69,1\\r\\n29.29,98.29,200,2\\r\\n24.39,93.39,136,2\\r\\n10.78,79.78,78,0\\r\\n17.48,86.48,20,1\\r\\n20.91,89.91,119,1\\r\\n19.85,88.85,127,1\\r\\n17.15,86.15,78,1\\r\\n28.29,97.29,171,2\\r\\n17.38,86.38,10,1\\r\\n14.31,83.31,67,0\\r\\n23.27,92.27,166,2\\r\\n20.22,89.22,126,1\\r\\n25.97,94.97,152,2\\r\\n14.11,83.11,47,0\\r\\n18.32,87.32,13,1\\r\\n19.19,88.19,99,1\\r\\n24.64,93.64,161,2\\r\\n22.82,91.82,128,1\\r\\n23.74,92.74,142,2\\r\\n11.25,80.25,34,0\\r\\n29.58,98.58,158,2\\r\\n16.14,85.14,68,1\\r\\n11.59,80.59,68,0\\r\\n10.24,79.24,24,0\\r\\n27.81,96.81,194,2\\r\\n12.11,81.11,29,0\\r\\n17.89,86.89,61,1\\r\\n16.65,85.65,28,1\\r\\n16.25,85.25,79,1\\r\\n15.44,84.44,89,1\\r\\n14.05,83.05,41,0\\r\\n10.77,79.77,77,0\\r\\n20.47,89.47,113,1\\r\\n26.26,95.26,181,2\\r\\n28.13,97.13,155,2\\r\\n20.33,89.33,99,1\\r\\n27.02,96.02,186,2\\r\\n22.08,91.08,122,1\\r\\n21.75,90.75,127,1\\r\\n26.81,95.81,165,2\\r\\n15.72,84.72,26,1\\r\\n28.63,97.63,134,2\\r\\n19.68,88.68,110,1\\r\\n20.9,89.9,118,1\\r\\n12.32,81.32,50,0\\r\\n10.36,79.36,36,0\\r\\n21.31,90.31,121,1\\r\\n21.51,90.51,103,1\\r\\n14.99,83.99,44,0\\r\\n21.71,90.71,123,1\\r\\n21.48,90.48,100,1\\r\\n14.44,83.44,80,0\\r\\n18.68,87.68,49,1\\r\\n29.68,98.68,168,2\\r\\n24.97,93.97,194,2\\r\\n29.92,98.92,192,2\\r\\n16.38,85.38,1,1\\r\\n27.39,96.39,152,2\\r\\n12.02,81.02,20,0\\r\\n11.38,80.38,47,0\\r\\n20.12,89.12,116,1\\r\\n14.09,83.09,45,0\\r\\n24.35,93.35,132,2\\r\\n28.97,97.97,168,2\\r\\n29.02,98.02,173,2\\r\\n28.28,97.28,170,2\\r\\n16.84,85.84,47,1\\r\\n26.43,95.43,198,2\\r\\n29.48,98.48,148,2\\r\\n17.41,86.41,13,1\\r\\n25.04,94.04,130,2\\r\\n15.51,84.51,5,1\\r\\n13.24,82.24,51,0\\r\\n16.76,85.76,39,1\\r\\n24.28,93.28,196,2\\r\\n22.73,91.73,119,1\\r\\n16.28,85.28,82,1\\r\\n14.71,83.71,16,0\\r\\n19.21,88.21,101,1\\r\\n24.24,93.24,192,2\\r\\n14.88,83.88,33,0\\r\\n18.5,87.5,31,1\\r\\n15.96,84.96,50,1\\r\\n10.44,79.44,44,0\\r\\n25.73,94.73,199,2\\r\\n27.77,96.77,190,2\\r\\n10.29,79.29,29,0\\r\\n18.72,87.72,53,1\\r\\n20.48,89.48,114,1\\r\\n24.33,93.33,130,2\\r\\n15.42,84.42,87,1\\r\\n28.05,97.05,147,2\\r\\n17.72,86.72,44,1\\r\\n12.22,81.22,40,0\\r\\n18.52,87.52,33,1\\r\\n25.06,94.06,132,2\\r\\n10.34,79.34,34,0\\r\\n26.35,95.35,190,2\\r\\n10.95,79.95,4,0\\r\\n15.64,84.64,18,1\\r\\n10.48,79.48,48,0\\r\\n12.25,81.25,43,0\\r\\n14.73,83.73,18,0\\r\\n20.97,89.97,125,1\\r\\n23.3,92.3,169,2\\r\\n21.11,90.11,101,1\\r\\n19.36,88.36,116,1\\r\\n25.17,94.17,143,2\\r\\n10.96,79.96,5,0\\r\\n27.49,96.49,162,2\\r\\n29.63,98.63,163,2\\r\\n27.87,96.87,200,2\\r\\n17.63,86.63,35,1\\r\\n29.2,98.2,191,2\\r\\n24.43,93.43,140,2\\r\\n20.07,89.07,111,1\\r\\n28.3,97.3,172,2\\r\\n14.1,83.1,46,0\\r\\n23.96,92.96,164,2\\r\\n13.8,82.8,16,0\\r\\n11.24,80.24,33,0\\r\\n25.83,94.83,138,2\\r\\n29.09,98.09,180,2\\r\\n19.65,88.65,107,1\\r\\n15.12,84.12,57,1\\r\\n13.48,82.48,75,0\\r\\n29.53,98.53,153,2\\r\\n22.65,91.65,111,1\\r\\n22.38,91.38,114,1\\r\\n27.82,96.82,195,2\\r\\n14.96,83.96,41,0\\r\\n11.29,80.29,38,0\\r\\n19.22,88.22,102,1\\r\\n10.82,79.82,82,0\\r\\n26.05,95.05,160,2\\r\\n23.68,92.68,136,2\\r\\n28.64,97.64,135,2\\r\\n13.72,82.72,8,0\\r\\n19.05,88.05,86,1\\r\\n15.02,84.02,47,1\\r\\n20.23,89.23,127,1\\r\\n10.63,79.63,63,0\\r\\n20.61,89.61,127,1\\r\\n11.07,80.07,16,0\\r\\n16.97,85.97,60,1\\r\\n23.15,92.15,154,2\\r\\n28.07,97.07,149,2\\r\\n13.81,82.81,17,0\\r\\n16.68,85.68,31,1\\r\\n27.95,96.95,137,2\\r\\n14.9,83.9,35,0\\r\\n17.87,86.87,59,1\\r\\n22.43,91.43,119,1\\r\\n13.36,82.36,63,0\\r\\n17.34,86.34,6,1\\r\\n17.29,86.29,1,1\\r\\n15.87,84.87,41,1\\r\\n10.39,79.39,39,0\\r\\n22.61,91.61,107,1\\r\\n23.33,92.33,172,2\\r\\n29.12,98.12,183,2\\r\\n26.27,95.27,182,2\\r\\n25.52,94.52,178,2\\r\\n19.3,88.3,110,1\\r\\n19.72,88.72,114,1\\r\\n16.57,85.57,20,1\\r\\n23.07,92.07,146,2\\r\\n12.03,81.03,21,0\\r\\n11.78,80.78,87,0\\r\\n28.19,97.19,161,2\\r\\n26.8,95.8,164,2\\r\\n16.3,85.3,84,1\\r\\n20.87,89.87,115,1\\r\\n12.13,81.13,31,0\\r\\n18.69,87.69,50,1\\r\\n13.83,82.83,19,0\\r\\n17.27,86.27,90,1\\r\\n18.86,87.86,67,1\\r\\n24.13,93.13,181,2\\r\\n16.39,85.39,2,1\\r\\n25.39,94.39,165,2\\r\\n15.68,84.68,22,1\\r\\n27.76,96.76,189,2\\r\\n17.68,86.68,40,1\\r\\n16.05,85.05,59,1\\r\\n12.62,81.62,80,0\\r\\n22.11,91.11,125,1\\r\\n14.51,83.51,87,0\\r\\n21.61,90.61,113,1\\r\\n22.54,91.54,100,1\\r\\n11.13,80.13,22,0\\r\\n15.81,84.81,35,1\\r\\n23.06,92.06,145,2\\r\\n16.98,85.98,61,1\\r\\n22.22,91.22,98,1\\r\\n13.67,82.67,3,0\\r\\n11.46,80.46,55,0\\r\\n13.1,82.1,37,0\\r\\n24.66,93.66,163,2\\r\\n10.28,79.28,28,0\\r\\n11.98,80.98,16,0\\r\\n26.28,95.28,183,2\\r\\n20.65,89.65,93,1\\r\\n23.45,92.45,184,2\\r\\n19.91,88.91,95,1\\r\\n24.21,93.21,189,2\\r\\n13.39,82.39,66,0\\r\\n28.77,97.77,148,2\\r\\n18.34,87.34,15,1\\r\\n26.48,95.48,132,2\\r\\n27.03,96.03,187,2\\r\\n16.69,85.69,32,1\\r\\n25.42,94.42,168,2\\r\\n17.08,86.08,71,1\\r\\n28.27,97.27,169,2\\r\\n22.05,91.05,119,1\\r\\n24.91,93.91,188,2\\r\\n16.95,85.95,58,1\\r\\n22.89,91.89,127,1\\r\\n24.98,93.98,195,2\\r\\n29.84,98.84,184,2\\r\\n25.09,94.09,135,2\\r\\n22.49,91.49,125,1\\r\\n29.87,98.87,187,2\\r\\n11.64,80.64,73,0\\r\\n11.16,80.16,25,0\\r\\n18.13,87.13,85,1\\r\\n10.03,79.03,3,0\\r\\n11.81,80.81,90,0\\r\\n24.96,93.96,193,2\\r\\n23.63,92.63,131,2\\r\\n27.29,96.29,142,2\\r\\n10.66,79.66,66,0\\r\\n18.02,87.02,74,1\\r\\n12.76,81.76,3,0\\r\\n14.66,83.66,11,0\\r\\n29.36,98.36,136,2\\r\\n24.47,93.47,144,2\\r\\n16.44,85.44,7,1\\r\\n16.09,85.09,63,1\\r\\n25.77,94.77,132,2\\r\\n29.33,98.33,133,2\\r\\n10.42,79.42,42,0\\r\\n25.23,94.23,149,2\\r\\n29.21,98.21,192,2\\r\\n23.53,92.53,192,2\\r\\n20.72,89.72,100,1\\r\\n19.81,88.81,123,1\\r\\n13.41,82.41,68,0\\r\\n29.51,98.51,151,2\\r\\n25.79,94.79,134,2\\r\\n17.66,86.66,38,1\\r\\n11.12,80.12,21,0\\r\\n17.52,86.52,24,1\\r\\n11.69,80.69,78,0\\r\\n25.56,94.56,182,2\\r\\n18,87,72,1\\r\\n17.46,86.46,18,1\\r\\n29.24,98.24,195,2\\r\\n19.87,88.87,129,1\\r\\n20.59,89.59,125,1\\r\\n20.95,89.95,123,1\\r\\n11.95,80.95,13,0\\r\\n13.02,82.02,29,0\\r\\n12.48,81.48,66,0\\r\\n29.57,98.57,157,2\\r\\n19.82,88.82,124,1\\r\\n17.31,86.31,3,1\\r\\n11.93,80.93,11,0\\r\\n25.99,94.99,154,2\\r\\n18.8,87.8,61,1\\r\\n16.24,85.24,78,1\\r\\n19.17,88.17,97,1\\r\\n28.92,97.92,163,2\\r\\n11.19,80.19,28,0\\r\\n28.99,97.99,170,2\\r\\n21.54,90.54,106,1\\r\\n27.01,96.01,185,2\\r\\n16.22,85.22,76,1\\r\\n11.94,80.94,12,0\\r\\n24.94,93.94,191,2\\r\\n22.32,91.32,108,1\\r\\n27.68,96.68,181,2\\r\\n29.88,98.88,188,2\\r\\n26.33,95.33,188,2\\r\\n13.21,82.21,48,0\\r\\n27.09,96.09,193,2\\r\\n24.18,93.18,186,2\\r\\n27.41,96.41,154,2\\r\\n14.89,83.89,34,0\\r\\n21.1,90.1,100,1\\r\\n23.58,92.58,197,2\\r\\n13.99,82.99,35,0\\r\\n20.75,89.75,103,1\\r\\n27.08,96.08,192,2\\r\\n21.37,90.37,127,1\\r\\n11.23,80.23,32,0\\r\\n21.23,90.23,113,1\\r\\n25.13,94.13,139,2\\r\\n15.74,84.74,28,1\\r\\n10.11,79.11,11,0\\r\\n20.17,89.17,121,1\\r\\n10.57,79.57,57,0\\r\\n22.53,91.53,129,1\\r\\n15.08,84.08,53,1\\r\\n12.39,81.39,57,0\\r\\n15.56,84.56,10,1\\r\\n25.61,94.61,187,2\\r\\n11.03,80.03,12,0\\r\\n14.62,83.62,7,0\\r\\n21.79,90.79,93,1\\r\\n15.66,84.66,20,1\\r\\n10.99,79.99,8,0\\r\\n28.18,97.18,160,2\\r\\n17.12,86.12,75,1\\r\\n16.96,85.96,59,1\\r\\n22.76,91.76,122,1\\r\\n18.14,87.14,86,1\\r\\n14.19,83.19,55,0\\r\\n20.7,89.7,98,1\\r\\n17.67,86.67,39,1\\r\\n13.73,82.73,9,0\\r\\n20.71,89.71,99,1\\r\\n13.27,82.27,54,0\\r\\n23.39,92.39,178,2\\r\\n11.44,80.44,53,0\\r\\n26.15,95.15,170,2\\r\\n14.68,83.68,13,0\\r\\n23.03,92.03,142,2\\r\\n22.3,91.3,106,1\\r\\n28.32,97.32,174,2\\r\\n28.4,97.4,182,2\\r\\n12.17,81.17,35,0\\r\\n18.04,87.04,76,1\\r\\n10.9,79.9,90,0\\r\\n12.12,81.12,30,0\\r\\n19.66,88.66,108,1\\r\\n20.88,89.88,116,1\\r\\n14.5,83.5,86,0\\r\\n12.51,81.51,69,0\\r\\n14.2,83.2,56,0\\r\\n11.79,80.79,88,0\\r\\n16.27,85.27,81,1\\r\\n22.31,91.31,107,1\\r\\n10.67,79.67,67,0\\r\\n13.07,82.07,34,0\\r\\n15.03,84.03,48,1\\r\\n23.31,92.31,170,2\\r\\n10.53,79.53,53,0\\r\\n28.52,97.52,194,2\\r\\n28.43,97.43,185,2\\r\\n10.49,79.49,49,0\\r\\n16.18,85.18,72,1\\r\\n22.52,91.52,128,1\\r\\n17.11,86.11,74,1\\r\\n13.55,82.55,82,0\\r\\n28.23,97.23,165,2\\r\\n26.2,95.2,175,2\\r\\n26.04,95.04,159,2\\r\\n25.59,94.59,185,2\\r\\n25.8,94.8,135,2\\r\\n23.69,92.69,137,2\\r\\n15.41,84.41,86,1\\r\\n19.67,88.67,109,1\\r\\n21.07,90.07,97,1\\r\\n19.8,88.8,122,1\\r\\n25.33,94.33,159,2\\r\\n13.45,82.45,72,0\\r\\n21.19,90.19,109,1\\r\\n14.67,83.67,12,0\\r\\n22.48,91.48,124,1\\r\\n29.13,98.13,184,2\\r\\n17.71,86.71,43,1\\r\\n12.42,81.42,60,0\\r\\n11.97,80.97,15,0\\r\\n12.93,81.93,20,0\\r\\n28.76,97.76,147,2\\r\\n25.27,94.27,153,2\\r\\n24.2,93.2,188,2\\r\\n10.05,79.05,5,0\\r\\n14.6,83.6,5,0\\r\\n25.86,94.86,141,2\\r\\n22.7,91.7,116,1\\r\\n17.75,86.75,47,1\\r\\n18.27,87.27,8,1\\r\\n28.61,97.61,132,2\\r\\n11.61,80.61,70,0\\r\\n29.6,98.6,160,2\\r\\n26.12,95.12,167,2\\r\\n15.19,84.19,64,1\\r\\n18.48,87.48,29,1\\r\\n22.28,91.28,104,1\\r\\n11,80,9,0\\r\\n11.26,80.26,35,0\\r\\n19.77,88.77,119,1\\r\\n23.23,92.23,162,2\\r\\n18.66,87.66,47,1\\r\\n21.5,90.5,102,1\\r\\n12.83,81.83,10,0\\r\\n24.9,93.9,187,2\\r\\n27.46,96.46,159,2\\r\\n29.56,98.56,156,2\\r\\n19.63,88.63,105,1\\r\\n22.44,91.44,120,1\\r\\n13.74,82.74,10,0\\r\\n26.4,95.4,195,2\\r\\n19.62,88.62,104,1\\r\\n29.04,98.04,175,2\\r\\n20.62,89.62,128,1\\r\\n12.38,81.38,56,0\\r\\n18.21,87.21,2,1\\r\\n21.64,90.64,116,1\\r\\n18.24,87.24,5,1\\r\\n10.35,79.35,35,0\\r\\n14.47,83.47,83,0\\r\\n21.16,90.16,106,1\\r\\n16.63,85.63,26,1\\r\\n23.11,92.11,150,2\\r\\n13.37,82.37,64,0\\r\\n14.8,83.8,25,0\\r\\n29.96,98.96,196,2\\r\\n17.62,86.62,34,1\\r\\n29.28,98.28,199,2\\r\\n17.97,86.97,69,1\\r\\n27.57,96.57,170,2\\r\\n24.27,93.27,195,2\\r\\n18.12,87.12,84,1\\r\\n23.02,92.02,141,2\\r\\n26.08,95.08,163,2\\r\\n20.04,89.04,108,1\\r\\n18.58,87.58,39,1\\r\\n13.76,82.76,12,0\\r\\n16.9,85.9,53,1\\r\\n27.62,96.62,175,2\\r\\n21.84,90.84,98,1\\r\\n26.97,95.97,181,2\\r\\n19.6,88.6,102,1\\r\\n26.47,95.47,131,2\\r\\n11.68,80.68,77,0\\r\\n18.59,87.59,40,1\\r\\n20.25,89.25,129,1\\r\\n17.17,86.17,80,1\\r\\n24.92,93.92,189,2\\r\\n23.87,92.87,155,2\\r\\n22.87,91.87,125,1\\r\\n17.6,86.6,32,1\\r\\n14.86,83.86,31,0\\r\\n19.71,88.71,113,1\\r\\n28.9,97.9,161,2\\r\\n18.92,87.92,73,1\\r\\n26.49,95.49,133,2\\r\\n19.02,88.02,83,1\\r\\n29.65,98.65,165,2\\r\\n27.55,96.55,168,2\\r\\n29.54,98.54,154,2\\r\\n24.58,93.58,155,2\\r\\n26.34,95.34,189,2\\r\\n18.94,87.94,75,1\\r\\n14.27,83.27,63,0\\r\\n28.82,97.82,153,2\\r\\n14.78,83.78,23,0\\r\\n15.77,84.77,31,1\\r\\n18.81,87.81,62,1\\r\\n12.44,81.44,62,0\\r\\n27.33,96.33,146,2\\r\\n24.63,93.63,160,2\\r\\n20.82,89.82,110,1\\r\\n19.98,88.98,102,1\\r\\n18.63,87.63,44,1\\r\\n20.06,89.06,110,1\\r\\n17.51,86.51,23,1\\r\\n28.21,97.21,163,2\\r\\n18.55,87.55,36,1\\r\\n20.28,89.28,94,1\\r\\n22.02,91.02,116,1\\r\\n29.52,98.52,152,2\\r\\n28.71,97.71,142,2\\r\\n10.83,79.83,83,0\\r\\n15.17,84.17,62,1\\r\\n12.1,81.1,28,0\\r\\n20.38,89.38,104,1\\r\\n26.57,95.57,141,2\\r\\n19.31,88.31,111,1\\r\\n13.64,82.64,0,0\\r\\n28.75,97.75,146,2\\r\\n26.65,95.65,149,2\\r\\n16.11,85.11,65,1\\r\\n26.29,95.29,184,2\\r\\n22.6,91.6,106,1\\r\\n27.32,96.32,145,2\\r\\n21.49,90.49,101,1\\r\\n19.5,88.5,92,1\\r\\n25.51,94.51,177,2\\r\\n25.38,94.38,164,2\\r\\n13.52,82.52,79,0\\r\\n21.25,90.25,115,1\\r\\n14.45,83.45,81,0\\r\\n11.28,80.28,37,0\\r\\n12.65,81.65,83,0\\r\\n10.18,79.18,18,0\\r\\n17.8,86.8,52,1\\r\\n14.53,83.53,89,0\\r\\n30,99,200,2\\r\\n13.96,82.96,32,0\\r\\n12.45,81.45,63,0\\r\\n21.56,90.56,108,1\\r\\n17.43,86.43,15,1\\r\\n16.43,85.43,6,1\\r\\n22.34,91.34,110,1\\r\\n15.61,84.61,15,1\\r\\n13.38,82.38,65,0\\r\\n11.62,80.62,71,0\\r\\n15.92,84.92,46,1\\r\\n12.95,81.95,22,0\\r\\n20.58,89.58,124,1\\r\\n23.08,92.08,147,2\\r\\n27.83,96.83,196,2\\r\\n28.11,97.11,153,2\\r\\n25.18,94.18,144,2\\r\\n29.71,98.71,171,2\\r\\n19.46,88.46,126,1\\r\\n23.05,92.05,144,2\\r\\n16.33,85.33,87,1\\r\\n12.24,81.24,42,0\\r\\n22.15,91.15,129,1\\r\\n19.74,88.74,116,1\\r\\n17.25,86.25,88,1\\r\\n26.84,95.84,168,2\\r\\n21.4,90.4,92,1\\r\\n28.91,97.91,162,2\\r\\n20.56,89.56,122,1\\r\\n25.91,94.91,146,2\\r\\n28.12,97.12,154,2\\r\\n27.73,96.73,186,2\\r\\n28.15,97.15,157,2\\r\\n18.3,87.3,11,1\\r\\n24.79,93.79,176,2\\r\\n25.07,94.07,133,2\\r\\n24.3,93.3,198,2\\r\\n15.32,84.32,77,1\\r\\n18.64,87.64,45,1\\r\\n21.81,90.81,95,1\\r\\n27.93,96.93,135,2\\r\\n14.79,83.79,24,0\\r\\n13.98,82.98,34,0\\r\\n15.95,84.95,49,1\\r\\n16,85,54,1\\r\\n12.34,81.34,52,0\\r\\n13.26,82.26,53,0\\r\\n19.04,88.04,85,1\\r\\n28.37,97.37,179,2\\r\\n10.69,79.69,69,0\\r\\n18.67,87.67,48,1\\r\\n20.15,89.15,119,1\\r\\n17.99,86.99,71,1\\r\\n25.57,94.57,183,2\\r\\n14.98,83.98,43,0\\r\\n15.71,84.71,25,1\\r\\n21.72,90.72,124,1\\r\\n10.76,79.76,76,0\\r\\n13.59,82.59,86,0\\r\\n19.75,88.75,117,1\\r\\n15.25,84.25,70,1\\r\\n17.26,86.26,89,1\\r\\n13.65,82.65,1,0\\r\\n10.54,79.54,54,0\\r\\n22.84,91.84,122,1\\r\\n15.01,84.01,46,1\\r\\n10.02,79.02,2,0\\r\\n13.11,82.11,38,0\\r\\n23.37,92.37,176,2\\r\\n16.59,85.59,22,1\\r\\n18.19,87.19,0,1\\r\\n13.14,82.14,41,0\\r\\n18.54,87.54,35,1\\r\\n17.33,86.33,5,1\\r\\n14.02,83.02,38,0\\r\\n24.57,93.57,154,2\\r\\n24.76,93.76,173,2\\r\\n15.93,84.93,47,1\\r\\n21.91,90.91,105,1\\r\\n19.78,88.78,120,1\\r\\n21.99,90.99,113,1\\r\\n20.74,89.74,102,1\\r\\n24.15,93.15,183,2\\r\\n25.1,94.1,136,2\\r\\n12.8,81.8,7,0\\r\\n27.38,96.38,151,2\\r\\n23.36,92.36,175,2\\r\\n22.36,91.36,112,1\\r\\n14.87,83.87,32,0\\r\\n23.5,92.5,189,2\\r\\n17.1,86.1,73,1\\r\\n16.48,85.48,11,1\\r\\n25.37,94.37,163,2\\r\\n11.34,80.34,43,0\\r\\n19.76,88.76,118,1\\r\\n26.99,95.99,183,2\\r\\n10.75,79.75,75,0\\r\\n17.94,86.94,66,1\\r\\n19.24,88.24,104,1\\r\\n14.03,83.03,39,0\\r\\n28.65,97.65,136,2\\r\\n17.76,86.76,48,1\\r\\n12.16,81.16,34,0\\r\\n29.9,98.9,190,2\\r\\n18.97,87.97,78,1\\r\\n25.94,94.94,149,2\\r\\n23.54,92.54,193,2\\r\\n12.33,81.33,51,0\\r\\n18.85,87.85,66,1\\r\\n20.4,89.4,106,1\\r\\n15.69,84.69,23,1\\r\\n28.17,97.17,159,2\\r\\n20.8,89.8,108,1\\r\\n22.12,91.12,126,1\\r\\n18.42,87.42,23,1\\r\\n16.29,85.29,83,1\\r\\n28.79,97.79,150,2\\r\\n14.81,83.81,26,0\\r\\n29.61,98.61,161,2\\r\\n13.92,82.92,28,0\\r\\n23.9,92.9,158,2\\r\\n29.05,98.05,176,2\\r\\n24.17,93.17,185,2\\r\\n18.2,87.2,1,1\\r\\n12.69,81.69,87,0\\r\\n29.99,98.99,199,2\\r\\n20.2,89.2,124,1\\r\\n24.03,93.03,171,2\\r\\n20.41,89.41,107,1\\r\\n17.16,86.16,79,1\\r\\n24.69,93.69,166,2\\r\\n15.09,84.09,54,1\\r\\n10.62,79.62,62,0\\r\\n20.14,89.14,118,1\\r\\n15.55,84.55,9,1\\r\\n18.03,87.03,75,1\\r\\n19.83,88.83,125,1\\r\\n24.6,93.6,157,2\\r\\n26.62,95.62,146,2\\r\\n15.4,84.4,85,1\\r\\n26.75,95.75,159,2\\r\\n17.45,86.45,17,1\\r\\n26.18,95.18,173,2\\r\\n19.42,88.42,122,1\\r\\n24.99,93.99,196,2\\r\\n22.85,91.85,123,1\\r\\n27.4,96.4,153,2\\r\\n26.45,95.45,200,2\\r\\n10.22,79.22,22,0\\r\\n27.72,96.72,185,2\\r\\n12.43,81.43,61,0\\r\\n23.57,92.57,196,2\\r\\n19.47,88.47,127,1\\r\\n12.36,81.36,54,0\\r\\n26.56,95.56,140,2\\r\\n21.03,90.03,93,1\\r\\n19.64,88.64,106,1\\r\\n18.75,87.75,56,1\\r\\n11.74,80.74,83,0\\r\\n15.5,84.5,4,1\\r\\n29.93,98.93,193,2\\r\\n14.01,83.01,37,0\\r\\n12.04,81.04,22,0\\r\\n13.34,82.34,61,0\\r\\n10.32,79.32,32,0\\r\\n28.03,97.03,145,2\\r\\n29.59,98.59,159,2\\r\\n15.04,84.04,49,1\\r\\n20.01,89.01,105,1\\r\\n15.38,84.38,83,1\\r\\n18.76,87.76,57,1\\r\\n22.91,91.91,130,2\\r\\n14.32,83.32,68,0\\r\\n23.49,92.49,188,2\\r\\n10.26,79.26,26,0\\r\\n27.97,96.97,139,2\\r\\n14.41,83.41,77,0\\r\\n11.73,80.73,82,0\\r\\n16.23,85.23,77,1\\r\\n25.35,94.35,161,2\\r\\n23.83,92.83,151,2\\r\\n11.91,80.91,9,0\\r\\n14.17,83.17,53,0\\r\\n27.9,96.9,132,2\\r\\n22.92,91.92,131,2\\r\\n28.81,97.81,152,2\\r\\n16.74,85.74,37,1\\r\\n18.1,87.1,82,1\\r\\n22.24,91.24,100,1\\r\\n23.85,92.85,153,2\\r\\n28.54,97.54,196,2\\r\\n20.77,89.77,105,1\\r\\n25.55,94.55,181,2\\r\\n14.33,83.33,69,0\\r\\n24.45,93.45,142,2\\r\\n24.19,93.19,187,2\\r\\n19.25,88.25,105,1\\r\\n28.42,97.42,184,2\\r\\n22.27,91.27,103,1\\r\\n12.78,81.78,5,0\\r\\n27.58,96.58,171,2\\r\\n18.17,87.17,89,1\\r\\n17.19,86.19,82,1\\r\\n29.03,98.03,174,2\\r\\n18.51,87.51,32,1\\r\\n28.83,97.83,154,2\\r\\n13.2,82.2,47,0\\r\\n22.96,91.96,135,2\\r\\n15.52,84.52,6,1\\r\\n16.13,85.13,67,1\\r\\n18.44,87.44,25,1\\r\\n11.41,80.41,50,0\\r\\n12.73,81.73,0,0\\r\\n19.96,88.96,100,1\\r\\n29.97,98.97,197,2\\r\\n14.55,83.55,0,0\\r\\n25.85,94.85,140,2\\r\\n15.45,84.45,90,1\\r\\n20.92,89.92,120,1\\r\\n19.13,88.13,93,1\\r\\n12.35,81.35,53,0\\r\\n16.78,85.78,41,1\\r\\n26.66,95.66,150,2\\r\\n23.19,92.19,158,2\\r\\n18.39,87.39,20,1\\r\\n24.74,93.74,171,2\\r\\n11.04,80.04,13,0\\r\\n27.05,96.05,189,2\\r\\n16.51,85.51,14,1\\r\\n29.31,98.31,131,2\\r\\n19.35,88.35,115,1\\r\\n18.57,87.57,38,1\\r\\n17.73,86.73,45,1\\r\\n13.35,82.35,62,0\\r\\n16.86,85.86,49,1\\r\\n22.5,91.5,126,1\\r\\n26.94,95.94,178,2\\r\\n21.76,90.76,128,1\\r\\n10.56,79.56,56,0\\r\\n28.24,97.24,166,2\\r\\n12.82,81.82,9,0\\r\\n19.15,88.15,95,1\\r\\n28.39,97.39,181,2\\r\\n21.9,90.9,104,1\\r\\n23.48,92.48,187,2\\r\\n27.34,96.34,147,2\\r\\n24.71,93.71,168,2\\r\\n13.47,82.47,74,0\\r\\n25.03,94.03,200,2\\r\\n29.7,98.7,170,2\\r\\n19.9,88.9,94,1\\r\\n26.9,95.9,174,2\\r\\n17.92,86.92,64,1\\r\\n13.25,82.25,52,0\\r\\n24.12,93.12,180,2\\r\\n10.55,79.55,55,0\\r\\n15.31,84.31,76,1\\r\\n12.92,81.92,19,0\\r\\n27.67,96.67,180,2\\r\\n13.6,82.6,87,0\\r\\n17.4,86.4,12,1\\r\\n10.73,79.73,73,0\\r\\n12.97,81.97,24,0\\r\\n16.19,85.19,73,1\\r\\n17.05,86.05,68,1\\r\\n14.85,83.85,30,0\\r\\n23.76,92.76,144,2\\r\\n17.02,86.02,65,1\\r\\n26.17,95.17,172,2\\r\\n22.58,91.58,104,1\\r\\n18.99,87.99,80,1\\r\\n15.18,84.18,63,1\\r\\n16.07,85.07,61,1\\r\\n22.46,91.46,122,1\\r\\n21.35,90.35,125,1\\r\\n13.4,82.4,67,0\\r\\n17.91,86.91,63,1\\r\\n23.62,92.62,130,2\\r\\n28.47,97.47,189,2\\r\\n16.8,85.8,43,1\\r\\n14.08,83.08,44,0\\r\\n26.93,95.93,177,2\\r\\n26.72,95.72,156,2\\r\\n22.25,91.25,101,1\\r\\n27.06,96.06,190,2\\r\\n29.4,98.4,140,2\\r\\n22.97,91.97,136,2\\r\\n14.29,83.29,65,0\\r\\n29.27,98.27,198,2\\r\\n23.04,92.04,143,2\\r\\n11.01,80.01,10,0\\r\\n21.44,90.44,96,1\\r\\n13.01,82.01,28,0\\r\\n15.13,84.13,58,1\\r\\n21.02,90.02,92,1\\r\\n20.21,89.21,125,1\\r\\n16.35,85.35,89,1\\r\\n27.31,96.31,144,2\\r\\n13.42,82.42,69,0\\r\\n15,84,45,0\\r\\n16.91,85.91,54,1\\r\\n14.97,83.97,42,0\\r\\n20.79,89.79,107,1\\r\\n21.65,90.65,117,1\\r\\n24.42,93.42,139,2\\r\\n19.27,88.27,107,1\\r\\n16.66,85.66,29,1\\r\\n15.29,84.29,74,1\\r\\n17.9,86.9,62,1\\r\\n29.67,98.67,167,2\\r\\n14.69,83.69,14,0\\r\\n14.26,83.26,62,0\\r\\n22.01,91.01,115,1\\r\\n25.71,94.71,197,2\\r\\n23.7,92.7,138,2\\r\\n12.88,81.88,15,0\\r\\n25.88,94.88,143,2\\r\\n19.59,88.59,101,1\\r\\n12.85,81.85,12,0\\r\\n10.64,79.64,64,0\\r\\n26.01,95.01,156,2\\r\\n20.37,89.37,103,1\\r\\n19.7,88.7,112,1\\r\\n15.94,84.94,48,1\\r\\n22.86,91.86,124,1\\r\\n27.2,96.2,133,2\\r\\n19.73,88.73,115,1\\r\\n12.28,81.28,46,0\\r\\n24.22,93.22,190,2\\r\\n23.1,92.1,149,2\\r\\n21.7,90.7,122,1\\r\\n19.33,88.33,113,1\\r\\n11.7,80.7,79,0\\r\\n22.45,91.45,121,1\\r\\n19.53,88.53,95,1\\r\\n16.08,85.08,62,1\\r\\n22.95,91.95,134,2\\r\\n10.59,79.59,59,0\\r\\n13.32,82.32,59,0\\r\\n12.08,81.08,26,0\\r\\n24.77,93.77,174,2\\r\\n18.98,87.98,79,1\\r\\n23,92,139,2\\r\\n24.86,93.86,183,2\\r\\n22.21,91.21,97,1\\r\\n15.26,84.26,71,1\\r\\n25.28,94.28,154,2\\r\\n17.86,86.86,58,1\\r\\n28.02,97.02,144,2\\r\\n29.62,98.62,162,2\\r\\n19.41,88.41,121,1\\r\\n16.06,85.06,60,1\\r\\n23.81,92.81,149,2\\r\\n10.93,79.93,2,0\\r\\n25.68,94.68,194,2\\r\\n16.55,85.55,18,1\\r\\n19.49,88.49,129,1\\r\\n10.8,79.8,80,0\\r\\n25.15,94.15,141,2\\r\\n15.58,84.58,12,1\\r\\n29.55,98.55,155,2\\r\\n12.31,81.31,49,0\\r\\n10.58,79.58,58,0\\r\\n23.35,92.35,174,2\\r\\n15.82,84.82,36,1\\r\\n27.1,96.1,194,2\\r\\n13.68,82.68,4,0\\r\\n11.6,80.6,69,0\\r\\n26.76,95.76,160,2\\r\\n25.31,94.31,157,2\\r\\n23.42,92.42,181,2\\r\\n13.09,82.09,36,0\\r\\n18.43,87.43,24,1\\r\\n26.31,95.31,186,2\\r\\n16.21,85.21,75,1\\r\\n11.51,80.51,60,0\\r\\n12.52,81.52,70,0\\r\\n25.69,94.69,195,2\\r\\n19.38,88.38,118,1\\r\\n22.9,91.9,128,1\\r\\n13.43,82.43,70,0\\r\\n10.38,79.38,38,0\\r\\n25.67,94.67,193,2\\r\\n10.15,79.15,15,0\\r\\n12.98,81.98,25,0\\r\\n20.02,89.02,106,1\\r\\n19.23,88.23,103,1\\r\\n15.15,84.15,60,1\\r\\n20.19,89.19,123,1\\r\\n10.91,79.91,0,0\\r\\n12.3,81.3,48,0\\r\\n11.39,80.39,48,0\\r\\n19.61,88.61,103,1\\r\\n18.26,87.26,7,1\\r\\n27.52,96.52,165,2\\r\\n11.75,80.75,84,0\\r\\n27.47,96.47,160,2\\r\\n19.54,88.54,96,1\\r\\n26.41,95.41,196,2\\r\\n23.65,92.65,133,2\\r\\n17.59,86.59,31,1\\r\\n20.83,89.83,111,1\\r\\n29.1,98.1,181,2\\r\\n29.22,98.22,193,2\\r\\n14.91,83.91,36,0\\r\\n23.97,92.97,165,2\\r\\n16.1,85.1,64,1\\r\\n20.57,89.57,123,1\\r\\n18.56,87.56,37,1\\r\\n24.38,93.38,135,2\\r\\n24.56,93.56,153,2\\r\\n17.14,86.14,77,1\\r\\n23.4,92.4,179,2\\r\\n22.78,91.78,124,1\\r\\n27.56,96.56,169,2\\r\\n11.47,80.47,56,0\\r\\n15.6,84.6,14,1\\r\\n26.74,95.74,158,2\\r\\n16.62,85.62,25,1\\r\\n27.3,96.3,143,2\\r\\n12.01,81.01,19,0\\r\\n11.65,80.65,74,0\\r\\n20.03,89.03,107,1\\r\\n14.76,83.76,21,0\\r\\n22.23,91.23,99,1\\r\\n22.67,91.67,113,1\\r\\n19.2,88.2,100,1\\r\\n22.8,91.8,126,1\\r\\n14.12,83.12,48,0\\r\\n18.61,87.61,42,1\\r\\n18.01,87.01,73,1\\r\\n16.92,85.92,55,1\\r\\n12.18,81.18,36,0\\r\\n24.49,93.49,146,2\\r\\n27,96,184,2\\r\\n21.18,90.18,108,1\\r\\n10,79,0,0\\r\\n19.12,88.12,92,1\\r\\n11.83,80.83,1,0\\r\\n11.22,80.22,31,0\\r\\n21.24,90.24,114,1\\r\\n22.74,91.74,120,1\\r\\n14,83,36,0\\r\\n15.49,84.49,3,1\\r\\n20.35,89.35,101,1\\r\\n29,98,171,2\\r\\n12.99,81.99,26,0\\r\\n10.04,79.04,4,0\\r\\n28.51,97.51,193,2\\r\\n23.21,92.21,160,2\\r\\n20.45,89.45,111,1\\r\\n11.71,80.71,80,0\\r\\n24.16,93.16,184,2\\r\\n11.42,80.42,51,0\\r\\n12.2,81.2,38,0\\r\\n22.26,91.26,102,1\\r\\n27.16,96.16,200,2\\r\\n23.72,92.72,140,2\\r\\n25.22,94.22,148,2\\r\\n19.29,88.29,109,1\\r\\n15.1,84.1,55,1\\r\\n25.49,94.49,175,2\\r\\n17.95,86.95,67,1\\r\\n25.05,94.05,131,2\\r\\n24.46,93.46,143,2\\r\\n16.12,85.12,66,1\\r\\n28.93,97.93,164,2\\r\\n10.71,79.71,71,0\\r\\n15.59,84.59,13,1\\r\\n24.93,93.93,190,2\\r\\n27.94,96.94,136,2\\r\\n28.01,97.01,143,2\\r\\n13.9,82.9,26,0\\r\\n20.54,89.54,120,1\\r\\n16.42,85.42,5,1\\r\\n20.69,89.69,97,1\\r\\n17.81,86.81,53,1\\r\\n17.23,86.23,86,1\\r\\n21.88,90.88,102,1\\r\\n16.89,85.89,52,1\\r\\n28.89,97.89,160,2\\r\\n27.79,96.79,192,2\\r\\n25.65,94.65,191,2\\r\\n19.93,88.93,97,1\\r\\n19.03,88.03,84,1\\r\\n10.37,79.37,37,0\\r\\n28.04,97.04,146,2\\r\\n12.09,81.09,27,0\\r\\n12.47,81.47,65,0\\r\\n20.39,89.39,105,1\\r\\n26.42,95.42,197,2\\r\\n29.23,98.23,194,2\\r\\n19.16,88.16,96,1\\r\\n20.53,89.53,119,1\\r\\n29.01,98.01,172,2\\r\\n20.32,89.32,98,1\\r\\n26.36,95.36,191,2\\r\\n23.73,92.73,141,2\\r\\n25.9,94.9,145,2\\r\\n21.22,90.22,112,1\\r\\n10.86,79.86,86,0\\r\\n26.88,95.88,172,2\\r\\n16.5,85.5,13,1\\r\\n29.64,98.64,164,2\\r\\n13.31,82.31,58,0\\r\\n10.88,79.88,88,0\\r\\n14.65,83.65,10,0\\r\\n16.58,85.58,21,1\\r\\n17.13,86.13,76,1\\r\\n19.79,88.79,121,1\\r\\n21.57,90.57,109,1\\r\\n16.16,85.16,70,1\\r\\n21.66,90.66,118,1\\r\\n25.84,94.84,139,2\\r\\n26.25,95.25,180,2\\r\\n26.89,95.89,173,2\\r\\n23.28,92.28,167,2\\r\\n11.18,80.18,27,0\\r\\n20.67,89.67,95,1\\r\\n17.82,86.82,54,1\\r\\n27.91,96.91,133,2\\r\\n29.34,98.34,134,2\\r\\n21.36,90.36,126,1\\r\\n25.3,94.3,156,2\\r\\n17.96,86.96,68,1\\r\\n11.57,80.57,66,0\\r\\n12.59,81.59,77,0\\r\\n29.75,98.75,175,2\\r\\n22.99,91.99,138,2\\r\\n14.82,83.82,27,0\\r\\n21.47,90.47,99,1\\r\\n26.37,95.37,192,2\\r\\n11.8,80.8,89,0\\r\\n15.84,84.84,38,1\\r\\n24.65,93.65,162,2\\r\\n17.61,86.61,33,1\\r\\n24.61,93.61,158,2\\r\\n10.68,79.68,68,0\\r\\n13.88,82.88,24,0\\r\\n15.36,84.36,81,1\\r\\n22.19,91.19,95,1\\r\\n25.58,94.58,184,2\\r\\n23.55,92.55,194,2\\r\\n18.95,87.95,76,1\\r\\n26.3,95.3,185,2\\r\\n10.14,79.14,14,0\\r\\n29.45,98.45,145,2\\r\\n22.37,91.37,113,1\\r\\n15.88,84.88,42,1\\r\\n26.96,95.96,180,2\\r\\n16.99,85.99,62,1\\r\\n24.68,93.68,165,2\\r\\n18.06,87.06,78,1\\r\\n29.18,98.18,189,2\\r\\n15.76,84.76,30,1\\r\\n17.98,86.98,70,1\\r\\n10.94,79.94,3,0\\r\\n22.88,91.88,126,1\\r\\n13.56,82.56,83,0\\r\\n23.92,92.92,160,2\\r\\n13.71,82.71,7,0\\r\\n22.83,91.83,129,1\\r\\n23.84,92.84,152,2\\r\\n16.72,85.72,35,1\\r\\n29.15,98.15,186,2\\r\\n27.85,96.85,198,2\\r\\n14.75,83.75,20,0\\r\\n24.32,93.32,200,2\\r\\n26.54,95.54,138,2\\r\\n28.85,97.85,156,2\\r\\n27.25,96.25,138,2\\r\\n11.96,80.96,14,0\\r\\n22.94,91.94,133,2\\r\\n24.07,93.07,175,2\\r\\n17.07,86.07,70,1\\r\\n15.83,84.83,37,1\\r\\n21.89,90.89,103,1\\r\\n13.85,82.85,21,0\\r\\n29.83,98.83,183,2\\r\\n11.85,80.85,3,0\\r\\n23.88,92.88,156,2\\r\\n28.5,97.5,192,2\\r\\n15.39,84.39,84,1\\r\\n15.7,84.7,24,1\\r\\n16.03,85.03,57,1\\r\\n13.04,82.04,31,0\\r\\n23.6,92.6,199,2\\r\\n21.13,90.13,103,1\\r\\n12.96,81.96,23,0\\r\\n28.53,97.53,195,2\\r\\n22.68,91.68,114,1\\r\\n24.75,93.75,172,2\\r\\n21.73,90.73,125,1\\r\\n11.5,80.5,59,0\\r\\n14.15,83.15,51,0\\r\\n14.37,83.37,73,0\\r\\n18.09,87.09,81,1\\r\\n14.63,83.63,8,0\\r\\n27.42,96.42,155,2\\r\\n11.17,80.17,26,0\\r\\n15.57,84.57,11,1\\r\\n13.78,82.78,14,0\\r\\n26.91,95.91,175,2\\r\\n21.42,90.42,94,1\\r\\n14.93,83.93,38,0\\r\\n29.81,98.81,181,2\\r\\n23.01,92.01,140,2\\r\\n10.47,79.47,47,0\\r\\n21.29,90.29,119,1\\r\\n28.72,97.72,143,2\\r\\n15.11,84.11,56,1\\r\\n13.33,82.33,60,0\\r\\n29.76,98.76,176,2\\r\\n26.11,95.11,166,2\\r\\n24.09,93.09,177,2\\r\\n13.44,82.44,71,0\\r\\n27.44,96.44,157,2\\r\\n12.84,81.84,11,0\\r\\n22.2,91.2,96,1\\r\\n11.86,80.86,4,0\\r\\n13.97,82.97,33,0\\r\\n14.39,83.39,75,0\\r\\n29.32,98.32,132,2\\r\\n11.2,80.2,29,0\\r\\n28.96,97.96,167,2\\r\\n18.46,87.46,27,1\\r\\n14.3,83.3,66,0\\r\\n18.35,87.35,16,1\\r\\n28.88,97.88,159,2\\r\\n10.84,79.84,84,0\\r\\n16.26,85.26,80,1\\r\\n15.73,84.73,27,1\\r\\n15.85,84.85,39,1\\r\\n17.57,86.57,29,1\\r\\n17.3,86.3,2,1\\r\\n23.14,92.14,153,2\\r\\n20.64,89.64,92,1\\r\\n11.14,80.14,23,0\\r\\n25.08,94.08,134,2\\r\\n17,86,63,1\\r\\n15.63,84.63,17,1\\r\\n10.41,79.41,41,0\\r\\n16.36,85.36,90,1\\r\\n16.85,85.85,48,1\\r\\n24.14,93.14,182,2\\r\\n18.91,87.91,72,1\\r\\n24.29,93.29,197,2\\r\\n27.53,96.53,166,2\\r\\n18.38,87.38,19,1\\r\\n22.1,91.1,124,1\\r\\n27.88,96.88,130,2\\r\\n13.53,82.53,80,0\\r\\n27.21,96.21,134,2\\r\\n26.68,95.68,152,2\\r\\n11.82,80.82,0,0\\r\\n28.57,97.57,199,2\\r\\n17.28,86.28,0,1\\r\\n27.27,96.27,140,2\\r\\n23.2,92.2,159,2\\r\\n25.75,94.75,130,2\\r\\n14.74,83.74,19,0\\r\\n18.41,87.41,22,1\\r\\n21.06,90.06,96,1\\r\\n27.5,96.5,163,2\\r\\n10.89,79.89,89,0\\r\\n24.26,93.26,194,2\\r\\n11.72,80.72,81,0\\r\\n26.67,95.67,151,2\\r\\n14.04,83.04,40,0\\r\\n25.24,94.24,150,2\\r\\n26.09,95.09,164,2\\r\\n21.32,90.32,122,1\\r\\n28.33,97.33,175,2\\r\\n15.54,84.54,8,1\\r\\n25.4,94.4,166,2\\r\\n24.37,93.37,134,2\\r\\n29.14,98.14,185,2\\r\\n15.37,84.37,82,1\\r\\n23.99,92.99,167,2\\r\\n24.55,93.55,152,2\\r\\n19.89,88.89,93,1\\r\\n18.89,87.89,70,1\\r\\n21.93,90.93,107,1\\r\\n29.25,98.25,196,2\\r\\n26.52,95.52,136,2\\r\\n17.74,86.74,46,1\\r\\n27.51,96.51,164,2\\r\\n23.13,92.13,152,2\\r\\n23.71,92.71,139,2\\r\\n29.73,98.73,173,2\\r\\n25.72,94.72,198,2\\r\\n11.4,80.4,49,0\\r\\n19.44,88.44,124,1\\r\\n29.47,98.47,147,2\\r\\n21.52,90.52,104,1\\r\\n14.7,83.7,15,0\\r\\n12.77,81.77,4,0\\r\\n14.49,83.49,85,0\\r\\n12.68,81.68,86,0\\r\\n29.72,98.72,172,2\\r\\n20.52,89.52,118,1\\r\\n28.8,97.8,151,2\\r\\n12.81,81.81,8,0\\r\\n26.92,95.92,176,2\\r\\n24.34,93.34,131,2\\r\\n25,94,197,2\\r\\n26,95,155,2\\r\\n22.55,91.55,101,1\\r\\n15.05,84.05,50,1\\r\\n12.23,81.23,41,0\\r\\n18.25,87.25,6,1\\r\\n19.52,88.52,94,1\\r\\n13.61,82.61,88,0\\r\\n13.82,82.82,18,0\\r\\n21.3,90.3,120,1\\r\\n28.86,97.86,157,2\\r\\n26.02,95.02,157,2\\r\\n16.83,85.83,46,1\\r\\n17.36,86.36,8,1\\r\\n25.82,94.82,137,2\\r\\n18.83,87.83,64,1\\r\\n14.06,83.06,42,0\\r\\n10.06,79.06,6,0\\r\\n23.47,92.47,186,2\\r\\n17.09,86.09,72,1\\r\\n21.85,90.85,99,1\\r\\n26.79,95.79,163,2\\r\\n25.95,94.95,150,2\\r\\n16.02,85.02,56,1\\r\\n22.16,91.16,92,1\\r\\n29.39,98.39,139,2\\r\\n13.49,82.49,76,0\\r\\n26.7,95.7,154,2\\r\\n25.36,94.36,162,2\\r\\n21.28,90.28,118,1\\r\\n10.09,79.09,9,0\\r\\n21.09,90.09,99,1\\r\\n23.51,92.51,190,2\\r\\n15.8,84.8,34,1\\r\\n19.88,88.88,92,1\\r\\n17.55,86.55,27,1\\r\\n25.92,94.92,147,2\\r\\n26.16,95.16,171,2\\r\\n26.77,95.77,161,2\\r\\n11.35,80.35,44,0\\r\\n12.7,81.7,88,0\\r\\n28.74,97.74,145,2\\r\\n12.29,81.29,47,0\\r\\n11.11,80.11,20,0\\r\\n23.29,92.29,168,2\\r\\n13.75,82.75,11,0\\r\\n24.02,93.02,170,2\\r\\n21.87,90.87,101,1\\r\\n15.9,84.9,44,1\\r\\n16.7,85.7,33,1\\r\\n24.36,93.36,133,2\\r\\n15.47,84.47,1,1\\r\\n19.01,88.01,82,1\\r\\n22.72,91.72,118,1\\r\\n10.13,79.13,13,0\\r\\n26.39,95.39,194,2\\r\\n18.22,87.22,3,1\\r\\n15.78,84.78,32,1\\r\\n16.81,85.81,44,1\\r\\n10.79,79.79,79,0\\r\\n12.91,81.91,18,0\\r\\n29.42,98.42,142,2\\r\\n22.75,91.75,121,1\\r\\n18.6,87.6,41,1\\r\\n27.66,96.66,179,2\\r\\n11.37,80.37,46,0\\r\\n19.11,88.11,91,1\\r\\n17.7,86.7,42,1\\r\\n17.35,86.35,7,1\\r\\n23.75,92.75,143,2\\r\\n12.21,81.21,39,0\\r\\n25.2,94.2,146,2\\r\\n12.6,81.6,78,0\\r\\n24.48,93.48,145,2\\r\\n12.53,81.53,71,0\\r\\n27.28,96.28,141,2\\r\\n13.87,82.87,23,0\\r\\n20.84,89.84,112,1\\r\\n21.59,90.59,111,1\\r\\n21.04,90.04,94,1\\r\\n25.5,94.5,176,2\\r\\n25.48,94.48,174,2\\r\\n24.05,93.05,173,2\\r\\n26.73,95.73,157,2\\r\\n16.53,85.53,16,1\\r\\n27.59,96.59,172,2\\r\\n17.04,86.04,67,1\\r\\n23.64,92.64,132,2\\r\\n13.54,82.54,81,0\\r\\n17.03,86.03,66,1\\r\\n29.43,98.43,143,2\\r\\n20.42,89.42,108,1\\r\\n12.19,81.19,37,0\\r\\n25.98,94.98,153,2\\r\\n14.14,83.14,50,0\\r\\n12.87,81.87,14,0\\r\\n14.94,83.94,39,0\\r\\n15.16,84.16,61,1\\r\\n13.12,82.12,39,0\\r\\n29.46,98.46,146,2\\r\\n14.24,83.24,60,0\\r\\n20.34,89.34,100,1\\r\\n25.7,94.7,196,2\\r\\n18.29,87.29,10,1\\r\\n18.28,87.28,9,1\\r\\n26.95,95.95,179,2\\r\\n21.45,90.45,97,1\\r\\n13.79,82.79,15,0\\r\\n28.35,97.35,177,2\\r\\n13.23,82.23,50,0\\r\\n18.4,87.4,21,1\\r\\n27.07,96.07,191,2\\r\\n10.27,79.27,27,0\\r\\n20.5,89.5,116,1\\r\\n22.35,91.35,111,1\\r\\n20.55,89.55,121,1\\r\\n11.08,80.08,17,0\\r\\n13.93,82.93,29,0\\r\\n12.89,81.89,16,0\\r\\n18.77,87.77,58,1\\r\\n11.43,80.43,52,0\\r\\n27.74,96.74,187,2\\r\\n16.94,85.94,57,1\\r\\n15.06,84.06,51,1\\r\\n19.1,88.1,91,1\\r\\n24.87,93.87,184,2\\r\\n14.56,83.56,1,0\\r\\n15.35,84.35,80,1\\r\\n12.75,81.75,2,0\\r\\n21.21,90.21,111,1\\r\\n25.29,94.29,155,2\\r\\n22.81,91.81,127,1\\r\\n20.49,89.49,115,1\\r\\n11.63,80.63,72,0\\r\\n21.6,90.6,112,1\\r\\n21.2,90.2,110,1\\r\\n27.45,96.45,158,2\\r\\n16.32,85.32,86,1\\r\\n13.86,82.86,22,0\\r\\n14.46,83.46,82,0\\r\\n28.55,97.55,197,2\\r\\n20.18,89.18,122,1\\r\\n23.16,92.16,155,2\\r\\n15.3,84.3,75,1\\r\\n16.31,85.31,85,1\\r\\n27.61,96.61,174,2\\r\\n11.99,80.99,17,0\\r\\n19.39,88.39,119,1\\r\\n28.38,97.38,180,2\\r\\n27.71,96.71,184,2\\r\\n18.18,87.18,90,1\\r\\n24.11,93.11,179,2\\r\\n16.46,85.46,9,1\\r\\n15.98,84.98,52,1\\r\\n22.57,91.57,103,1\\r\\n20.78,89.78,106,1\\r\\n24.95,93.95,192,2\\r\\n27.48,96.48,161,2\\r\\n19.95,88.95,99,1\\r\\n29.26,98.26,197,2\\r\\n22.51,91.51,127,1\\r\\n18.84,87.84,65,1\\r\\n12.71,81.71,89,0\\r\\n20.85,89.85,113,1\\r\\n29.8,98.8,180,2\\r\\n28.46,97.46,188,2\\r\\n11.53,80.53,62,0\\r\\n13.57,82.57,84,0\\r\\n27.35,96.35,148,2\\r\\n21.83,90.83,97,1\\r\\n16.4,85.4,3,1\\r\\n17.49,86.49,21,1\\r\\n21.95,90.95,109,1\\r\\n16.52,85.52,15,1\\r\\n29.69,98.69,169,2\\r\\n16.17,85.17,71,1\\r\\n25.62,94.62,188,2\\r\\n22.03,91.03,117,1\\r\\n13.15,82.15,42,0\\r\\n25.45,94.45,171,2\\r\\n27.04,96.04,188,2\\r\\n15.23,84.23,68,1\\r\\n23.22,92.22,161,2\\r\\n26.1,95.1,165,2\\r\\n20.51,89.51,117,1\\r\\n27.54,96.54,167,2\\r\\n17.2,86.2,83,1\\r\\n27.89,96.89,131,2\\r\\n10.97,79.97,6,0\\r\\n28.34,97.34,176,2\\r\\n15.91,84.91,45,1\\r\\n19.55,88.55,97,1\\r\\n13.69,82.69,5,0\\r\\n29.44,98.44,144,2\\r\\n29.66,98.66,166,2\\r\\n19.48,88.48,128,1\\r\\n12.66,81.66,84,0\\r\\n21.08,90.08,98,1\\r\\n13.18,82.18,45,0\\r\\n13.84,82.84,20,0\\r\\n18.45,87.45,26,1\\r\\n20.36,89.36,102,1\\r\\n26.59,95.59,143,2\\r\\n21.62,90.62,114,1\\r\\n13.7,82.7,6,0\\r\\n29.85,98.85,185,2\\r\\n15.2,84.2,65,1\\r\\n25.93,94.93,148,2\\r\\n23.95,92.95,163,2\\r\\n21.43,90.43,95,1\\r\\n23.25,92.25,164,2\\r\\n27.37,96.37,150,2\\r\\n18.49,87.49,30,1\\r\\n19.58,88.58,100,1\\r\\n14.72,83.72,17,0\\r\\n25.11,94.11,137,2\\r\\n23.91,92.91,159,2\\r\\n10.61,79.61,61,0\\r\\n17.54,86.54,26,1\\r\\n20.86,89.86,114,1\\r\\n22.47,91.47,123,1\\r\\n26.07,95.07,162,2\\r\\n17.69,86.69,41,1\\r\\n15.33,84.33,78,1\\r\\n28.98,97.98,169,2\\r\\n12,81,18,0\\r\\n17.18,86.18,81,1\\r\\n29.38,98.38,138,2\\r\\n26.71,95.71,155,2\\r\\n11.3,80.3,39,0\\r\\n13.5,82.5,77,0\\r\\n26.53,95.53,137,2\\r\\n26.5,95.5,134,2\\r\\n28.16,97.16,158,2\\r\\n25.02,94.02,199,2\\r\\n27.18,96.18,131,2\\r\\n23.34,92.34,173,2\\r\\n16.61,85.61,24,1\\r\\n17.78,86.78,50,1\\r\\n12.5,81.5,68,0\\r\\n14.38,83.38,74,0\\r\\n25.64,94.64,190,2\\r\\n25.54,94.54,180,2\\r\\n26.6,95.6,144,2\\r\\n19.86,88.86,128,1\\r\\n22.79,91.79,125,1\\r\\n11.06,80.06,15,0\\r\\n26.23,95.23,178,2\\r\\n18.73,87.73,54,1\\r\\n29.07,98.07,178,2\\r\\n20.6,89.6,126,1\\r\\n20.96,89.96,124,1\\r\\n12.07,81.07,25,0\\r\\n20.16,89.16,120,1\\r\\n13.77,82.77,13,0\\r\\n12.37,81.37,55,0\\r\\n16.64,85.64,27,1\\r\\n28.59,97.59,130,2\\r\\n13.05,82.05,32,0\\r\\n29.98,98.98,198,2\\r\\n18.15,87.15,87,1\\r\\n21.46,90.46,98,1\\r\\n18.82,87.82,63,1\\r\\n18.36,87.36,17,1\\r\\n20.13,89.13,117,1\\r\\n26.58,95.58,142,2\\r\\n28.56,97.56,198,2\\r\\n18.9,87.9,71,1\\r\\n10.98,79.98,7,0\\r\\n24.89,93.89,186,2\\r\\n27.75,96.75,188,2\\r\\n15.22,84.22,67,1\\r\\n29.95,98.95,195,2\\r\\n23.43,92.43,182,2\\r\\n10.17,79.17,17,0\\r\\n14.95,83.95,40,0\\r\\n15.53,84.53,7,1\\r\\n16.45,85.45,8,1\\r\\n11.76,80.76,85,0\\r\\n12.27,81.27,45,0\\r\\n24.44,93.44,141,2\\r\\n24.04,93.04,172,2\\r\\n15.62,84.62,16,1\\r\\n18.96,87.96,77,1\\r\\n10.51,79.51,51,0\\r\\n15.75,84.75,29,1\\r\\n22.4,91.4,116,1\\r\\n24.73,93.73,170,2\\r\\n25.12,94.12,138,2\\r\\n12.94,81.94,21,0\\r\\n17.47,86.47,19,1\\r\\n24.54,93.54,151,2\\r\\n23.98,92.98,166,2\\r\\n17.01,86.01,64,1\\r\\n16.6,85.6,23,1\\r\\n28.94,97.94,165,2\\r\\n16.67,85.67,30,1\\r\\n20.27,89.27,93,1\\r\\n23.17,92.17,156,2\\r\\n10.7,79.7,70,0\\r\\n27.19,96.19,132,2\\r\\n13.3,82.3,57,0\\r\\n14.57,83.57,2,0\\r\\n11.56,80.56,65,0\\r\\n10.74,79.74,74,0\\r\\n17.93,86.93,65,1\\r\\n11.27,80.27,36,0\\r\\n17.22,86.22,85,1\\r\\n10.43,79.43,43,0\\r\\n15.46,84.46,0,1\\r\\n27.15,96.15,199,2\\r\\n20.81,89.81,109,1\\r\\n16.49,85.49,12,1\\r\\n14.54,83.54,90,0\\r\\n19.28,88.28,108,1\\r\\n14.52,83.52,88,0\\r\\n28,97,142,2\\r\\n25.6,94.6,186,2\\r\\n10.25,79.25,25,0\\r\\n23.12,92.12,151,2\\r\\n16.41,85.41,4,1\\r\\n16.37,85.37,0,1\\r\\n24.31,93.31,199,2\\r\\n22.93,91.93,132,2\\r\\n15.28,84.28,73,1\\r\\n13.17,82.17,44,0\\r\\n19.08,88.08,89,1\\r\\n20.26,89.26,92,1\\r\\n28.31,97.31,173,2\\r\\n19.92,88.92,96,1\\r\\n13.51,82.51,78,0\\r\\n11.58,80.58,67,0\\r\\n21.14,90.14,104,1\\r\\n10.01,79.01,1,0\\r\\n22.29,91.29,105,1\\r\\n18.05,87.05,77,1\\r\\n27.78,96.78,191,2\\r\\n10.72,79.72,72,0\\r\\n12.9,81.9,17,0\\r\\n18.31,87.31,12,1\\r\\n21.94,90.94,108,1\\r\\n10.07,79.07,7,0\\r\\n14.34,83.34,70,0\\r\\n14.61,83.61,6,0\\r\\n14.13,83.13,49,0\\r\\n13.91,82.91,27,0\\r\\n24.51,93.51,148,2\\r\\n14.4,83.4,76,0\\r\\n12.14,81.14,32,0\\r\\n20.3,89.3,96,1\\r\\n28.41,97.41,183,2\\r\\n12.64,81.64,82,0\\r\\n24.41,93.41,138,2\\r\\n19.69,88.69,111,1\\r\\n20.29,89.29,95,1\\r\\n24.8,93.8,177,2\\r\\n26.22,95.22,177,2\\r\\n17.37,86.37,9,1\\r\\n21.01,90.01,129,1\\r\\n26.44,95.44,199,2\\r\\n11.49,80.49,58,0\\r\\n10.16,79.16,16,0\\r\\n24.83,93.83,180,2\\r\\n12.57,81.57,75,0\\r\\n24.59,93.59,156,2\\r\\n18.23,87.23,4,1\\r\\n10.5,79.5,50,0\\r\\n23.86,92.86,154,2\\r\\n23.41,92.41,180,2\\r\\n13.66,82.66,2,0\\r\\n11.36,80.36,45,0\\r\\n22.33,91.33,109,1\\r\\n15.89,84.89,43,1\\r\\n12.67,81.67,85,0\\r\\n22.07,91.07,121,1\\r\\n28.78,97.78,149,2\\r\\n17.65,86.65,37,1\\r\\n24.72,93.72,169,2\\r\\n15.48,84.48,2,1\\r\\n28.67,97.67,138,2\\r\\n24.5,93.5,147,2\\r\\n26.82,95.82,166,2\\r\\n13.19,82.19,46,0\\r\\n16.34,85.34,88,1\\r\\n18.11,87.11,83,1\\r\\n13.29,82.29,56,0\\r\\n22.17,91.17,93,1\\r\\n28.48,97.48,190,2\\r\\n16.71,85.71,34,1\\r\\n27.98,96.98,140,2\\r\\n11.15,80.15,24,0\\r\\n13.63,82.63,90,0\\r\\n22.98,91.98,137,2\\r\\n17.64,86.64,36,1\\r\\n25.53,94.53,179,2\\r\\n16.77,85.77,40,1\\r\\n18.88,87.88,69,1\\r\\n28.1,97.1,152,2\\r\\n10.12,79.12,12,0\\r\\n27.65,96.65,178,2\\r\\n14.48,83.48,84,0\\r\\n29.16,98.16,187,2\\r\\n28.58,97.58,200,2\\r\\n24.81,93.81,178,2\\r\\n23.8,92.8,148,2\\r\\n19.18,88.18,98,1\\r\\n22.69,91.69,115,1\\r\\n28.69,97.69,140,2\\r\\n29.82,98.82,182,2\\r\\n22.14,91.14,128,1\\r\\n27.63,96.63,176,2\\r\\n17.79,86.79,51,1\\r\\n16.15,85.15,69,1\\r\\n18.08,87.08,80,1\\r\\n21.34,90.34,124,1\\r\\n25.25,94.25,151,2\\r\\n27.6,96.6,173,2\\r\\n14.64,83.64,9,0\\r\\n27.24,96.24,137,2\\r\\n12.05,81.05,23,0\\r\\n24.67,93.67,164,2\\r\\n24.1,93.1,178,2\\r\\n21.82,90.82,96,1\\r\\n10.45,79.45,45,0\\r\\n27.22,96.22,135,2\\r\\n12.46,81.46,64,0\\r\\n16.87,85.87,50,1\\r\\n'}"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["stress_data = pd.read_csv('Stress-Lysis.csv')"],"metadata":{"id":"WWrgPfhD4Hg_","executionInfo":{"status":"ok","timestamp":1726121838905,"user_tz":-330,"elapsed":555,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["stress_data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BRybLHx74Qet","executionInfo":{"status":"ok","timestamp":1726121879820,"user_tz":-330,"elapsed":596,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"349b2b8b-adc6-4792-c493-2c6511e73551"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 2001 entries, 0 to 2000\n","Data columns (total 4 columns):\n"," #   Column        Non-Null Count  Dtype  \n","---  ------        --------------  -----  \n"," 0   Humidity      2001 non-null   float64\n"," 1   Temperature   2001 non-null   float64\n"," 2   Step count    2001 non-null   int64  \n"," 3   Stress Level  2001 non-null   int64  \n","dtypes: float64(2), int64(2)\n","memory usage: 62.7 KB\n"]}]},{"cell_type":"code","source":["stress_data.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"CrCdfm3Y4a8A","executionInfo":{"status":"ok","timestamp":1726121898782,"user_tz":-330,"elapsed":574,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"0c8c5ebc-727d-49a9-8fc1-ccbe0750f96f"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          Humidity  Temperature   Step count  Stress Level\n","count  2001.000000  2001.000000  2001.000000   2001.000000\n","mean     20.000000    89.000000   100.141429      1.104448\n","std       5.777833     5.777833    58.182948      0.771094\n","min      10.000000    79.000000     0.000000      0.000000\n","25%      15.000000    84.000000    50.000000      0.000000\n","50%      20.000000    89.000000   101.000000      1.000000\n","75%      25.000000    94.000000   150.000000      2.000000\n","max      30.000000    99.000000   200.000000      2.000000"],"text/html":["\n","  <div id=\"df-e4a472f5-0134-42dd-9118-e266ab8285db\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Humidity</th>\n","      <th>Temperature</th>\n","      <th>Step count</th>\n","      <th>Stress Level</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>2001.000000</td>\n","      <td>2001.000000</td>\n","      <td>2001.000000</td>\n","      <td>2001.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>20.000000</td>\n","      <td>89.000000</td>\n","      <td>100.141429</td>\n","      <td>1.104448</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>5.777833</td>\n","      <td>5.777833</td>\n","      <td>58.182948</td>\n","      <td>0.771094</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>10.000000</td>\n","      <td>79.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>15.000000</td>\n","      <td>84.000000</td>\n","      <td>50.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>20.000000</td>\n","      <td>89.000000</td>\n","      <td>101.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>25.000000</td>\n","      <td>94.000000</td>\n","      <td>150.000000</td>\n","      <td>2.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>30.000000</td>\n","      <td>99.000000</td>\n","      <td>200.000000</td>\n","      <td>2.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e4a472f5-0134-42dd-9118-e266ab8285db')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e4a472f5-0134-42dd-9118-e266ab8285db button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e4a472f5-0134-42dd-9118-e266ab8285db');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a54be9e0-ebfc-4274-987b-eda9fcb775cb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a54be9e0-ebfc-4274-987b-eda9fcb775cb')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a54be9e0-ebfc-4274-987b-eda9fcb775cb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"stress_data\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Humidity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 701.1507265788778,\n        \"min\": 5.777832638628433,\n        \"max\": 2001.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          2001.0,\n          20.0,\n          25.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Temperature\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 680.8467820082072,\n        \"min\": 5.777832638628434,\n        \"max\": 2001.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          2001.0,\n          89.0,\n          94.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Step count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 676.9627376340786,\n        \"min\": 0.0,\n        \"max\": 2001.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          100.14142928535732,\n          101.0,\n          2001.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Stress Level\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 707.1134775294147,\n        \"min\": 0.0,\n        \"max\": 2001.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          2001.0,\n          1.104447776111944,\n          2.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["stress_data.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":209},"id":"drorGeNe4gMB","executionInfo":{"status":"ok","timestamp":1726121913938,"user_tz":-330,"elapsed":555,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"47dbf1eb-c545-4587-d60e-5c042ac88e86"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Humidity        0\n","Temperature     0\n","Step count      0\n","Stress Level    0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Humidity</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Temperature</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Step count</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Stress Level</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["plt.figure(figsize = (6,6))\n","sns.histplot(x='Stress Level', data = stress_data)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":560},"id":"3WBGbRuc4jgw","executionInfo":{"status":"ok","timestamp":1726122005150,"user_tz":-330,"elapsed":652,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"4fadf3e1-15f7-4697-d334-f387698873d8"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='Stress Level', ylabel='Count'>"]},"metadata":{},"execution_count":12},{"output_type":"display_data","data":{"text/plain":["<Figure size 600x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["correlation = stress_data.corr()\n","plt.figure(figsize = (6,6))\n","sns.heatmap(correlation)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":546},"id":"Je3-XrV047QN","executionInfo":{"status":"ok","timestamp":1726122102620,"user_tz":-330,"elapsed":1291,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"3504a345-da95-4ef8-8377-383bf1e3ee30"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":14},{"output_type":"display_data","data":{"text/plain":["<Figure size 600x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["\n","x = stress_data['Stress Level'].unique()\n","\n","\n","sizes = stress_data['Stress Level'].value_counts()\n","colors = ['teal', 'brown', 'grey']\n","plt.pie(x=sizes, labels=x, colors=colors)\n","plt.axis('equal')\n","plt.title('Personality')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":428},"id":"s4GsYaOz5lBR","executionInfo":{"status":"ok","timestamp":1726122342416,"user_tz":-330,"elapsed":763,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"f761bb6f-bb66-4a14-9e63-940fc6d3856b"},"execution_count":17,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["X = stress_data.drop(columns = 'Stress Level', axis = 1)\n","Y = stress_data['Stress Level']"],"metadata":{"id":"6vsk388y6MAN","executionInfo":{"status":"ok","timestamp":1726122407967,"user_tz":-330,"elapsed":679,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["X_train,X_test,Y_train,Y_test =train_test_split(X,Y,test_size = 0.2,random_state = 1)"],"metadata":{"id":"mUMI58jF6b_K","executionInfo":{"status":"ok","timestamp":1726122532789,"user_tz":-330,"elapsed":635,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}}},"execution_count":24,"outputs":[]},{"cell_type":"code","source":["logreg = LogisticRegression()\n","logreg"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"mZco654d66n2","executionInfo":{"status":"ok","timestamp":1726122589876,"user_tz":-330,"elapsed":557,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"aa09a2e5-262a-4a6f-ed6c-211ec7907e2f"},"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression()"],"text/html":["<style>#sk-container-id-4 {color: black;}#sk-container-id-4 pre{padding: 0;}#sk-container-id-4 div.sk-toggleable {background-color: white;}#sk-container-id-4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-4 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-4 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-4 div.sk-item {position: relative;z-index: 1;}#sk-container-id-4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-4 div.sk-item::before, #sk-container-id-4 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-4 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-4 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-4 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-4 div.sk-label-container {text-align: center;}#sk-container-id-4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-4 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" checked><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["logreg.fit(X_train,Y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":220},"id":"9zWNwOL77Aww","executionInfo":{"status":"ok","timestamp":1726122633942,"user_tz":-330,"elapsed":583,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"3b03d122-93c4-46ed-d35c-fd622f8803e4"},"execution_count":30,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n"]},{"output_type":"execute_result","data":{"text/plain":["LogisticRegression()"],"text/html":["<style>#sk-container-id-5 {color: black;}#sk-container-id-5 pre{padding: 0;}#sk-container-id-5 div.sk-toggleable {background-color: white;}#sk-container-id-5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-5 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-5 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-5 div.sk-item {position: relative;z-index: 1;}#sk-container-id-5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-5 div.sk-item::before, #sk-container-id-5 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-5 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-5 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-5 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-5 div.sk-label-container {text-align: center;}#sk-container-id-5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-5 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-5\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" checked><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["train_data_prediction = logreg.predict(X_train)\n","train_data_accuracy = metrics.accuracy_score(Y_train,train_data_prediction)\n","print(train_data_accuracy)\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wIjoePKv7F2V","executionInfo":{"status":"ok","timestamp":1726122765878,"user_tz":-330,"elapsed":571,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"c86a54a6-25a1-45dd-ae63-7243e02e6724"},"execution_count":39,"outputs":[{"output_type":"stream","name":"stdout","text":["0.999375\n"]}]},{"cell_type":"code","source":["test_data_prediction = logreg.predict(X_test)\n","test_data_accuracy = metrics.accuracy_score(Y_test,test_data_prediction)\n","print(test_data_accuracy)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dXwXXN5O7o_R","executionInfo":{"status":"ok","timestamp":1726122777733,"user_tz":-330,"elapsed":661,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"256eaa4a-6ac2-4ba4-b1ae-2b1157b9df10"},"execution_count":41,"outputs":[{"output_type":"stream","name":"stdout","text":["1.0\n"]}]},{"cell_type":"code","source":["input_data = (29.29,\t98.29,\t200)\n","input_data_as_numpy_array = np.asarray(input_data)\n","input_data_reshaped = input_data_as_numpy_array.reshape(1,-1)\n","prediction = logreg.predict(input_data_reshaped)\n","\n","print(prediction)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Mn7Caa6i72a3","executionInfo":{"status":"ok","timestamp":1726122944335,"user_tz":-330,"elapsed":532,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"7d52a21c-19ee-435b-c438-a60adb8ba139"},"execution_count":46,"outputs":[{"output_type":"stream","name":"stdout","text":["[2]\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/base.py:465: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names\n","  warnings.warn(\n"]}]},{"cell_type":"code","source":["X_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"Y56OJs3_8XX4","executionInfo":{"status":"ok","timestamp":1726122920333,"user_tz":-330,"elapsed":573,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"f6bf5dd5-841f-4d90-fda6-6a7fbb95e2cb"},"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Humidity  Temperature  Step count\n","367      29.29        98.29         200\n","589      22.49        91.49         125\n","270      27.23        96.23         136\n","1930     26.22        95.22         177\n","525      22.61        91.61         107\n","...        ...          ...         ...\n","644      27.01        96.01         185\n","1559     25.72        94.72         198\n","900      27.73        96.73         186\n","990      29.05        98.05         176\n","1010     17.45        86.45          17\n","\n","[401 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-4f3c0db3-b116-40d2-b565-9f409e51373a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Humidity</th>\n","      <th>Temperature</th>\n","      <th>Step count</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>367</th>\n","      <td>29.29</td>\n","      <td>98.29</td>\n","      <td>200</td>\n","    </tr>\n","    <tr>\n","      <th>589</th>\n","      <td>22.49</td>\n","      <td>91.49</td>\n","      <td>125</td>\n","    </tr>\n","    <tr>\n","      <th>270</th>\n","      <td>27.23</td>\n","      <td>96.23</td>\n","      <td>136</td>\n","    </tr>\n","    <tr>\n","      <th>1930</th>\n","      <td>26.22</td>\n","      <td>95.22</td>\n","      <td>177</td>\n","    </tr>\n","    <tr>\n","      <th>525</th>\n","      <td>22.61</td>\n","      <td>91.61</td>\n","      <td>107</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>644</th>\n","      <td>27.01</td>\n","      <td>96.01</td>\n","      <td>185</td>\n","    </tr>\n","    <tr>\n","      <th>1559</th>\n","      <td>25.72</td>\n","      <td>94.72</td>\n","      <td>198</td>\n","    </tr>\n","    <tr>\n","      <th>900</th>\n","      <td>27.73</td>\n","      <td>96.73</td>\n","      <td>186</td>\n","    </tr>\n","    <tr>\n","      <th>990</th>\n","      <td>29.05</td>\n","      <td>98.05</td>\n","      <td>176</td>\n","    </tr>\n","    <tr>\n","      <th>1010</th>\n","      <td>17.45</td>\n","      <td>86.45</td>\n","      <td>17</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>401 rows × 3 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4f3c0db3-b116-40d2-b565-9f409e51373a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4f3c0db3-b116-40d2-b565-9f409e51373a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4f3c0db3-b116-40d2-b565-9f409e51373a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e7e54f49-d2e0-4e54-ad4d-4d26720ec852\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e7e54f49-d2e0-4e54-ad4d-4d26720ec852')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e7e54f49-d2e0-4e54-ad4d-4d26720ec852 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_a77df08c-233e-4d04-ab3b-8076678e662c\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('X_test')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_a77df08c-233e-4d04-ab3b-8076678e662c button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('X_test');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"X_test","summary":"{\n  \"name\": \"X_test\",\n  \"rows\": 401,\n  \"fields\": [\n    {\n      \"column\": \"Humidity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.766905435153674,\n        \"min\": 10.02,\n        \"max\": 29.91,\n        \"num_unique_values\": 401,\n        \"samples\": [\n          11.78,\n          12.05,\n          14.46\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Temperature\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.766905435153674,\n        \"min\": 79.02,\n        \"max\": 98.91,\n        \"num_unique_values\": 401,\n        \"samples\": [\n          80.78,\n          81.05,\n          83.46\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Step count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 57,\n        \"min\": 1,\n        \"max\": 200,\n        \"num_unique_values\": 176,\n        \"samples\": [\n          32,\n          35,\n          47\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":["Y_test"],"metadata":{"id":"MA0FUsVP8fYF","executionInfo":{"status":"ok","timestamp":1726122953573,"user_tz":-330,"elapsed":702,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"611a8ab8-a91b-4d2e-b8d2-61ed3347eb99","colab":{"base_uri":"https://localhost:8080/","height":458}},"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["367     2\n","589     1\n","270     2\n","1930    2\n","525     1\n","       ..\n","644     2\n","1559    2\n","900     2\n","990     2\n","1010    1\n","Name: Stress Level, Length: 401, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Stress Level</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>367</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>589</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>270</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1930</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>525</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>644</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1559</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>900</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>990</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1010</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>401 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":47}]}]}