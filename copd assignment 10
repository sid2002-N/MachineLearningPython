{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPYfZzKNFfu2wMXe8MacRLh"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":42,"metadata":{"id":"5vVTeKFm-8lJ","executionInfo":{"status":"ok","timestamp":1726125431388,"user_tz":-330,"elapsed":401,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.model_selection import train_test_split\n","from sklearn import metrics\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.naive_bayes import GaussianNB\n","from sklearn import svm\n","from sklearn.ensemble import RandomForestClassifier"]},{"cell_type":"code","source":["from google.colab import files\n","files.upload()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":275},"id":"CA28NUbwB-7m","executionInfo":{"status":"ok","timestamp":1726124465408,"user_tz":-330,"elapsed":62961,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"b49ae094-5210-4660-fa4d-8e8698b02b43"},"execution_count":3,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-a9756e72-3f6e-40df-a5d8-dcd1fb88303d\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-a9756e72-3f6e-40df-a5d8-dcd1fb88303d\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script>// Copyright 2017 Google LLC\n","//\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n","// you may not use this file except in compliance with the License.\n","// You may obtain a copy of the License at\n","//\n","//      http://www.apache.org/licenses/LICENSE-2.0\n","//\n","// Unless required by applicable law or agreed to in writing, software\n","// distributed under the License is distributed on an \"AS IS\" BASIS,\n","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","// See the License for the specific language governing permissions and\n","// limitations under the License.\n","\n","/**\n"," * @fileoverview Helpers for google.colab Python module.\n"," */\n","(function(scope) {\n","function span(text, styleAttributes = {}) {\n","  const element = document.createElement('span');\n","  element.textContent = text;\n","  for (const key of Object.keys(styleAttributes)) {\n","    element.style[key] = styleAttributes[key];\n","  }\n","  return element;\n","}\n","\n","// Max number of bytes which will be uploaded at a time.\n","const MAX_PAYLOAD_SIZE = 100 * 1024;\n","\n","function _uploadFiles(inputId, outputId) {\n","  const steps = uploadFilesStep(inputId, outputId);\n","  const outputElement = document.getElementById(outputId);\n","  // Cache steps on the outputElement to make it available for the next call\n","  // to uploadFilesContinue from Python.\n","  outputElement.steps = steps;\n","\n","  return _uploadFilesContinue(outputId);\n","}\n","\n","// This is roughly an async generator (not supported in the browser yet),\n","// where there are multiple asynchronous steps and the Python side is going\n","// to poll for completion of each step.\n","// This uses a Promise to block the python side on completion of each step,\n","// then passes the result of the previous step as the input to the next step.\n","function _uploadFilesContinue(outputId) {\n","  const outputElement = document.getElementById(outputId);\n","  const steps = outputElement.steps;\n","\n","  const next = steps.next(outputElement.lastPromiseValue);\n","  return Promise.resolve(next.value.promise).then((value) => {\n","    // Cache the last promise value to make it available to the next\n","    // step of the generator.\n","    outputElement.lastPromiseValue = value;\n","    return next.value.response;\n","  });\n","}\n","\n","/**\n"," * Generator function which is called between each async step of the upload\n"," * process.\n"," * @param {string} inputId Element ID of the input file picker element.\n"," * @param {string} outputId Element ID of the output display.\n"," * @return {!Iterable<!Object>} Iterable of next steps.\n"," */\n","function* uploadFilesStep(inputId, outputId) {\n","  const inputElement = document.getElementById(inputId);\n","  inputElement.disabled = false;\n","\n","  const outputElement = document.getElementById(outputId);\n","  outputElement.innerHTML = '';\n","\n","  const pickedPromise = new Promise((resolve) => {\n","    inputElement.addEventListener('change', (e) => {\n","      resolve(e.target.files);\n","    });\n","  });\n","\n","  const cancel = document.createElement('button');\n","  inputElement.parentElement.appendChild(cancel);\n","  cancel.textContent = 'Cancel upload';\n","  const cancelPromise = new Promise((resolve) => {\n","    cancel.onclick = () => {\n","      resolve(null);\n","    };\n","  });\n","\n","  // Wait for the user to pick the files.\n","  const files = yield {\n","    promise: Promise.race([pickedPromise, cancelPromise]),\n","    response: {\n","      action: 'starting',\n","    }\n","  };\n","\n","  cancel.remove();\n","\n","  // Disable the input element since further picks are not allowed.\n","  inputElement.disabled = true;\n","\n","  if (!files) {\n","    return {\n","      response: {\n","        action: 'complete',\n","      }\n","    };\n","  }\n","\n","  for (const file of files) {\n","    const li = document.createElement('li');\n","    li.append(span(file.name, {fontWeight: 'bold'}));\n","    li.append(span(\n","        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n","        `last modified: ${\n","            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n","                                    'n/a'} - `));\n","    const percent = span('0% done');\n","    li.appendChild(percent);\n","\n","    outputElement.appendChild(li);\n","\n","    const fileDataPromise = new Promise((resolve) => {\n","      const reader = new FileReader();\n","      reader.onload = (e) => {\n","        resolve(e.target.result);\n","      };\n","      reader.readAsArrayBuffer(file);\n","    });\n","    // Wait for the data to be ready.\n","    let fileData = yield {\n","      promise: fileDataPromise,\n","      response: {\n","        action: 'continue',\n","      }\n","    };\n","\n","    // Use a chunked sending to avoid message size limits. See b/62115660.\n","    let position = 0;\n","    do {\n","      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n","      const chunk = new Uint8Array(fileData, position, length);\n","      position += length;\n","\n","      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n","      yield {\n","        response: {\n","          action: 'append',\n","          file: file.name,\n","          data: base64,\n","        },\n","      };\n","\n","      let percentDone = fileData.byteLength === 0 ?\n","          100 :\n","          Math.round((position / fileData.byteLength) * 100);\n","      percent.textContent = `${percentDone}% done`;\n","\n","    } while (position < fileData.byteLength);\n","  }\n","\n","  // All done.\n","  yield {\n","    response: {\n","      action: 'complete',\n","    }\n","  };\n","}\n","\n","scope.google = scope.google || {};\n","scope.google.colab = scope.google.colab || {};\n","scope.google.colab._files = {\n","  _uploadFiles,\n","  _uploadFilesContinue,\n","};\n","})(self);\n","</script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving dataset.csv to dataset.csv\n"]},{"output_type":"execute_result","data":{"text/plain":["{'dataset.csv': b',ID,AGE,PackHistory,COPDSEVERITY,MWT1,MWT2,MWT1Best,FEV1,FEV1PRED,FVC,FVCPRED,CAT,HAD,SGRQ,AGEquartiles,copd,gender,smoking,Diabetes,muscular,hypertension,AtrialFib,IHD\\r\\n1,58,77,60,SEVERE,120,120,120,1.21,36,2.4,98,25,8,69.55,4,3,1,2,1,0,0,1,0\\r\\n2,57,79,50,MODERATE,165,176,176,1.09,56,1.64,65,12,21,44.24,4,2,0,2,1,0,0,1,1\\r\\n3,62,80,11,MODERATE,201,180,201,1.52,68,2.3,86,22,18,44.09,4,2,0,2,1,0,0,1,0\\r\\n4,145,56,60,VERY SEVERE,210,210,210,0.47,14,1.14,27,28,26,62.04,1,4,1,2,0,0,1,1,0\\r\\n5,136,65,68,SEVERE,204,210,210,1.07,42,2.91,98,32,18,75.56,1,3,1,2,0,1,1,0,0\\r\\n6,84,67,26,MODERATE,216,180,216,1.09,50,1.99,60,29,21,73.82,2,2,0,1,1,0,0,1,0\\r\\n7,93,67,50,SEVERE,214,237,237,0.69,35,1.31,48,29,30,77.44,2,3,0,1,1,0,0,1,0\\r\\n8,27,83,90,SEVERE,214,237,237,0.68,32,2.23,77,22,2,45.41,4,3,1,2,1,0,0,1,0\\r\\n9,114,72,50,MODERATE,231,237,237,2.13,63,4.38,80,25,6,69.61,3,2,1,1,1,0,0,1,0\\r\\n10,152,75,6,SEVERE,226,240,240,1.06,46,2.06,75,31,20,55.56,3,3,0,2,0,1,0,0,0\\r\\n11,166,76,6,SEVERE,226,240,240,1.1,46,2.06,75,31,20,55.56,3,3,0,2,1,1,0,1,0\\r\\n12,139,59,28,VERY SEVERE,240,230,240,0.68,29,2.02,73,23,18,55.23,1,4,0,2,0,0,0,1,0\\r\\n13,49,64,30,VERY SEVERE,246,234,246,0.45,17,1.56,45,15,22,50.53,1,4,1,2,1,0,0,1,0\\r\\n14,80,74,75,MILD,213,270,270,1.79,83,2.62,102,24,19,45,3,1,0,1,0,0,0,1,0\\r\\n15,162,70,103,MODERATE,264,271,271,1.2,52,2.09,121,12,1,39.66,2,2,0,2,0,0,0,0,0\\r\\n16,162,71,105,MODERATE,264,271,271,0.72,52,2.09,121,12,1,39.66,2,2,0,2,0,0,0,0,0\\r\\n17,41,69,78,SEVERE,243,273,273,1.46,46,3.33,81,15,10,28.86,2,3,1,2,1,0,0,1,0\\r\\n18,1,55,109,MODERATE,281,273,281,1.54,72,2.15,85,28,29,76.5,1,2,0,2,0,0,0,0,0\\r\\n19,153,72,15,VERY SEVERE,289,267,289,0.6,24,1.81,55,30,6,38.74,3,4,1,2,0,0,0,0,0\\r\\n20,167,72,15,VERY SEVERE,289,267,289,0.89,24,1.81,55,30,6,38.74,3,4,1,2,0,0,0,0,0\\r\\n21,138,74,24,VERY SEVERE,267,295,295,0.51,27,2.06,89,26,30,71.21,3,4,0,2,0,0,0,0,0\\r\\n22,48,75,40,VERY SEVERE,297,291,297,0.79,30,1.81,51,22,9,35.79,3,4,1,1,0,0,0,0,0\\r\\n23,110,69,15,SEVERE,300,300,300,0.91,39,2.9,105,29,9,58.78,2,3,0,2,0,0,0,0,0\\r\\n24,15,73,75,SEVERE,300,243,300,1.46,3.39,2.37,53,18,14,34.71,3,3,1,2,1,0,0,0,0\\r\\n25,70,75,45,MILD,282,300,300,2.35,85,4.12,112,23,19,58.25,3,1,1,2,0,0,0,0,0\\r\\n26,63,80,67,MODERATE,300,305,305,1.77,58,2.77,67,32,26,67.66,4,2,1,2,0,0,0,0,0\\r\\n27,81,76,38,SEVERE,281,312,312,1.06,32,3.11,70,25,11,56.8,4,3,1,1,0,0,0,0,0\\r\\n28,11,73,31,MODERATE,336,336,336,1.88,70,2.71,70,26,13,66.51,3,2,1,2,0,1,0,0,0\\r\\n29,31,77,75,MODERATE,322,338,338,1.92,68,2.66,69,16,2,36.39,4,2,1,2,0,1,0,1,0\\r\\n30,68,88,1,SEVERE,350,350,350,1.3,37,2,70,11,1,47.2,4,3,1,2,1,0,1,0,1\\r\\n31,97,44,30,SEVERE,360,368,368,1.66,42,3.08,63,30,17,72.24,1,3,1,2,0,0,0,0,0\\r\\n32,127,82,45,SEVERE,345,369,369,1.18,46,2.57,73,10,6,37.04,4,3,1,2,0,1,0,0,0\\r\\n33,42,73,38,MODERATE,315,369,369,1.86,70,3.69,105,11,16,35.81,3,2,1,2,1,0,0,0,1\\r\\n34,144,64,40,MODERATE,372,369,372,1.81,77,3.24,109,17,14,27.27,1,2,0,2,0,0,0,0,0\\r\\n35,69,76,23,MODERATE,375,360,375,2.01,76,3.63,103,23,23,37.71,4,2,1,2,0,0,0,0,0\\r\\n36,94,83,11,SEVERE,375,374,375,1.11,44,2.04,60,14,5,25.34,4,3,1,2,0,0,0,0,0\\r\\n37,24,65,66,MODERATE,363,383,383,2,75,3.35,107,5,5,25.02,1,2,0,2,0,0,0,1,0\\r\\n38,61,74,64,MODERATE,384,372,384,2.37,74,4.7,111,20,12,43.57,3,2,1,2,0,1,0,0,0\\r\\n39,36,70,50,SEVERE,390,370,390,1.07,42,2.91,88,25,10,64.68,2,3,1,2,0,0,0,1,0\\r\\n40,79,71,20,MILD,390,390,390,1.32,85,2.27,119,11,8,38.43,2,1,0,2,1,0,0,0,0\\r\\n41,51,78,37.5,MODERATE,390,391,391,1.6,59,2.68,60,5,6,27.52,4,2,1,2,0,0,0,0,0\\r\\n42,116,75,10,MODERATE,370,396,396,0.92,50,2.29,102,13,12,54.49,3,2,0,2,0,0,0,0,0\\r\\n43,37,67,36,MODERATE,400,393,400,1.79,62,3.19,84,23,10,50.03,2,2,1,2,0,0,0,0,1\\r\\n44,46,78,55,SEVERE,402,396,402,1.6,43,3.87,107,5,7,38.21,4,3,1,2,0,0,1,1,0\\r\\n45,67,73,59,MODERATE,405,405,405,2.43,75,5.37,125,16,18,19.94,3,2,1,2,0,0,0,0,0\\r\\n46,131,53,35,MILD,406,378,406,2.06,52,3.77,76,21,23,72.56,1,1,1,1,1,1,0,0,0\\r\\n47,122,64,90,SEVERE,416,390,416,1.26,44,2.1,58,18,15,42.01,1,3,1,2,0,0,1,0,0\\r\\n48,154,81,54,MODERATE,347,419,419,1.48,62,2.29,71,5,2,16.29,4,2,1,2,1,0,0,0,0\\r\\n49,168,82,54,MODERATE,347,419,419,1.34,62,2.29,71,5,2,16.29,4,2,1,2,0,0,0,1,0\\r\\n50,8,71,3,MILD,420,398,420,1.67,93,2.58,118,21,1,29.29,3,1,0,2,0,0,0,0,0\\r\\n51,73,65,34,MODERATE,420,420,420,1.45,61,2.85,101,27,14,41.1,1,2,0,1,0,1,0,0,0\\r\\n52,39,71,20,MILD,423,392,423,2.97,102,3.5,90,16,4,38.57,2,1,1,2,0,0,1,0,0\\r\\n53,101,78,55,MODERATE,431,401,431,1.78,60,4,100,18,7,28.51,4,2,1,2,0,0,0,0,0\\r\\n54,150,73,34,SEVERE,427,432,432,0.72,37,1.47,62,23,11,32.47,3,3,0,2,0,1,0,0,0\\r\\n55,164,72,34,SEVERE,427,432,432,0.73,37,1.47,62,23,11,32.47,3,3,0,2,1,1,0,0,0\\r\\n56,6,63,44,SEVERE,435,437,437,1.28,40,3.56,87,20,17,62.09,1,3,1,2,0,0,1,0,0\\r\\n57,91,60,14,MODERATE,NA,438,438,2.12,76,3.62,97,14,22,51.77,1,2,1,2,0,0,1,0,0\\r\\n58,71,75,45,MILD,439,437,439,2.62,86,4.9,122,6,4,18.72,3,1,1,2,0,1,0,0,0\\r\\n59,2,73,49,MODERATE,445,420,445,1.42,62,2.14,79,20,9,46.77,3,2,0,1,0,0,0,0,0\\r\\n60,65,66,20,MILD,450,435,450,3.02,98,5.23,132,12,4,17.97,2,1,1,2,0,0,0,1,0\\r\\n61,159,80,3,MILD,435,451,451,1.97,90,2.33,84,188,6,36.74,4,1,1,2,0,1,0,0,0\\r\\n62,159,81,3,MILD,435,451,451,1.83,90,2.33,84,18,6,36.74,4,1,1,2,1,1,0,0,0\\r\\n63,45,73,100,SEVERE,451,315,451,1.26,40,2.28,53,23,10,15.05,3,3,1,2,0,1,0,0,0\\r\\n64,151,71,47,MODERATE,453,450,453,1.28,60,2.29,84,9,12,28.41,2,2,0,2,0,0,0,0,0\\r\\n65,165,69,47,MODERATE,453,450,453,0.65,60,2.29,84,9,12,28.41,2,2,0,2,0,0,0,0,0\\r\\n66,64,74,55,MILD,450,458,458,3.06,95,4.46,104,17,6,24.48,3,1,1,2,0,1,1,0,0\\r\\n67,76,62,80,MILD,459,453,459,1.93,61,3.39,123,6,8,10.01,1,1,0,2,0,0,0,1,0\\r\\n68,156,68,20,SEVERE,435,459,459,1.12,37,3.22,81,24,15,61.97,2,3,1,2,0,0,0,0,0\\r\\n69,158,70,36,MILD,419,459,459,2.11,90,3.51,125,5,0,10.92,2,1,0,2,0,0,0,0,0\\r\\n70,169,67,20,SEVERE,435,459,459,1.11,37,3.22,81,24,15,61.97,2,3,1,2,0,0,0,0,0\\r\\n71,158,70,36,MILD,419,459,459,1.89,90,3.51,125,5,0,10.92,2,1,0,2,0,0,0,0,0\\r\\n72,140,49,39,VERY SEVERE,461,460,461,0.74,27,2.31,72,13,11,28.33,1,4,0,2,0,0,0,0,0\\r\\n73,3,75,5,MODERATE,462,423,462,2.43,79,4.33,107,16,4,47.88,3,2,1,2,0,0,0,0,0\\r\\n74,30,73,60,MODERATE,443,462,462,1.92,66,3.76,98,19,7,56.96,3,2,1,2,0,1,0,0,1\\r\\n75,54,78,30,SEVERE,420,465,465,1.14,36,3.04,72,14,6,34.46,4,3,1,2,0,0,0,0,0\\r\\n76,143,67,45,MILD,460,466,466,2.79,88,4.11,118,10,11,29.98,2,1,1,1,0,0,0,0,0\\r\\n77,157,75,30,MODERATE,469,399,469,1.64,59,3.1,79,16,9,32.38,4,2,1,1,0,0,0,0,0\\r\\n78,157,76,30,MODERATE,469,399,469,1.74,59,3.1,79,16,9,32.38,4,2,1,1,0,0,0,0,0\\r\\n79,34,63,50,MODERATE,476,414,476,1.69,68,2.31,73,14,15,47.36,1,2,0,2,1,0,0,0,0\\r\\n80,78,65,6,MILD,468,480,480,3.18,85,4.54,101,25,7,56.2,1,1,0,2,0,0,0,0,0\\r\\n81,18,65,20,MILD,468,480,480,2.13,92,3.2,116,25,56.2,2,1,1,0,2,0,0,1,0,0\\r\\n82,52,62,8,MODERATE,459,480,480,2.52,79,3.89,65,15,12,32.69,1,2,1,2,0,0,1,0,0\\r\\n83,146,63,20,MODERATE,474,489,489,1.01,54,2.48,110,7,2,17.95,1,2,0,2,0,0,0,0,0\\r\\n84,104,64,35,SEVERE,474,489,489,0.82,46,1.52,70,26,17,67.56,1,3,0,1,0,0,0,0,0\\r\\n85,92,72,75,SEVERE,492,440,492,0.94,30,2.47,60,22,13,45.3,3,3,1,2,1,0,0,0,0\\r\\n86,87,61,9,MODERATE,496,492,496,1.37,55,2.42,81,12,5,39.51,1,2,0,1,0,0,0,0,0\\r\\n87,16,60,10,MODERATE,492,498,498,1.96,3.29,4.01,96,12,3,24.52,1,2,1,2,0,0,0,0,0\\r\\n88,133,78,51,MODERATE,501,496,501,1.23,76,1.89,95,22,8,33.69,4,2,0,2,0,0,0,0,1\\r\\n89,90,67,20,MODERATE,496,505,505,2.74,75,4.54,96,5,7,8.12,2,2,1,2,0,0,0,0,0\\r\\n90,111,68,30,MILD,510,518,518,1.75,61,5.15,111,14,6,33.2,2,1,1,1,0,0,0,0,0\\r\\n91,118,72,30,MILD,510,525,525,2.8,80,4.39,95,23,9,42.88,3,1,1,2,0,0,0,0,0\\r\\n92,149,69,27,MODERATE,495,531,531,1.89,69,2.61,72,3,0,8.25,2,2,1,2,0,0,0,0,0\\r\\n93,163,68,27,MODERATE,495,531,531,1.89,69,2.61,72,3,0,8.25,2,2,1,2,0,0,0,0,0\\r\\n94,112,52,40,MILD,483,540,540,2.93,75,3.63,75,12,2,25.62,1,1,1,1,0,0,0,0,0\\r\\n95,135,55,40,MILD,522,540,540,2.75,85,4.54,96,22,10,58.41,1,1,1,2,1,0,0,0,1\\r\\n96,12,72,30,MODERATE,558,563,558,1.61,61,3.14,91,18,12,34.64,3,2,1,2,0,0,0,0,1\\r\\n97,10,68,25,MILD,511,575,575,2.7,98,3.87,108,20,7,35.84,2,1,1,2,0,1,0,0,0\\r\\n98,43,75,40,MILD,576,577,577,2.9,93,4.72,114,9,22,15.05,3,1,1,2,0,1,0,0,1\\r\\n99,74,68,30,MODERATE,468,582,582,1.65,67,2.8,88,4,1,19.7,2,2,0,2,0,0,1,0,0\\r\\n100,108,54,30,SEVERE,688,699,699,1.72,44,4.07,82,10,10,20.55,1,3,1,2,0,0,0,0,0\\r\\n101,85,78,55,MODERATE,NA,NA,NA,1.15,54,2.01,85,18,7,30.21,4,2,1,2,0,0,0,0,0\\r\\n'}"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["copd_data = pd.read_csv('dataset.csv')\n","copd_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":478},"id":"5yrwBTt9CTCr","executionInfo":{"status":"ok","timestamp":1726124513443,"user_tz":-330,"elapsed":1386,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"4c16f978-3ecc-4a76-f33e-8675e6eed0ec"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Unnamed: 0   ID  AGE  PackHistory COPDSEVERITY   MWT1   MWT2  MWT1Best  \\\n","0             1   58   77         60.0       SEVERE  120.0  120.0     120.0   \n","1             2   57   79         50.0     MODERATE  165.0  176.0     176.0   \n","2             3   62   80         11.0     MODERATE  201.0  180.0     201.0   \n","3             4  145   56         60.0  VERY SEVERE  210.0  210.0     210.0   \n","4             5  136   65         68.0       SEVERE  204.0  210.0     210.0   \n","..          ...  ...  ...          ...          ...    ...    ...       ...   \n","96           97   10   68         25.0         MILD  511.0  575.0     575.0   \n","97           98   43   75         40.0         MILD  576.0  577.0     577.0   \n","98           99   74   68         30.0     MODERATE  468.0  582.0     582.0   \n","99          100  108   54         30.0       SEVERE  688.0  699.0     699.0   \n","100         101   85   78         55.0     MODERATE    NaN    NaN       NaN   \n","\n","     FEV1  FEV1PRED  ...   SGRQ  AGEquartiles  copd  gender  smoking  \\\n","0    1.21      36.0  ...  69.55             4     3       1        2   \n","1    1.09      56.0  ...  44.24             4     2       0        2   \n","2    1.52      68.0  ...  44.09             4     2       0        2   \n","3    0.47      14.0  ...  62.04             1     4       1        2   \n","4    1.07      42.0  ...  75.56             1     3       1        2   \n","..    ...       ...  ...    ...           ...   ...     ...      ...   \n","96   2.70      98.0  ...  35.84             2     1       1        2   \n","97   2.90      93.0  ...  15.05             3     1       1        2   \n","98   1.65      67.0  ...  19.70             2     2       0        2   \n","99   1.72      44.0  ...  20.55             1     3       1        2   \n","100  1.15      54.0  ...  30.21             4     2       1        2   \n","\n","     Diabetes  muscular  hypertension  AtrialFib  IHD  \n","0           1         0             0          1    0  \n","1           1         0             0          1    1  \n","2           1         0             0          1    0  \n","3           0         0             1          1    0  \n","4           0         1             1          0    0  \n","..        ...       ...           ...        ...  ...  \n","96          0         1             0          0    0  \n","97          0         1             0          0    1  \n","98          0         0             1          0    0  \n","99          0         0             0          0    0  \n","100         0         0             0          0    0  \n","\n","[101 rows x 24 columns]"],"text/html":["\n","  <div id=\"df-d586faff-549d-4c5e-a753-c28325aff1e6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>ID</th>\n","      <th>AGE</th>\n","      <th>PackHistory</th>\n","      <th>COPDSEVERITY</th>\n","      <th>MWT1</th>\n","      <th>MWT2</th>\n","      <th>MWT1Best</th>\n","      <th>FEV1</th>\n","      <th>FEV1PRED</th>\n","      <th>...</th>\n","      <th>SGRQ</th>\n","      <th>AGEquartiles</th>\n","      <th>copd</th>\n","      <th>gender</th>\n","      <th>smoking</th>\n","      <th>Diabetes</th>\n","      <th>muscular</th>\n","      <th>hypertension</th>\n","      <th>AtrialFib</th>\n","      <th>IHD</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>58</td>\n","      <td>77</td>\n","      <td>60.0</td>\n","      <td>SEVERE</td>\n","      <td>120.0</td>\n","      <td>120.0</td>\n","      <td>120.0</td>\n","      <td>1.21</td>\n","      <td>36.0</td>\n","      <td>...</td>\n","      <td>69.55</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>57</td>\n","      <td>79</td>\n","      <td>50.0</td>\n","      <td>MODERATE</td>\n","      <td>165.0</td>\n","      <td>176.0</td>\n","      <td>176.0</td>\n","      <td>1.09</td>\n","      <td>56.0</td>\n","      <td>...</td>\n","      <td>44.24</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>62</td>\n","      <td>80</td>\n","      <td>11.0</td>\n","      <td>MODERATE</td>\n","      <td>201.0</td>\n","      <td>180.0</td>\n","      <td>201.0</td>\n","      <td>1.52</td>\n","      <td>68.0</td>\n","      <td>...</td>\n","      <td>44.09</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>145</td>\n","      <td>56</td>\n","      <td>60.0</td>\n","      <td>VERY SEVERE</td>\n","      <td>210.0</td>\n","      <td>210.0</td>\n","      <td>210.0</td>\n","      <td>0.47</td>\n","      <td>14.0</td>\n","      <td>...</td>\n","      <td>62.04</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>136</td>\n","      <td>65</td>\n","      <td>68.0</td>\n","      <td>SEVERE</td>\n","      <td>204.0</td>\n","      <td>210.0</td>\n","      <td>210.0</td>\n","      <td>1.07</td>\n","      <td>42.0</td>\n","      <td>...</td>\n","      <td>75.56</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>96</th>\n","      <td>97</td>\n","      <td>10</td>\n","      <td>68</td>\n","      <td>25.0</td>\n","      <td>MILD</td>\n","      <td>511.0</td>\n","      <td>575.0</td>\n","      <td>575.0</td>\n","      <td>2.70</td>\n","      <td>98.0</td>\n","      <td>...</td>\n","      <td>35.84</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>97</th>\n","      <td>98</td>\n","      <td>43</td>\n","      <td>75</td>\n","      <td>40.0</td>\n","      <td>MILD</td>\n","      <td>576.0</td>\n","      <td>577.0</td>\n","      <td>577.0</td>\n","      <td>2.90</td>\n","      <td>93.0</td>\n","      <td>...</td>\n","      <td>15.05</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>98</th>\n","      <td>99</td>\n","      <td>74</td>\n","      <td>68</td>\n","      <td>30.0</td>\n","      <td>MODERATE</td>\n","      <td>468.0</td>\n","      <td>582.0</td>\n","      <td>582.0</td>\n","      <td>1.65</td>\n","      <td>67.0</td>\n","      <td>...</td>\n","      <td>19.70</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>99</th>\n","      <td>100</td>\n","      <td>108</td>\n","      <td>54</td>\n","      <td>30.0</td>\n","      <td>SEVERE</td>\n","      <td>688.0</td>\n","      <td>699.0</td>\n","      <td>699.0</td>\n","      <td>1.72</td>\n","      <td>44.0</td>\n","      <td>...</td>\n","      <td>20.55</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>100</th>\n","      <td>101</td>\n","      <td>85</td>\n","      <td>78</td>\n","      <td>55.0</td>\n","      <td>MODERATE</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.15</td>\n","      <td>54.0</td>\n","      <td>...</td>\n","      <td>30.21</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>101 rows × 24 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d586faff-549d-4c5e-a753-c28325aff1e6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d586faff-549d-4c5e-a753-c28325aff1e6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d586faff-549d-4c5e-a753-c28325aff1e6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-76a6abac-256e-4e7d-b645-1fc1c3b77b45\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-76a6abac-256e-4e7d-b645-1fc1c3b77b45')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-76a6abac-256e-4e7d-b645-1fc1c3b77b45 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_dae31e5c-28da-4905-b0ca-7d6727b7a07e\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('copd_data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_dae31e5c-28da-4905-b0ca-7d6727b7a07e button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('copd_data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"copd_data"}},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["copd_data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Re5ro9MlCdrR","executionInfo":{"status":"ok","timestamp":1726124523909,"user_tz":-330,"elapsed":434,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"86641c13-60af-4ddc-8792-52e5fa5997ce"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 101 entries, 0 to 100\n","Data columns (total 24 columns):\n"," #   Column        Non-Null Count  Dtype  \n","---  ------        --------------  -----  \n"," 0   Unnamed: 0    101 non-null    int64  \n"," 1   ID            101 non-null    int64  \n"," 2   AGE           101 non-null    int64  \n"," 3   PackHistory   101 non-null    float64\n"," 4   COPDSEVERITY  101 non-null    object \n"," 5   MWT1          99 non-null     float64\n"," 6   MWT2          100 non-null    float64\n"," 7   MWT1Best      100 non-null    float64\n"," 8   FEV1          101 non-null    float64\n"," 9   FEV1PRED      101 non-null    float64\n"," 10  FVC           101 non-null    float64\n"," 11  FVCPRED       101 non-null    int64  \n"," 12  CAT           101 non-null    int64  \n"," 13  HAD           101 non-null    float64\n"," 14  SGRQ          101 non-null    float64\n"," 15  AGEquartiles  101 non-null    int64  \n"," 16  copd          101 non-null    int64  \n"," 17  gender        101 non-null    int64  \n"," 18  smoking       101 non-null    int64  \n"," 19  Diabetes      101 non-null    int64  \n"," 20  muscular      101 non-null    int64  \n"," 21  hypertension  101 non-null    int64  \n"," 22  AtrialFib     101 non-null    int64  \n"," 23  IHD           101 non-null    int64  \n","dtypes: float64(9), int64(14), object(1)\n","memory usage: 19.1+ KB\n"]}]},{"cell_type":"code","source":["C = copd_data['COPDSEVERITY'].value_counts()"],"metadata":{"id":"qQd6LEWiCgbj","executionInfo":{"status":"ok","timestamp":1726125077501,"user_tz":-330,"elapsed":428,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}}},"execution_count":26,"outputs":[]},{"cell_type":"code","source":["plt.figure(figsize = (6,6))\n","sns.barplot(x = 'COPDSEVERITY', y = 'AGE', data = copd_data)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":560},"id":"EcRoMoIjCtFN","executionInfo":{"status":"ok","timestamp":1726124691792,"user_tz":-330,"elapsed":938,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"69e10262-b9ef-4a39-bff1-c07b3889f2fa"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='COPDSEVERITY', ylabel='AGE'>"]},"metadata":{},"execution_count":11},{"output_type":"display_data","data":{"text/plain":["<Figure size 600x600 with 1 Axes>"],"image/png":"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8vb2toqKikpdpiy1DR482OrZs6dbf7du3axhw4Y5py/32VHSur799ltLkvXhhx86+0r7fbiWled9f/Fn6+U+a0vbLs8995zl5eVlfffddxX0LKoG9kxcBf7+/vL399fKlStdbo9eHg8++KAKCgr0wQcfOPssy9LChQs1atQo1ahR44rGLS4u1vLly3XixAn5+Phc0RjXkjFjxsjhcDinFyxY4PJtqz///LPWr1+vP/7xj6pVq5bLY0NDQ/Xggw/q/fffv+zteuPi4lSvXr0S//Msq9zcXOchkAu3nWVZcjgcGjlypCIiItSyZUuX35vqztvbWw899JBSUlJcXudly5bp3LlzGjFixBWPffToUaWmpqpGjRrO91RcXJx69uypMWPG6I033tDu3btd9lRcLDQ0VGfPnlVqaurlb9t8CfHx8dq4caN+/PFHZ9/+/fu1ZcsWlz2R5fXrr79q0aJFksR7/t8u976vSBMmTJBlWfrwww8rZXxPIUxcBd7e3kpJSdHChQsVGBiorl276umnn9a3337rstxf/vIXZ/A4384f1wwKCtKgQYNcDnVs2rRJBw8edPulX7Nmjds406dPL3Fdvr6+GjJkiOrVq6c//OEPbrU3btzYZZybbrqpol6WKmnkyJH65JNP9OOPP+rHH3/Up59+6rI7ee/evbIsS23bti3x8W3bttWJEyd07NixS67Hy8tLrVu31sGDB136R4wY4bbtDh065LLM+W0SGBioxYsXq3///i7HtT/66COdPn3aeax/5MiRmj9/fnleBpf1VMVtP2bMGO3bt0+bN2929jkcDsXGxrrdlKhLly5ur+mFcnNz5e/vrzp16igkJESbNm1SQkKC6tSp41zmrbfe0u7du/XEE0/orbfeUoMGDUqtrXPnznr66af1wAMPqH79+urdu7deeeUVt0MKl6stJiZGYWFhLn/kUlJSFB4erp49e7qMc6nPjovXVadOHc2cOVORkZFu4+zatcttnJLOJ7jWXO59X5GCgoLUsGFDt/d+dVflv077WhEbG6s+ffpo69atSk9P19q1a/Xyyy/rnXfecZ7gM3nyZJeT/CTphhtucP48ZswYxcTEaN++fWrRooUWLFigbt26qWXLli6P6d69u+bOnevSFxQU5DJ9fl1ZWVmaPHmy/vjHP7qNI/12QlvdunWd0zVr1rySp19tNGjQQH369HH+19unTx/Vr1/fbTmT/zgvHMNms7n0zZo1S9HR0S59F9/6d+vWrapdu7bS09M1ffp0zZs3z2X+ggULNGzYMHl7//b2HjFihCZPnuz8vSmrqrztIyIi1KVLFy1YsEB33323fvjhB23dulXTpk1zW/b9998vNfxJUt26dfXVV1+pqKhIa9eu1Xvvved2TLthw4Z65JFHtHLlykuedHfeiy++qEmTJmnjxo3avn275s2bp+nTp2vLli265ZZbylRbjRo1FBcXp5SUFE2ZMsW5J3L06NHy8nL9P/Bynx3n1xUREaHdu3frySefVEpKits2bdOmjVatWuXSd63fEVMq+/u+opT03q/uCBNXkZ+fn3r16qVevXrp2Wef1R/+8AdNmTLF+SFQv379Ev+gn9ezZ081adJEKSkpmjx5slasWFHi7tY6depccpwL19WyZUstW7ZMt9xyizp27Kh27dq5LNe8efPr6hbu0m+h7bHHHpMkJScnu8xr2bKlbDab9uzZo0GDBrk9ds+ePapXr94l/3OVpHPnzmnv3r3q1KmTS39oaOhlt935bdKmTRsdPXpUw4YN05YtWyT9dhgmNTVVRUVFLoHy3LlzWrBgQblO/Krq2z4+Pl7jx49XcnKyHA6HWrRooW7durktFx4efsnX1MvLyzm/bdu22rdvn8aNG6f//u//dlnO29vbGdDKIjg4WEOHDtXQoUM1ffp03XrrrZo5c6YWLlxY5trGjBmjpKQkbdy4UcXFxcrMzCxx9/vlPjvOr6tVq1Zq1aqVzp49q0GDBmn37t0u95bw8fG57DjXqku97yvS8ePHdezYMTVv3rzS1uEJHObwoHbt2rmd3X0pXl5eGj16tBYuXKjFixfLx8dHQ4YMMa4jPDxcw4YNU2JiovFY14J7771XhYWFKioqcrssMDg4WL169dKcOXNczv6WpOzsbL333nsaNmzYZf/rWLhwoU6cOKHY2FijWhMSErR7926lpqZKkt577z01btxY33zzjXbu3Olsr776qlJSUnTu3Dmj9VUl999/v7y8vLR48WItWrRIY8aMqZD/9p566im9//77+uqrryqgyt/4+PioRYsW5Xq/S3IGpAULFsjhcCg6OlpNmzY1rmfIkCHy9vbWnDlzjMe6VlzqfV+RXn/9dXl5eZVpD1d1wp6Jq+D48eMaOnSoxowZo/bt26tu3br68ssv9fLLL2vAgAHO5U6dOuV2HX/t2rVddjOOHj1a06ZN09NPP60RI0a4nQQoSQUFBW7jeHt7X3K33YQJE3TzzTfryy+/VMeOHZ39R48edbvWPTg4uErt8q5oNWrU0J49e5w/X+yNN95Qly5dFBMToxdeeEHNmzfXP/7xD02ePFk33HCD23//p0+fVnZ2ts6ePauffvpJqampmjVrlsaNG6fu3bu7LHvy5Em3bVe3bl2X4/cXql27tsaOHaspU6Zo4MCBmj9/voYMGaKbb77ZZbnw8HAlJiZq3bp16tOnT5leh6q+7f39/Z0hOC8vz203/3nHjx93e00DAwPl5+dX4vLh4eEaNGiQnnvuOa1Zs6bcda1Zs0ZLly7V8OHD1bp1a1mWpdWrV+vvf/+7y/kPZa0tPj5eY8eOlfTbORMlKctnx4VsNpsef/xxTZ06VY888ohq164tSTp79qzbODab7bq4S/Pl3vclyc3N1c6dO136goODFR4eLun/t0tRUZEOHDigd999V++8846SkpKuvT1AnriE5Hpz5swZ66mnnrJuu+02y263W7Vr17batGljPfPMM85L9po2bWpJcmuPPPKI23j33HOPJcn6/PPP3ebFxcWVOE6bNm2cy5R2yVJMTIzVu3dvy7L+//LAktq2bdsq6JWpOi53mdeFl4hZlmUdPHjQiouLs0JCQqyaNWta4eHh1vjx461//etfLo/r1q2b83Xz8fGxGjVqZPXt29dasWKF2zpKe72TkpIsyyr9ks1Dhw5Z3t7e1owZM0r9vbAsy+rdu7fLJY2XuzS0Omz7zz77zJJk3XfffW7zzl8SWVJbsmSJZVklXxpqWZa1bds2S5K1fft2Z19ZL53ct2+fNXbsWKt169ZWrVq1rMDAQKtTp06Ww+EoV23nnT592rLb7VZQUJB15swZt/Vd7rOjtMtQ8/PzrXr16lkvvfSS8/mVNI6vr+9ln3N1VZ73fUmXhpb0esXHx1uW5bpdfHx8rCZNmlj333+/tXHjxkp8Rp7DLcgBAIARzpkAAABGCBMAAMAIYQIAABghTAAAACOECQAAYIQwAQAAjBAmAACAEcIEAAAwQpgAqqns7GyNHz9eN954o3x9fRUeHq5+/fopLS3Nucxnn32m++67T/Xq1ZOfn59uueUW/fWvf3W7R4fNZnM2u92url27auPGjc75o0aNcs6vWbOmQkJC1KtXLy1YsEDFxcUuY33zzTfq37+/GjZsKD8/PzVr1kzDhg3T0aNHJUkHDx50Wd+FLT09Xa+++qrq1avn9lXe0m9fTR4QEKDZs2dLkpo1a1biODNmzChxXUFBQerWrZvb7bmnTp2q3/3ud5cc83x74IEHVLt2bS1evNhljOLiYnXp0qVC7pcDVDeECaAaOnjwoCIjI7Vx40a98sor2rVrl9atW6fu3bsrISFBkpSamqpu3bqpcePG2rRpk7777jtNmDBBL7zwgoYPH+52G3WHw6GsrCx9+umnql+/vvr27av9+/c75997773KysrSwYMHtXbtWnXv3l0TJkxQ3759dfbsWUnSsWPH1LNnTwUFBWn9+vXas2ePHA6HwsLC3G5y9dFHHykrK8ulRUZG6ve//73y8/O1YsUKt+f9wQcfqLCwUCNHjnT2TZs2zW2c8ePHl7iuLVu2KCwsTH379lVOTk6Jr+0XX3zhHGf58uWSpIyMDGff3LlzNWPGDI0fP15ZWVnOx7366qvav3+/2y3hgeuCh7/OG8AV6N27t3XDDTdYv/zyi9u8EydOWL/88osVHBxsDR482G3+qlWrLEnW0qVLnX2SrNTUVOf04cOHLUnWvHnzLMsq/R4GaWlpliTr7bfftizLslJTUy1vb2+rqKio1NpLu1fEhQYPHmz17NnTrb9bt27WsGHDnNOl3WfmUuv69ttvLUnWhx9+6Oy73H1KLr4fSnFxsdW9e3erT58+lmVZ1p49eyw/Pz+XMYHrCXsmgGrm559/1rp165SQkFDi3UQDAwP1v//7vzp+/Lj+/Oc/u83v16+fWrdurSVLlpS6jvN3oy0sLLxkLT169FCHDh2cexFCQ0N19uxZpaamuu35KI/4+Hht3LhRP/74o7Nv//792rJli+Lj46943F9//VWLFi2S9Nttwa+UzWaTw+HQ1q1b9fbbb2vUqFEaPny4+vfvf8VjAtUZYQKoZn744QdZlqWIiIhSl/n+++8lSW3bti1xfkREhHOZi50+fVrPPPOMatSooW7dul22noiICB08eFCS1LlzZz399NN64IEHVL9+ffXu3VuvvPJKiYcUunTpIn9/f5d2XkxMjMLCwlxu2Z2SkqLw8HD17NnTZZy//OUvbuNcfE7E+XXVqVNHM2fOVGRkpNs45dW0aVO99tprevTRR5WVlaXXX3/daDygOiNMANVMef7jL8+yI0aMkL+/v+rWravly5dr/vz5at++fZnWYbPZnNMvvviisrOzNW/ePN10002aN2+eIiIitGvXLpfHvf/++9q5c6dLO69GjRqKi4tTSkqKLMtScXGxFi5cqNGjR8vLy/Vja/LkyW7jdOzY0W1dX3/9tZYvX66WLVsqJSVFNWvWLPNrU5rRo0erUaNGGj9+vAICAozHA6orb08XAKB8WrVqJZvNpu+++67UZVq3bi1J2rNnj7p06eI2f8+ePWrXrp1L36xZsxQdHS273a4GDRqUuZ49e/aoefPmLn3BwcEaOnSohg4dqunTp+vWW2/VzJkztXDhQucy4eHhatmyZanjjhkzRklJSdq4caOKi4uVmZmp0aNHuy1Xv379S45zfl2tWrVSq1atdPbsWQ0aNEi7d++Wr69vmZ9naby9veXtzUcprm/smQCqmaCgIMXExCg5OdntCglJOnnypO655x4FBQXp1VdfdZu/atUq7d27VyNGjHDpDw0NVcuWLcsVJDZu3Khdu3YpNja21GV8fHzUokWLEmu9lBYtWqhbt25asGCBHA6HoqOj1bRp03KNUZIhQ4bI29tbc+bMMR4LwG+I00A1lJycrK5du+r222/XtGnT1L59e509e1YbNmzQ3LlztWfPHr355psaPny4Hn74YT322GMKCAhQWlqaJk+erCFDhuj+++8v1zoLCgqUnZ2tc+fOKScnR+vWrVNSUpL69u2rhx56SJK0Zs0aLV26VMOHD1fr1q1lWZZWr16tv//97y7nP0jS8ePHlZ2d7dIXGBgoPz8/53R8fLzGjh0r6bdzJkpy6tQpt3Fq165d6mEHm82mxx9/XFOnTtUjjzyi2rVrl+t1AFACD15JAsDAkSNHrISEBKtp06aWj4+PdcMNN1j9+/e3Nm3a5Fxmy5YtVkxMjBUQEGD5+PhYN910kzVz5kzr7NmzLmPpoktDLxYXF2dJsiRZ3t7eVoMGDazo6GhrwYIF1rlz55zL7du3zxo7dqzVunVrq1atWlZgYKDVqVMny+FwOJc5f7lmSW3JkiUu6z19+rRlt9utoKAg68yZM251NW3atMRxHnnkEZd1XXwZan5+vlWvXj3rpZdesiyr/JeGXlzDpS5PBa4HNssyuH4LAABc9zhnAgAAGCFMAAAAI4QJAABghDABAACMECYAAIARwgQAADBCmAAAAEYIEwAAwAhhAgAAGCFMAAAAI4QJAABghDABAACM/B9kGQDx5kL0AwAAAABJRU5ErkJggg==\n"},"metadata":{}}]},{"cell_type":"code","source":["labels = copd_data['COPDSEVERITY'].unique()\n","\n","colors = ['teal', 'brown', 'grey','black']\n","plt.pie(x = C,labels = labels, colors = colors)\n","plt.axis('equal')\n","plt.title('COPDSEVERITY')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":428},"id":"3tVWCI4YDKrB","executionInfo":{"status":"ok","timestamp":1726125080735,"user_tz":-330,"elapsed":627,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"5e82338c-cb49-4dc1-b5f2-4f6cbae615b0"},"execution_count":27,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["copd_data.replace({'COPDSEVERITY':{'SEVERE':1,'MODERATE':1,'VERY SEVERE':2,'MODERATE':3}}, inplace = True)"],"metadata":{"id":"2v3asaqnEFCx","executionInfo":{"status":"ok","timestamp":1726125167376,"user_tz":-330,"elapsed":430,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}}},"execution_count":30,"outputs":[]},{"cell_type":"code","source":["copd_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":461},"id":"D4McyXZCE92J","executionInfo":{"status":"ok","timestamp":1726125179619,"user_tz":-330,"elapsed":30,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"6c895642-7074-4abc-c2b1-b70596850d87"},"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Unnamed: 0   ID  AGE  PackHistory COPDSEVERITY   MWT1   MWT2  MWT1Best  \\\n","0             1   58   77         60.0            1  120.0  120.0     120.0   \n","1             2   57   79         50.0            3  165.0  176.0     176.0   \n","2             3   62   80         11.0            3  201.0  180.0     201.0   \n","3             4  145   56         60.0            2  210.0  210.0     210.0   \n","4             5  136   65         68.0            1  204.0  210.0     210.0   \n","..          ...  ...  ...          ...          ...    ...    ...       ...   \n","96           97   10   68         25.0         MILD  511.0  575.0     575.0   \n","97           98   43   75         40.0         MILD  576.0  577.0     577.0   \n","98           99   74   68         30.0            3  468.0  582.0     582.0   \n","99          100  108   54         30.0            1  688.0  699.0     699.0   \n","100         101   85   78         55.0            3    NaN    NaN       NaN   \n","\n","     FEV1  FEV1PRED  ...   SGRQ  AGEquartiles  copd  gender  smoking  \\\n","0    1.21      36.0  ...  69.55             4     3       1        2   \n","1    1.09      56.0  ...  44.24             4     2       0        2   \n","2    1.52      68.0  ...  44.09             4     2       0        2   \n","3    0.47      14.0  ...  62.04             1     4       1        2   \n","4    1.07      42.0  ...  75.56             1     3       1        2   \n","..    ...       ...  ...    ...           ...   ...     ...      ...   \n","96   2.70      98.0  ...  35.84             2     1       1        2   \n","97   2.90      93.0  ...  15.05             3     1       1        2   \n","98   1.65      67.0  ...  19.70             2     2       0        2   \n","99   1.72      44.0  ...  20.55             1     3       1        2   \n","100  1.15      54.0  ...  30.21             4     2       1        2   \n","\n","     Diabetes  muscular  hypertension  AtrialFib  IHD  \n","0           1         0             0          1    0  \n","1           1         0             0          1    1  \n","2           1         0             0          1    0  \n","3           0         0             1          1    0  \n","4           0         1             1          0    0  \n","..        ...       ...           ...        ...  ...  \n","96          0         1             0          0    0  \n","97          0         1             0          0    1  \n","98          0         0             1          0    0  \n","99          0         0             0          0    0  \n","100         0         0             0          0    0  \n","\n","[101 rows x 24 columns]"],"text/html":["\n","  <div id=\"df-7cd0c78d-a354-44ca-9f13-fba015232b46\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>ID</th>\n","      <th>AGE</th>\n","      <th>PackHistory</th>\n","      <th>COPDSEVERITY</th>\n","      <th>MWT1</th>\n","      <th>MWT2</th>\n","      <th>MWT1Best</th>\n","      <th>FEV1</th>\n","      <th>FEV1PRED</th>\n","      <th>...</th>\n","      <th>SGRQ</th>\n","      <th>AGEquartiles</th>\n","      <th>copd</th>\n","      <th>gender</th>\n","      <th>smoking</th>\n","      <th>Diabetes</th>\n","      <th>muscular</th>\n","      <th>hypertension</th>\n","      <th>AtrialFib</th>\n","      <th>IHD</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>58</td>\n","      <td>77</td>\n","      <td>60.0</td>\n","      <td>1</td>\n","      <td>120.0</td>\n","      <td>120.0</td>\n","      <td>120.0</td>\n","      <td>1.21</td>\n","      <td>36.0</td>\n","      <td>...</td>\n","      <td>69.55</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>57</td>\n","      <td>79</td>\n","      <td>50.0</td>\n","      <td>3</td>\n","      <td>165.0</td>\n","      <td>176.0</td>\n","      <td>176.0</td>\n","      <td>1.09</td>\n","      <td>56.0</td>\n","      <td>...</td>\n","      <td>44.24</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>62</td>\n","      <td>80</td>\n","      <td>11.0</td>\n","      <td>3</td>\n","      <td>201.0</td>\n","      <td>180.0</td>\n","      <td>201.0</td>\n","      <td>1.52</td>\n","      <td>68.0</td>\n","      <td>...</td>\n","      <td>44.09</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>145</td>\n","      <td>56</td>\n","      <td>60.0</td>\n","      <td>2</td>\n","      <td>210.0</td>\n","      <td>210.0</td>\n","      <td>210.0</td>\n","      <td>0.47</td>\n","      <td>14.0</td>\n","      <td>...</td>\n","      <td>62.04</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>136</td>\n","      <td>65</td>\n","      <td>68.0</td>\n","      <td>1</td>\n","      <td>204.0</td>\n","      <td>210.0</td>\n","      <td>210.0</td>\n","      <td>1.07</td>\n","      <td>42.0</td>\n","      <td>...</td>\n","      <td>75.56</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>96</th>\n","      <td>97</td>\n","      <td>10</td>\n","      <td>68</td>\n","      <td>25.0</td>\n","      <td>MILD</td>\n","      <td>511.0</td>\n","      <td>575.0</td>\n","      <td>575.0</td>\n","      <td>2.70</td>\n","      <td>98.0</td>\n","      <td>...</td>\n","      <td>35.84</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>97</th>\n","      <td>98</td>\n","      <td>43</td>\n","      <td>75</td>\n","      <td>40.0</td>\n","      <td>MILD</td>\n","      <td>576.0</td>\n","      <td>577.0</td>\n","      <td>577.0</td>\n","      <td>2.90</td>\n","      <td>93.0</td>\n","      <td>...</td>\n","      <td>15.05</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>98</th>\n","      <td>99</td>\n","      <td>74</td>\n","      <td>68</td>\n","      <td>30.0</td>\n","      <td>3</td>\n","      <td>468.0</td>\n","      <td>582.0</td>\n","      <td>582.0</td>\n","      <td>1.65</td>\n","      <td>67.0</td>\n","      <td>...</td>\n","      <td>19.70</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>99</th>\n","      <td>100</td>\n","      <td>108</td>\n","      <td>54</td>\n","      <td>30.0</td>\n","      <td>1</td>\n","      <td>688.0</td>\n","      <td>699.0</td>\n","      <td>699.0</td>\n","      <td>1.72</td>\n","      <td>44.0</td>\n","      <td>...</td>\n","      <td>20.55</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>100</th>\n","      <td>101</td>\n","      <td>85</td>\n","      <td>78</td>\n","      <td>55.0</td>\n","      <td>3</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.15</td>\n","      <td>54.0</td>\n","      <td>...</td>\n","      <td>30.21</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>101 rows × 24 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7cd0c78d-a354-44ca-9f13-fba015232b46')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7cd0c78d-a354-44ca-9f13-fba015232b46 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7cd0c78d-a354-44ca-9f13-fba015232b46');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5a3b7ccd-a051-4255-bba3-f10106425923\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5a3b7ccd-a051-4255-bba3-f10106425923')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5a3b7ccd-a051-4255-bba3-f10106425923 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_0f7d3e93-26ac-4f80-8bfc-e54acb90e6aa\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('copd_data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_0f7d3e93-26ac-4f80-8bfc-e54acb90e6aa button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('copd_data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"copd_data"}},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["copd_data.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":836},"id":"XOCHOaD5FAxr","executionInfo":{"status":"ok","timestamp":1726125220941,"user_tz":-330,"elapsed":495,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"8a4b370a-c2a7-4c61-a804-4682a7ee5e1e"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Unnamed: 0      0\n","ID              0\n","AGE             0\n","PackHistory     0\n","COPDSEVERITY    0\n","MWT1            2\n","MWT2            1\n","MWT1Best        1\n","FEV1            0\n","FEV1PRED        0\n","FVC             0\n","FVCPRED         0\n","CAT             0\n","HAD             0\n","SGRQ            0\n","AGEquartiles    0\n","copd            0\n","gender          0\n","smoking         0\n","Diabetes        0\n","muscular        0\n","hypertension    0\n","AtrialFib       0\n","IHD             0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Unnamed: 0</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>ID</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>AGE</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>PackHistory</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>COPDSEVERITY</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>MWT1</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>MWT2</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>MWT1Best</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>FEV1</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>FEV1PRED</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>FVC</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>FVCPRED</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>CAT</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>HAD</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>SGRQ</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>AGEquartiles</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>copd</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>gender</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>smoking</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Diabetes</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>muscular</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>hypertension</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>AtrialFib</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>IHD</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["drop = copd_data.dropna()"],"metadata":{"id":"pzFesFPfFHIP","executionInfo":{"status":"ok","timestamp":1726125235710,"user_tz":-330,"elapsed":404,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}}},"execution_count":35,"outputs":[]},{"cell_type":"code","source":["drop.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":836},"id":"CId9WNzRFOvf","executionInfo":{"status":"ok","timestamp":1726125257621,"user_tz":-330,"elapsed":435,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"a5c89791-b846-48ab-9815-5eb0ebbf4563"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Unnamed: 0      0\n","ID              0\n","AGE             0\n","PackHistory     0\n","COPDSEVERITY    0\n","MWT1            0\n","MWT2            0\n","MWT1Best        0\n","FEV1            0\n","FEV1PRED        0\n","FVC             0\n","FVCPRED         0\n","CAT             0\n","HAD             0\n","SGRQ            0\n","AGEquartiles    0\n","copd            0\n","gender          0\n","smoking         0\n","Diabetes        0\n","muscular        0\n","hypertension    0\n","AtrialFib       0\n","IHD             0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Unnamed: 0</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>ID</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>AGE</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>PackHistory</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>COPDSEVERITY</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>MWT1</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>MWT2</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>MWT1Best</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>FEV1</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>FEV1PRED</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>FVC</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>FVCPRED</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>CAT</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>HAD</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>SGRQ</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>AGEquartiles</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>copd</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>gender</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>smoking</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Diabetes</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>muscular</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>hypertension</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>AtrialFib</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>IHD</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["X = drop.drop('COPDSEVERITY', axis = 1)\n","Y = drop['COPDSEVERITY']"],"metadata":{"id":"Dc3HZ_0wFT3w","executionInfo":{"status":"ok","timestamp":1726125765786,"user_tz":-330,"elapsed":5,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}}},"execution_count":56,"outputs":[]},{"cell_type":"code","source":["X_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size = 0.2, random_state = 1)"],"metadata":{"id":"8fw1CR8gGfM9","executionInfo":{"status":"ok","timestamp":1726125766956,"user_tz":-330,"elapsed":4,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}}},"execution_count":57,"outputs":[]},{"cell_type":"markdown","source":["*Logistic Regression*"],"metadata":{"id":"PT_oMCjmGDjX"}},{"cell_type":"code","source":["logreg = LogisticRegression()\n","logreg"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"GiIxQnzoFgZY","executionInfo":{"status":"ok","timestamp":1726125768466,"user_tz":-330,"elapsed":15,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"79877092-4661-4554-82a6-1569eb108cfa"},"execution_count":58,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression()"],"text/html":["<style>#sk-container-id-5 {color: black;}#sk-container-id-5 pre{padding: 0;}#sk-container-id-5 div.sk-toggleable {background-color: white;}#sk-container-id-5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-5 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-5 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-5 div.sk-item {position: relative;z-index: 1;}#sk-container-id-5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-5 div.sk-item::before, #sk-container-id-5 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-5 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-5 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-5 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-5 div.sk-label-container {text-align: center;}#sk-container-id-5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-5 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-5\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" checked><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":58}]},{"cell_type":"markdown","source":[],"metadata":{"id":"zAoDRNNIHS4n"}},{"cell_type":"code","source":["logreg.fit(X_train,Y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":315},"id":"-gFkg1XOGBFN","executionInfo":{"status":"error","timestamp":1726125770932,"user_tz":-330,"elapsed":463,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"ae2bec58-85db-4d69-85a0-d043e31812df"},"execution_count":59,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"Unknown label type: unknown. Maybe you are trying to fit a classifier, which expects discrete classes on a regression target with continuous values.","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-59-f011ca1c6e59>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mlogreg\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mY_train\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/sklearn/base.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(estimator, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1150\u001b[0m                 )\n\u001b[1;32m   1151\u001b[0m             ):\n\u001b[0;32m-> 1152\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mfit_method\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mestimator\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1153\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1154\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mwrapper\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, X, y, sample_weight)\u001b[0m\n\u001b[1;32m   1214\u001b[0m             \u001b[0maccept_large_sparse\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msolver\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m\"liblinear\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"sag\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"saga\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1215\u001b[0m         )\n\u001b[0;32m-> 1216\u001b[0;31m         \u001b[0mcheck_classification_targets\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1217\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mclasses_\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munique\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1218\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/sklearn/utils/multiclass.py\u001b[0m in \u001b[0;36mcheck_classification_targets\u001b[0;34m(y)\u001b[0m\n\u001b[1;32m    214\u001b[0m         \u001b[0;34m\"multilabel-sequences\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    215\u001b[0m     ]:\n\u001b[0;32m--> 216\u001b[0;31m         raise ValueError(\n\u001b[0m\u001b[1;32m    217\u001b[0m             \u001b[0;34mf\"Unknown label type: {y_type}. Maybe you are trying to fit a \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    218\u001b[0m             \u001b[0;34m\"classifier, which expects discrete classes on a \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: Unknown label type: unknown. Maybe you are trying to fit a classifier, which expects discrete classes on a regression target with continuous values."]}]},{"cell_type":"code","source":["Y_train.isnull().sum()"],"metadata":{"id":"TksjnCToHdNG","executionInfo":{"status":"error","timestamp":1726125840293,"user_tz":-330,"elapsed":412,"user":{"displayName":"siddharth P santhosh","userId":"13793384757789431104"}},"outputId":"38345a56-87e7-477d-d888-cbcb0527569d","colab":{"base_uri":"https://localhost:8080/","height":110}},"execution_count":61,"outputs":[{"output_type":"error","ename":"SyntaxError","evalue":"incomplete input (<ipython-input-61-b008c8c1f68c>, line 1)","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-61-b008c8c1f68c>\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    Y_train.isnull().sum(\u001b[0m\n\u001b[0m                         ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m incomplete input\n"]}]}]}